,id,author,subject,content_url,dtype,date,content
0,1,Daniel Fullarton (JIRA),  [jira] [Created] (CAMEL-11099) Unhandled ClassCastException if fault detail is not JaxbElement,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061008.1491177558000.187517.1491177581519%40Atlassian.JIRA%3E,issues,"Sun, 02 Apr 2017 23:59:41 GMT","Daniel Fullarton created CAMEL-11099:&#010;----------------------------------------&#010;&#010;             Summary: Unhandled ClassCastException if fault detail is not JaxbElement&#010;                 Key: CAMEL-11099&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11099&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-soap&#010;            Reporter: Daniel Fullarton&#010;            Priority: Minor&#010;&#010;&#010;Hi,&#010;&#010;I've been having some issues with handling some SOAP faults that come in with a detail message&#010;that is undefined in their WSDL, the result is that they end up as xerces dom elements rather&#010;than JAXBElements.&#010;&#010;I end up with a pretty ugly message that looks like this : &#010;{noformat}&#010;java.lang.ClassCastException: com.sun.org.apache.xerces.internal.dom.ElementNSImpl cannot&#010;be cast to javax.xml.bind.JAXBElement&#010;&#009;at org.apache.camel.dataformat.soap.Soap11DataFormatAdapter.createExceptionFromFault(Soap11DataFormatAdapter.java:195)&#010;&#009;at org.apache.camel.dataformat.soap.Soap11DataFormatAdapter.doUnmarshal(Soap11DataFormatAdapter.java:170)&#010;&#009;at org.apache.camel.dataformat.soap.SoapJaxbDataFormat.unmarshal(SoapJaxbDataFormat.java:287)&#010;&#009;at org.apache.camel.processor.UnmarshalProcessor.process(UnmarshalProcessor.java:69)&#010;&#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:460)&#010;&#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:190)&#010;{noformat}&#010;&#010;It's pretty had to intercept this in the pipeline, so at the moment I've handled parsing the&#010;response myself rather than the soap dataformat, but I would like to avoid this in the future&#010;as it does require a bit of custom code.&#010;&#010;I'll create a PR that demonstrates what I believe is a reasonable workaround.&#010;&#010;Cheers,&#010;Daniel&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
1,2,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11099) Unhandled ClassCastException if fault detail is not JaxbElement,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061008.1491177558000.187519.1491177687915%40Atlassian.JIRA%3E,issues,"Mon, 03 Apr 2017 00:01:27 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11099?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15952892#comment-15952892&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11099:&#010;----------------------------------------&#010;&#010;GitHub user linead opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1589&#010;&#010;    CAMEL-11099: Resolve issue caused by unresolve elements hanging off tâ€¦&#010;&#010;    &#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/linead/camel soap-fault-error-handling&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1589.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1589&#010;    &#010;----&#010;commit 34edd2cd3edc83b10c4c9bae0518fcf8ca144735&#010;Author: Daniel Fullarton &lt;daniel.fullarton@nab.com.au&gt;&#010;Date:   2017-04-02T23:32:13Z&#010;&#010;    CAMEL-11099: Resolve issue caused by unresolve elements hanging off the faul detail&#010;&#010;----&#010;&#010;&#010;&gt; Unhandled ClassCastException if fault detail is not JaxbElement&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11099&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11099&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-soap&#010;&gt;            Reporter: Daniel Fullarton&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; Hi,&#010;&gt; I've been having some issues with handling some SOAP faults that come in with a detail&#010;message that is undefined in their WSDL, the result is that they end up as xerces dom elements&#010;rather than JAXBElements.&#010;&gt; I end up with a pretty ugly message that looks like this : &#010;&gt; {noformat}&#010;&gt; java.lang.ClassCastException: com.sun.org.apache.xerces.internal.dom.ElementNSImpl cannot&#010;be cast to javax.xml.bind.JAXBElement&#010;&gt; &#009;at org.apache.camel.dataformat.soap.Soap11DataFormatAdapter.createExceptionFromFault(Soap11DataFormatAdapter.java:195)&#010;&gt; &#009;at org.apache.camel.dataformat.soap.Soap11DataFormatAdapter.doUnmarshal(Soap11DataFormatAdapter.java:170)&#010;&gt; &#009;at org.apache.camel.dataformat.soap.SoapJaxbDataFormat.unmarshal(SoapJaxbDataFormat.java:287)&#010;&gt; &#009;at org.apache.camel.processor.UnmarshalProcessor.process(UnmarshalProcessor.java:69)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:460)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:190)&#010;&gt; {noformat}&#010;&gt; It's pretty had to intercept this in the pipeline, so at the moment I've handled parsing&#010;the response myself rather than the soap dataformat, but I would like to avoid this in the&#010;future as it does require a bit of custom code.&#010;&gt; I'll create a PR that demonstrates what I believe is a reasonable workaround.&#010;&gt; Cheers,&#010;&gt; Daniel&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
2,3,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11099) Unhandled ClassCastException if fault detail is not JaxbElement,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061008.1491177558000.200656.1491312821850%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 13:33:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11099?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11099.&#010;-----------------------------------&#010;       Resolution: Fixed&#010;         Assignee: Zoran Regvart&#010;    Fix Version/s: 2.19.0&#010;&#010;Merged to master from [PR#1589|https://github.com/apache/camel/pull/1589]&#010;&#010;&gt; Unhandled ClassCastException if fault detail is not JaxbElement&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11099&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11099&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-soap&#010;&gt;            Reporter: Daniel Fullarton&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Hi,&#010;&gt; I've been having some issues with handling some SOAP faults that come in with a detail&#010;message that is undefined in their WSDL, the result is that they end up as xerces dom elements&#010;rather than JAXBElements.&#010;&gt; I end up with a pretty ugly message that looks like this : &#010;&gt; {noformat}&#010;&gt; java.lang.ClassCastException: com.sun.org.apache.xerces.internal.dom.ElementNSImpl cannot&#010;be cast to javax.xml.bind.JAXBElement&#010;&gt; &#009;at org.apache.camel.dataformat.soap.Soap11DataFormatAdapter.createExceptionFromFault(Soap11DataFormatAdapter.java:195)&#010;&gt; &#009;at org.apache.camel.dataformat.soap.Soap11DataFormatAdapter.doUnmarshal(Soap11DataFormatAdapter.java:170)&#010;&gt; &#009;at org.apache.camel.dataformat.soap.SoapJaxbDataFormat.unmarshal(SoapJaxbDataFormat.java:287)&#010;&gt; &#009;at org.apache.camel.processor.UnmarshalProcessor.process(UnmarshalProcessor.java:69)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:460)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:190)&#010;&gt; {noformat}&#010;&gt; It's pretty had to intercept this in the pipeline, so at the moment I've handled parsing&#010;the response myself rather than the soap dataformat, but I would like to avoid this in the&#010;future as it does require a bit of custom code.&#010;&gt; I'll create a PR that demonstrates what I believe is a reasonable workaround.&#010;&gt; Cheers,&#010;&gt; Daniel&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
3,4,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11099) Unhandled ClassCastException if fault detail is not JaxbElement,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061008.1491177558000.206772.1491356321613%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 01:38:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11099?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15956165#comment-15956165&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11099:&#010;----------------------------------------&#010;&#010;Github user linead closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1589&#010;&#010;&#010;&gt; Unhandled ClassCastException if fault detail is not JaxbElement&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11099&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11099&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-soap&#010;&gt;            Reporter: Daniel Fullarton&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Hi,&#010;&gt; I've been having some issues with handling some SOAP faults that come in with a detail&#010;message that is undefined in their WSDL, the result is that they end up as xerces dom elements&#010;rather than JAXBElements.&#010;&gt; I end up with a pretty ugly message that looks like this : &#010;&gt; {noformat}&#010;&gt; java.lang.ClassCastException: com.sun.org.apache.xerces.internal.dom.ElementNSImpl cannot&#010;be cast to javax.xml.bind.JAXBElement&#010;&gt; &#009;at org.apache.camel.dataformat.soap.Soap11DataFormatAdapter.createExceptionFromFault(Soap11DataFormatAdapter.java:195)&#010;&gt; &#009;at org.apache.camel.dataformat.soap.Soap11DataFormatAdapter.doUnmarshal(Soap11DataFormatAdapter.java:170)&#010;&gt; &#009;at org.apache.camel.dataformat.soap.SoapJaxbDataFormat.unmarshal(SoapJaxbDataFormat.java:287)&#010;&gt; &#009;at org.apache.camel.processor.UnmarshalProcessor.process(UnmarshalProcessor.java:69)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:460)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:190)&#010;&gt; {noformat}&#010;&gt; It's pretty had to intercept this in the pipeline, so at the moment I've handled parsing&#010;the response myself rather than the soap dataformat, but I would like to avoid this in the&#010;future as it does require a bit of custom code.&#010;&gt; I'll create a PR that demonstrates what I believe is a reasonable workaround.&#010;&gt; Cheers,&#010;&gt; Daniel&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
4,5,,[jira] [Commented] (CAMEL-11092) If setting Exchange.REST_HTTP_URI the RestProducer should remove Exchange.HTTP_PATH header,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061008.1491177558000.206772.1491356321613%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 01:38:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11099?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15956165#comment-15956165&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11099:&#010;----------------------------------------&#010;&#010;Github user linead closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1589&#010;&#010;&#010;&gt; Unhandled ClassCastException if fault detail is not JaxbElement&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11099&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11099&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-soap&#010;&gt;            Reporter: Daniel Fullarton&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Hi,&#010;&gt; I've been having some issues with handling some SOAP faults that come in with a detail&#010;message that is undefined in their WSDL, the result is that they end up as xerces dom elements&#010;rather than JAXBElements.&#010;&gt; I end up with a pretty ugly message that looks like this : &#010;&gt; {noformat}&#010;&gt; java.lang.ClassCastException: com.sun.org.apache.xerces.internal.dom.ElementNSImpl cannot&#010;be cast to javax.xml.bind.JAXBElement&#010;&gt; &#009;at org.apache.camel.dataformat.soap.Soap11DataFormatAdapter.createExceptionFromFault(Soap11DataFormatAdapter.java:195)&#010;&gt; &#009;at org.apache.camel.dataformat.soap.Soap11DataFormatAdapter.doUnmarshal(Soap11DataFormatAdapter.java:170)&#010;&gt; &#009;at org.apache.camel.dataformat.soap.SoapJaxbDataFormat.unmarshal(SoapJaxbDataFormat.java:287)&#010;&gt; &#009;at org.apache.camel.processor.UnmarshalProcessor.process(UnmarshalProcessor.java:69)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:460)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:190)&#010;&gt; {noformat}&#010;&gt; It's pretty had to intercept this in the pipeline, so at the moment I've handled parsing&#010;the response myself rather than the soap dataformat, but I would like to avoid this in the&#010;future as it does require a bit of custom code.&#010;&gt; I'll create a PR that demonstrates what I believe is a reasonable workaround.&#010;&gt; Cheers,&#010;&gt; Daniel&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
5,6,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11092) If setting Exchange.REST_HTTP_URI the RestProducer should remove Exchange.HTTP_PATH header,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13060026.1490791958000.188791.1491205481677%40Atlassian.JIRA%3E,issues,"Mon, 03 Apr 2017 07:44:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11092?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15953092#comment-15953092&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11092:&#010;----------------------------------------&#010;&#010;Github user zregvart closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1580&#010;&#010;&#010;&gt; If setting Exchange.REST_HTTP_URI the RestProducer should remove Exchange.HTTP_PATH header&#010;&gt; ------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11092&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11092&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;&#010;&gt; One of patterns in using microservices is consuming REST and producing from REST resources&#010;using REST component. For instance have a frontend exposed API using REST DSL and calling&#010;backend using REST producer.&#010;&gt; As most HTTP components generate URIs by concatenating {{Exchange.REST_HTTP_URI}} and&#010;{{Exchange.HTTP_PATH}} when the REST producer generates {{Exchange.REST_HTTP_URI}} header&#010;that contains the whole URI to be used it should remove the {{Exchange.HTTP_PATH}} header&#010;in order to prevent incorrect URIs.&#010;&gt; For example {{Exchange.HTTP_PATH}} is set by the REST consumer to {{/api/pet/123}}, and&#010;REST producer is configured with {{Exchange.REST_HTTP_URI}} with URI {{/api/pet/&amp;#123;petId&amp;#125;}}&#010;if the {{Exchange.HTTP_PATH}} is not removed HTTP component (IMHO all except for Restlet)&#010;would try to send the request to {{/api/pet/&amp;#123;petId&amp;#125;/api/pet/123}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
6,7,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11092) If setting Exchange.REST_HTTP_URI the RestProducer should remove Exchange.HTTP_PATH header,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13060026.1490791958000.263565.1491985961783%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 08:32:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11092?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965551#comment-15965551&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11092:&#010;-------------------------------------&#010;&#010;Is this not fixed?&#010;&#010;&gt; If setting Exchange.REST_HTTP_URI the RestProducer should remove Exchange.HTTP_PATH header&#010;&gt; ------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11092&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11092&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;&#010;&gt; One of patterns in using microservices is consuming REST and producing from REST resources&#010;using REST component. For instance have a frontend exposed API using REST DSL and calling&#010;backend using REST producer.&#010;&gt; As most HTTP components generate URIs by concatenating {{Exchange.REST_HTTP_URI}} and&#010;{{Exchange.HTTP_PATH}} when the REST producer generates {{Exchange.REST_HTTP_URI}} header&#010;that contains the whole URI to be used it should remove the {{Exchange.HTTP_PATH}} header&#010;in order to prevent incorrect URIs.&#010;&gt; For example {{Exchange.HTTP_PATH}} is set by the REST consumer to {{/api/pet/123}}, and&#010;REST producer is configured with {{Exchange.REST_HTTP_URI}} with URI {{/api/pet/&amp;#123;petId&amp;#125;}}&#010;if the {{Exchange.HTTP_PATH}} is not removed HTTP component (IMHO all except for Restlet)&#010;would try to send the request to {{/api/pet/&amp;#123;petId&amp;#125;/api/pet/123}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
7,8,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11092) If setting Exchange.REST_HTTP_URI the RestProducer should remove Exchange.HTTP_PATH header,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13060026.1490791958000.263623.1491986802052%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 08:46:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11092?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11092.&#010;-----------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; If setting Exchange.REST_HTTP_URI the RestProducer should remove Exchange.HTTP_PATH header&#010;&gt; ------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11092&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11092&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; One of patterns in using microservices is consuming REST and producing from REST resources&#010;using REST component. For instance have a frontend exposed API using REST DSL and calling&#010;backend using REST producer.&#010;&gt; As most HTTP components generate URIs by concatenating {{Exchange.REST_HTTP_URI}} and&#010;{{Exchange.HTTP_PATH}} when the REST producer generates {{Exchange.REST_HTTP_URI}} header&#010;that contains the whole URI to be used it should remove the {{Exchange.HTTP_PATH}} header&#010;in order to prevent incorrect URIs.&#010;&gt; For example {{Exchange.HTTP_PATH}} is set by the REST consumer to {{/api/pet/123}}, and&#010;REST producer is configured with {{Exchange.REST_HTTP_URI}} with URI {{/api/pet/&amp;#123;petId&amp;#125;}}&#010;if the {{Exchange.HTTP_PATH}} is not removed HTTP component (IMHO all except for Restlet)&#010;would try to send the request to {{/api/pet/&amp;#123;petId&amp;#125;/api/pet/123}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
8,9,,[jira] [Updated] (CAMEL-11019) Customise message history dump format,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13060026.1490791958000.263623.1491986802052%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 08:46:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11092?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11092.&#010;-----------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; If setting Exchange.REST_HTTP_URI the RestProducer should remove Exchange.HTTP_PATH header&#010;&gt; ------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11092&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11092&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; One of patterns in using microservices is consuming REST and producing from REST resources&#010;using REST component. For instance have a frontend exposed API using REST DSL and calling&#010;backend using REST producer.&#010;&gt; As most HTTP components generate URIs by concatenating {{Exchange.REST_HTTP_URI}} and&#010;{{Exchange.HTTP_PATH}} when the REST producer generates {{Exchange.REST_HTTP_URI}} header&#010;that contains the whole URI to be used it should remove the {{Exchange.HTTP_PATH}} header&#010;in order to prevent incorrect URIs.&#010;&gt; For example {{Exchange.HTTP_PATH}} is set by the REST consumer to {{/api/pet/123}}, and&#010;REST producer is configured with {{Exchange.REST_HTTP_URI}} with URI {{/api/pet/&amp;#123;petId&amp;#125;}}&#010;if the {{Exchange.HTTP_PATH}} is not removed HTTP component (IMHO all except for Restlet)&#010;would try to send the request to {{/api/pet/&amp;#123;petId&amp;#125;/api/pet/123}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
9,10,Zoran Regvart (JIRA),  [jira] [Updated] (CAMEL-11019) Customise message history dump format,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13056351.1489596667000.188860.1491206261673%40Atlassian.JIRA%3E,issues,"Mon, 03 Apr 2017 07:57:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11019?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart updated CAMEL-11019:&#010;----------------------------------&#010;    Summary: Customise message history dump format  (was: Please insert setter and getter&#010;for MESSAGE_HISTORY_HEADER and MESSAGE_HISTORY_OUTPUT)&#010;&#010;&gt; Customise message history dump format&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11019&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11019&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Wish&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.17.5&#010;&gt;            Reporter: BjÃ¶rn Paulsen&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; We use IDs for Processors and some others. Our IDs are longer than 18 chars so we cannot&#010;read the MessageHistory clearly. But MessageHelper is final and both properties too. Please&#010;give us a chance to customize the MessageHistory. Thank you&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
10,11,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11019) Customise message history dump format,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13056351.1489596667000.188889.1491206741822%40Atlassian.JIRA%3E,issues,"Mon, 03 Apr 2017 08:05:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11019?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11019.&#010;-----------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s:     (was: Future)&#010;                   2.19.0&#010;&#010;Merged into master from [PR#1587|https://github.com/apache/camel/pull/1587]&#010;&#010;&gt; Customise message history dump format&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11019&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11019&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Wish&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.17.5&#010;&gt;            Reporter: BjÃ¶rn Paulsen&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We use IDs for Processors and some others. Our IDs are longer than 18 chars so we cannot&#010;read the MessageHistory clearly. But MessageHelper is final and both properties too. Please&#010;give us a chance to customize the MessageHistory. Thank you&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
11,12,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11019) Customise message history dump format,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13056351.1489596667000.188924.1491207281678%40Atlassian.JIRA%3E,issues,"Mon, 03 Apr 2017 08:14:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11019?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15953113#comment-15953113&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11019:&#010;----------------------------------------&#010;&#010;Github user onders86 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1587&#010;&#010;&#010;&gt; Customise message history dump format&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11019&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11019&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Wish&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.17.5&#010;&gt;            Reporter: BjÃ¶rn Paulsen&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We use IDs for Processors and some others. Our IDs are longer than 18 chars so we cannot&#010;read the MessageHistory clearly. But MessageHelper is final and both properties too. Please&#010;give us a chance to customize the MessageHistory. Thank you&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
12,13,,[jira] [Created] (CAMEL-11100) service-call : add an option configure the expression to use (i.e simple),http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13056351.1489596667000.188924.1491207281678%40Atlassian.JIRA%3E,issues,"Mon, 03 Apr 2017 08:14:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11019?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15953113#comment-15953113&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11019:&#010;----------------------------------------&#010;&#010;Github user onders86 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1587&#010;&#010;&#010;&gt; Customise message history dump format&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11019&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11019&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Wish&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.17.5&#010;&gt;            Reporter: BjÃ¶rn Paulsen&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We use IDs for Processors and some others. Our IDs are longer than 18 chars so we cannot&#010;read the MessageHistory clearly. But MessageHelper is final and both properties too. Please&#010;give us a chance to customize the MessageHistory. Thank you&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
13,14,Luca Burgazzoli (JIRA),  [jira] [Created] (CAMEL-11100) service-call : add an option configure the expression to use (i.e simple),http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061075.1491212895000.189392.1491212921618%40Atlassian.JIRA%3E,issues,"Mon, 03 Apr 2017 09:48:41 GMT","Luca Burgazzoli created CAMEL-11100:&#010;---------------------------------------&#010;&#010;             Summary: service-call : add an option configure the expression to use (i.e simple)&#010;                 Key: CAMEL-11100&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11100&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core, camel-spring-boot&#010;            Reporter: Luca Burgazzoli&#010;            Assignee: Luca Burgazzoli&#010;            Priority: Minor&#010;             Fix For: 2.19.0&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
14,15,Luca Burgazzoli (JIRA),  [jira] [Work started] (CAMEL-11100) service-call : add an option configure the expression to use (i.e simple),http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061075.1491212895000.189430.1491213402127%40Atlassian.JIRA%3E,issues,"Mon, 03 Apr 2017 09:56:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11100?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Work on CAMEL-11100 started by Luca Burgazzoli.&#010;-----------------------------------------------&#010;&gt; service-call : add an option configure the expression to use (i.e simple)&#010;&gt; -------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11100&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11100&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, camel-spring-boot&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
15,16,Luca Burgazzoli (JIRA),  [jira] [Resolved] (CAMEL-11100) service-call : add an option configure the expression to use (i.e simple),http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061075.1491212895000.190883.1491224801596%40Atlassian.JIRA%3E,issues,"Mon, 03 Apr 2017 13:06:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11100?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-11100.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; service-call : add an option configure the expression to use (i.e simple)&#010;&gt; -------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11100&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11100&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, camel-spring-boot&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
16,17,,[jira] [Created] (CAMEL-11101) Update CXF dependency to latest version > 3.1.10,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061075.1491212895000.190883.1491224801596%40Atlassian.JIRA%3E,issues,"Mon, 03 Apr 2017 13:06:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11100?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-11100.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; service-call : add an option configure the expression to use (i.e simple)&#010;&gt; -------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11100&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11100&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, camel-spring-boot&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
17,18,Roman (JIRA),  [jira] [Created] (CAMEL-11101) Update CXF dependency to latest version > 3.1.10,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061100.1491219445000.190054.1491219461519%40Atlassian.JIRA%3E,issues,"Mon, 03 Apr 2017 11:37:41 GMT","Roman created CAMEL-11101:&#010;-----------------------------&#010;&#010;             Summary: Update CXF dependency to latest version &gt; 3.1.10&#010;                 Key: CAMEL-11101&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11101&#010;             Project: Camel&#010;          Issue Type: Task&#010;          Components: camel-cxf&#010;    Affects Versions: 2.18.3, 2.19.0&#010;            Reporter: Roman&#010;            Priority: Minor&#010;&#010;&#010;Please update CXF dep to latest available version &gt; 3.1.10 to fix a number of issues. https://issues.apache.org/jira/browse/CXF-7310&#010;is particularly a sought fix for us. Thank you.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
18,19,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11101) Update CXF dependency to latest version > 3.1.10,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061100.1491219445000.200450.1491309461844%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 12:37:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11101?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11101.&#010;---------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.19.0&#010;                   2.18.4&#010;&#010;&gt; Update CXF dependency to latest version &gt; 3.1.10&#010;&gt; ------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11101&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11101&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-cxf&#010;&gt;    Affects Versions: 2.18.3, 2.19.0&#010;&gt;            Reporter: Roman&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Please update CXF dep to latest available version &gt; 3.1.10 to fix a number of issues.&#010;https://issues.apache.org/jira/browse/CXF-7310 is particularly a sought fix for us. Thank&#010;you.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
19,20,,[jira] [Commented] (CAMEL-10969) JSonSchemaHelper - Json parser should we use json-simple instead,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061100.1491219445000.200450.1491309461844%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 12:37:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11101?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11101.&#010;---------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.19.0&#010;                   2.18.4&#010;&#010;&gt; Update CXF dependency to latest version &gt; 3.1.10&#010;&gt; ------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11101&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11101&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-cxf&#010;&gt;    Affects Versions: 2.18.3, 2.19.0&#010;&gt;            Reporter: Roman&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Please update CXF dep to latest available version &gt; 3.1.10 to fix a number of issues.&#010;https://issues.apache.org/jira/browse/CXF-7310 is particularly a sought fix for us. Thank&#010;you.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
20,21,Luca Burgazzoli (JIRA),  [jira] [Commented] (CAMEL-10969) JSonSchemaHelper - Json parser should we use json-simple instead,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13049342.1488996403000.190380.1491222161944%40Atlassian.JIRA%3E,issues,"Mon, 03 Apr 2017 12:22:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10969?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15953383#comment-15953383&#010;] &#010;&#010;Luca Burgazzoli commented on CAMEL-10969:&#010;-----------------------------------------&#010;&#010;Yeah Johnzon looks good too&#010;&#010;&gt; JSonSchemaHelper - Json parser should we use json-simple instead&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10969&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10969&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; We use our own json parser in JSonSchemaHelper in different places as part of the catalog&#010;stuff we have done over the last 3-4 years. And as it has expanded to be used in more places&#010;than just as in the beginning in apt, we are duplicating some of that code around.&#010;&gt; We could consider shading in json-simple in camel-core and camel-catalog.&#010;&gt; And where its used in apt, maven plugins and elsewhere.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
21,22,,[jira] [Commented] (CAMEL-10949) Websocket clients get message from all resources on one port,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13049342.1488996403000.190380.1491222161944%40Atlassian.JIRA%3E,issues,"Mon, 03 Apr 2017 12:22:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10969?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15953383#comment-15953383&#010;] &#010;&#010;Luca Burgazzoli commented on CAMEL-10969:&#010;-----------------------------------------&#010;&#010;Yeah Johnzon looks good too&#010;&#010;&gt; JSonSchemaHelper - Json parser should we use json-simple instead&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10969&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10969&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; We use our own json parser in JSonSchemaHelper in different places as part of the catalog&#010;stuff we have done over the last 3-4 years. And as it has expanded to be used in more places&#010;than just as in the beginning in apt, we are duplicating some of that code around.&#010;&gt; We could consider shading in json-simple in camel-core and camel-catalog.&#010;&gt; And where its used in apt, maven plugins and elsewhere.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
22,23,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10949) Websocket clients get message from all resources on one port,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048524.1488807691000.191237.1491227561673%40Atlassian.JIRA%3E,issues,"Mon, 03 Apr 2017 13:52:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10949?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15953513#comment-15953513&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10949:&#010;----------------------------------------&#010;&#010;GitHub user onders86 opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1590&#010;&#010;    CAMEL-10949 - websocket clients will get messages on which uri they a…&#010;&#010;    …re subscribed to if sendToAll set to true&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/onders86/camel CAMEL-10949&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1590.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1590&#010;    &#010;----&#010;commit b4c9ec2db90e4dc4d8e9e20dbe85be748976237e&#010;Author: onders86 &lt;ondersezgin@gmail.com&gt;&#010;Date:   2017-04-03T13:49:31Z&#010;&#010;    CAMEL-10949 - websocket clients will get messages on which uri they are subscribed toif&#010;sendToAll set to true&#010;&#010;----&#010;&#010;&#010;&gt; Websocket clients get message from all resources on one port &#010;&gt; -------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10949&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10949&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-websocket&#010;&gt;            Reporter: Ravi Godbole&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; Routebuider configuration in which only resource URI is different while port is same.&#010;&gt; 1. newsTopic&#010;&gt; 2. stockQuoteTopic&#010;&gt;  Ideally other clients connecting to newsTopic should get messages published&#010;&gt;  on this topic only but they are also getting messages published on stockQuoteTopic.&#010;&gt;  On further investigation I found out that memory store used to by sendAll&#010;&gt;  is shared by all resource uri for a given port in the server.&#010;&gt;  from(""activemq:topic:newsTopic"").to(""websocket://&#010;&gt;  0.0.0.0:9090/newsTopic?sendToAll=true"");&#010;&gt;         from(""activemq:topic:stockQuoteTopic"").to(""websocket://&#010;&gt;  0.0.0.0:9090/stockQuoteTopic?sendToAll=true"");&#010;&gt;  Sample Ouput received from client &#010;&gt;  2017-03-06 15:35:15.789:INFO::main: Logging initialized @313ms&#010;&gt;  Connected to server&#010;&gt;  Message received from server:MSFT        [ published on stockQuoteTopic. Expected ..]&#010;&gt;  Message received from server:CNBC News   [ published on newsTopic. should not have received&#010;]&#010;&gt;  Message received from server:BBC News    [ published on newsTopic. should not have received&#010;]&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
23,24,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-10949) Websocket clients get message from all resources on one port,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048524.1488807691000.201086.1491316722377%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 14:38:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10949?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-10949.&#010;---------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.19.0&#010;                   2.18.4&#010;&#010;Thanks for the PR&#010;&#010;&gt; Websocket clients get message from all resources on one port &#010;&gt; -------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10949&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10949&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-websocket&#010;&gt;            Reporter: Ravi Godbole&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Routebuider configuration in which only resource URI is different while port is same.&#010;&gt; 1. newsTopic&#010;&gt; 2. stockQuoteTopic&#010;&gt;  Ideally other clients connecting to newsTopic should get messages published&#010;&gt;  on this topic only but they are also getting messages published on stockQuoteTopic.&#010;&gt;  On further investigation I found out that memory store used to by sendAll&#010;&gt;  is shared by all resource uri for a given port in the server.&#010;&gt;  from(""activemq:topic:newsTopic"").to(""websocket://&#010;&gt;  0.0.0.0:9090/newsTopic?sendToAll=true"");&#010;&gt;         from(""activemq:topic:stockQuoteTopic"").to(""websocket://&#010;&gt;  0.0.0.0:9090/stockQuoteTopic?sendToAll=true"");&#010;&gt;  Sample Ouput received from client &#010;&gt;  2017-03-06 15:35:15.789:INFO::main: Logging initialized @313ms&#010;&gt;  Connected to server&#010;&gt;  Message received from server:MSFT        [ published on stockQuoteTopic. Expected ..]&#010;&gt;  Message received from server:CNBC News   [ published on newsTopic. should not have received&#010;]&#010;&gt;  Message received from server:BBC News    [ published on newsTopic. should not have received&#010;]&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
24,25,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10949) Websocket clients get message from all resources on one port,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048524.1488807691000.201443.1491320561783%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 15:42:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10949?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15955273#comment-15955273&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10949:&#010;----------------------------------------&#010;&#010;Github user onders86 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1590&#010;&#010;&#010;&gt; Websocket clients get message from all resources on one port &#010;&gt; -------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10949&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10949&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-websocket&#010;&gt;            Reporter: Ravi Godbole&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Routebuider configuration in which only resource URI is different while port is same.&#010;&gt; 1. newsTopic&#010;&gt; 2. stockQuoteTopic&#010;&gt;  Ideally other clients connecting to newsTopic should get messages published&#010;&gt;  on this topic only but they are also getting messages published on stockQuoteTopic.&#010;&gt;  On further investigation I found out that memory store used to by sendAll&#010;&gt;  is shared by all resource uri for a given port in the server.&#010;&gt;  from(""activemq:topic:newsTopic"").to(""websocket://&#010;&gt;  0.0.0.0:9090/newsTopic?sendToAll=true"");&#010;&gt;         from(""activemq:topic:stockQuoteTopic"").to(""websocket://&#010;&gt;  0.0.0.0:9090/stockQuoteTopic?sendToAll=true"");&#010;&gt;  Sample Ouput received from client &#010;&gt;  2017-03-06 15:35:15.789:INFO::main: Logging initialized @313ms&#010;&gt;  Connected to server&#010;&gt;  Message received from server:MSFT        [ published on stockQuoteTopic. Expected ..]&#010;&gt;  Message received from server:CNBC News   [ published on newsTopic. should not have received&#010;]&#010;&gt;  Message received from server:BBC News    [ published on newsTopic. should not have received&#010;]&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
25,26,,[jira] [Created] (CAMEL-11102) Camel SFTP is taking time to transfer file on sftp server.When target target directory contains lot of files,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048524.1488807691000.201443.1491320561783%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 15:42:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10949?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15955273#comment-15955273&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10949:&#010;----------------------------------------&#010;&#010;Github user onders86 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1590&#010;&#010;&#010;&gt; Websocket clients get message from all resources on one port &#010;&gt; -------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10949&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10949&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-websocket&#010;&gt;            Reporter: Ravi Godbole&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Routebuider configuration in which only resource URI is different while port is same.&#010;&gt; 1. newsTopic&#010;&gt; 2. stockQuoteTopic&#010;&gt;  Ideally other clients connecting to newsTopic should get messages published&#010;&gt;  on this topic only but they are also getting messages published on stockQuoteTopic.&#010;&gt;  On further investigation I found out that memory store used to by sendAll&#010;&gt;  is shared by all resource uri for a given port in the server.&#010;&gt;  from(""activemq:topic:newsTopic"").to(""websocket://&#010;&gt;  0.0.0.0:9090/newsTopic?sendToAll=true"");&#010;&gt;         from(""activemq:topic:stockQuoteTopic"").to(""websocket://&#010;&gt;  0.0.0.0:9090/stockQuoteTopic?sendToAll=true"");&#010;&gt;  Sample Ouput received from client &#010;&gt;  2017-03-06 15:35:15.789:INFO::main: Logging initialized @313ms&#010;&gt;  Connected to server&#010;&gt;  Message received from server:MSFT        [ published on stockQuoteTopic. Expected ..]&#010;&gt;  Message received from server:CNBC News   [ published on newsTopic. should not have received&#010;]&#010;&gt;  Message received from server:BBC News    [ published on newsTopic. should not have received&#010;]&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
26,27,Ayush Dixit (JIRA),  [jira] [Created] (CAMEL-11102) Camel SFTP is taking time to transfer file on sftp server.When target target directory contains lot of files,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061351.1491288781000.197996.1491288821743%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 06:53:41 GMT","Ayush Dixit created CAMEL-11102:&#010;-----------------------------------&#010;&#010;             Summary: Camel SFTP is taking time to transfer file on sftp server.When target&#010;target directory contains lot of files&#010;                 Key: CAMEL-11102&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11102&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-sftp&#010;    Affects Versions: 2.15.2&#010;         Environment: ==========================================================&#010;When target directory having 20,000 files. Camel sftp producer took around 1 minute 43 second&#010;to transfer file &#010;==========================================================&#010;&#010;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#010;&#010;&#010;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&#010;&#010;&#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&#010;==========================================================When target directory having 40,000&#010;files. Camel sftp producer took around 3 minute 17 second to transfer file&#010;==================================== ====================&#010;&#010;&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&#010;&#010;&#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&#010;&#010;&#010;==========================================================&#010;Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;==========================================================&#010;&#010;PFB the producer route which we set up&#010;sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;            Reporter: Ayush Dixit&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
27,28,Andrea Cosentino (JIRA),  [jira] [Resolved] (CAMEL-11102) Camel SFTP is taking time to transfer file on sftp server.When target target directory contains lot of files,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061351.1491288781000.198017.1491288941556%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 06:55:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11102?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino resolved CAMEL-11102.&#010;--------------------------------------&#010;    Resolution: Invalid&#010;      Assignee: Andrea Cosentino&#010;&#010;&gt; Camel SFTP is taking time to transfer file on sftp server.When target target directory&#010;contains lot of files&#010;&gt; ------------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11102&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11102&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sftp&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;         Environment: ==========================================================&#010;&gt; When target directory having 20,000 files. Camel sftp producer took around 1 minute 43&#010;second to transfer file &#010;&gt; ==========================================================&#010;&gt; DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt; &#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&gt; &#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&gt; &#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt; DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&gt; &#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&gt; &#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&gt; &#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt; &#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&gt; &#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&gt; ==========================================================When target directory having&#010;40,000 files. Camel sftp producer took around 3 minute 17 second to transfer file&#010;&gt; ==================================== ====================&#010;&gt; &#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&gt; &#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt; &#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&gt; &#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&gt; &#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&gt; &#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&gt; &#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&gt; &#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&gt; &#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt; &#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&gt; &#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&gt; ==========================================================&#010;&gt; Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;&gt; ==========================================================&#010;&gt; PFB the producer route which we set up&#010;&gt; sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&gt;            Reporter: Ayush Dixit&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
28,29,Andrea Cosentino (JIRA),  [jira] [Commented] (CAMEL-11102) Camel SFTP is taking time to transfer file on sftp server.When target target directory contains lot of files,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061351.1491288781000.198019.1491289001659%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 06:56:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11102?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15954668#comment-15954668&#010;] &#010;&#010;Andrea Cosentino commented on CAMEL-11102:&#010;------------------------------------------&#010;&#010;Please, first use the Camel users mailing list.&#010;&#010;&gt; Camel SFTP is taking time to transfer file on sftp server.When target target directory&#010;contains lot of files&#010;&gt; ------------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11102&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11102&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sftp&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;         Environment: ==========================================================&#010;&gt; When target directory having 20,000 files. Camel sftp producer took around 1 minute 43&#010;second to transfer file &#010;&gt; ==========================================================&#010;&gt; DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt; &#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&gt; &#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&gt; &#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt; DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&gt; &#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&gt; &#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&gt; &#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt; &#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&gt; &#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&gt; ==========================================================When target directory having&#010;40,000 files. Camel sftp producer took around 3 minute 17 second to transfer file&#010;&gt; ==================================== ====================&#010;&gt; &#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&gt; &#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt; &#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&gt; &#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&gt; &#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&gt; &#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&gt; &#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&gt; &#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&gt; &#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt; &#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&gt; &#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&gt; ==========================================================&#010;&gt; Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;&gt; ==========================================================&#010;&gt; PFB the producer route which we set up&#010;&gt; sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&gt;            Reporter: Ayush Dixit&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
29,30,Ayush Dixit (JIRA),  [jira] [Updated] (CAMEL-11102) Camel SFTP is taking time to transfer file on sftp server.When target target directory contains lot of files,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061351.1491288781000.198044.1491289121644%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 06:58:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11102?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Ayush Dixit updated CAMEL-11102:&#010;--------------------------------&#010;    Description: &#010;==========================================================&#010;When target directory having 20,000 files. Camel sftp producer took around 1 minute 43 second&#010;to transfer file &#010;==========================================================&#010;&#010;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#010;&#010;&#010;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&#010;&#010;&#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&#010;==========================================================When target directory having 40,000&#010;files. Camel sftp producer took around 3 minute 17 second to transfer file&#010;==================================== ====================&#010;&#010;&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&#010;&#010;&#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&#010;&#010;&#010;==========================================================&#010;Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;==========================================================&#010;&#010;PFB the producer route which we set up&#010;sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;&#010;&gt; Camel SFTP is taking time to transfer file on sftp server.When target target directory&#010;contains lot of files&#010;&gt; ------------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11102&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11102&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sftp&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;         Environment: ==========================================================&#010;&gt; When target directory having 20,000 files. Camel sftp producer took around 1 minute 43&#010;second to transfer file &#010;&gt; ==========================================================&#010;&gt; DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt; &#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&gt; &#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&gt; &#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt; DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&gt; &#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&gt; &#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&gt; &#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt; &#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&gt; &#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&gt; ==========================================================When target directory having&#010;40,000 files. Camel sftp producer took around 3 minute 17 second to transfer file&#010;&gt; ==================================== ====================&#010;&gt; &#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&gt; &#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt; &#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&gt; &#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&gt; &#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&gt; &#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&gt; &#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&gt; &#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&gt; &#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt; &#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&gt; &#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&gt; ==========================================================&#010;&gt; Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;&gt; ==========================================================&#010;&gt; PFB the producer route which we set up&#010;&gt; sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&gt;            Reporter: Ayush Dixit&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;&#010;&gt; ==========================================================&#010;&gt; When target directory having 20,000 files. Camel sftp producer took around 1 minute 43&#010;second to transfer file &#010;&gt; ==========================================================&#010;&gt; DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt; &#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&gt; &#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&gt; &#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt; DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&gt; &#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&gt; &#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&gt; &#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt; &#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&gt; &#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&gt; ==========================================================When target directory having&#010;40,000 files. Camel sftp producer took around 3 minute 17 second to transfer file&#010;&gt; ==================================== ====================&#010;&gt; &#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&gt; &#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt; &#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&gt; &#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&gt; &#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&gt; &#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&gt; &#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&gt; &#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&gt; &#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt; &#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&gt; &#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&gt; ==========================================================&#010;&gt; Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;&gt; ==========================================================&#010;&gt; PFB the producer route which we set up&#010;&gt; sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
30,31,Ayush Dixit (JIRA),  [jira] [Updated] (CAMEL-11102) Camel SFTP is taking time to transfer file on sftp server.When target target directory contains lot of files,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061351.1491288781000.198050.1491289181750%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 06:59:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11102?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Ayush Dixit updated CAMEL-11102:&#010;--------------------------------&#010;    Environment: Client Performance Enviroment  (was: ==========================================================&#010;When target directory having 20,000 files. Camel sftp producer took around 1 minute 43 second&#010;to transfer file &#010;==========================================================&#010;&#010;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#010;&#010;&#010;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&#010;&#010;&#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&#010;==========================================================When target directory having 40,000&#010;files. Camel sftp producer took around 3 minute 17 second to transfer file&#010;==================================== ====================&#010;&#010;&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&#010;&#010;&#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&#010;&#010;&#010;==========================================================&#010;Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;==========================================================&#010;&#010;PFB the producer route which we set up&#010;sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;)&#010;&#010;&gt; Camel SFTP is taking time to transfer file on sftp server.When target target directory&#010;contains lot of files&#010;&gt; ------------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11102&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11102&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sftp&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;         Environment: Client Performance Enviroment&#010;&gt;            Reporter: Ayush Dixit&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;&#010;&gt; ==========================================================&#010;&gt; When target directory having 20,000 files. Camel sftp producer took around 1 minute 43&#010;second to transfer file &#010;&gt; ==========================================================&#010;&gt; DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt; &#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&gt; &#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&gt; &#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt; DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&gt; &#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&gt; &#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&gt; &#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt; &#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&gt; &#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&gt; ==========================================================When target directory having&#010;40,000 files. Camel sftp producer took around 3 minute 17 second to transfer file&#010;&gt; ==================================== ====================&#010;&gt; &#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&gt; &#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt; &#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&gt; &#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&gt; &#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&gt; &#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&gt; &#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&gt; &#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&gt; &#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt; &#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&gt; &#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&gt; ==========================================================&#010;&gt; Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;&gt; ==========================================================&#010;&gt; PFB the producer route which we set up&#010;&gt; sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
31,32,Ayush Dixit (JIRA),  [jira] [Updated] (CAMEL-11102) Camel SFTP is taking time to transfer file on sftp server.When target target directory contains lot of files,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061351.1491288781000.198052.1491289181805%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 06:59:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11102?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Ayush Dixit updated CAMEL-11102:&#010;--------------------------------&#010;    Description: &#010;==========================================================&#010;When target directory having 20,000 files. Camel sftp producer took around 1 minute 43 second&#010;to transfer file &#010;==========================================================&#010;&#010;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#010;&#010;&#010;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&#010;&#010;&#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&#010;=======================================================================================&#010;When target directory having 40,000 files. Camel sftp producer took around 3 minute 17 second&#010;to transfer file&#010;=======================================================================================&#010;&#010;&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&#010;&#010;&#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&#010;&#010;&#010;==========================================================&#010;Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;==========================================================&#010;&#010;PFB the producer route which we set up&#010;sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;&#010;  was:&#010;==========================================================&#010;When target directory having 20,000 files. Camel sftp producer took around 1 minute 43 second&#010;to transfer file &#010;==========================================================&#010;&#010;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#010;&#010;&#010;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&#010;&#010;&#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&#010;==========================================================When target directory having 40,000&#010;files. Camel sftp producer took around 3 minute 17 second to transfer file&#010;==================================== ====================&#010;&#010;&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&#010;&#010;&#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&#010;&#010;&#010;==========================================================&#010;Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;==========================================================&#010;&#010;PFB the producer route which we set up&#010;sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;&#010;&#010;&gt; Camel SFTP is taking time to transfer file on sftp server.When target target directory&#010;contains lot of files&#010;&gt; ------------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11102&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11102&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sftp&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;         Environment: Client Performance Enviroment&#010;&gt;            Reporter: Ayush Dixit&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;&#010;&gt; ==========================================================&#010;&gt; When target directory having 20,000 files. Camel sftp producer took around 1 minute 43&#010;second to transfer file &#010;&gt; ==========================================================&#010;&gt; DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt; &#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&gt; &#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&gt; &#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt; DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&gt; &#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&gt; &#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&gt; &#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt; &#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&gt; &#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&gt; =======================================================================================&#010;&gt; When target directory having 40,000 files. Camel sftp producer took around 3 minute 17&#010;second to transfer file&#010;&gt; =======================================================================================&#010;&gt; &#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&gt; &#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt; &#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&gt; &#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&gt; &#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&gt; &#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&gt; &#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&gt; &#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&gt; &#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt; &#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&gt; &#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&gt; ==========================================================&#010;&gt; Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;&gt; ==========================================================&#010;&gt; PFB the producer route which we set up&#010;&gt; sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
32,33,Ayush Dixit (JIRA),  [jira] [Updated] (CAMEL-11102) Camel SFTP is taking time to transfer file on sftp server.When target target directory contains lot of files,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061351.1491288781000.198054.1491289247198%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 07:00:47 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11102?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Ayush Dixit updated CAMEL-11102:&#010;--------------------------------&#010;    Description: &#010;========================================================================================&#010;When target directory having 20,000 files. Camel sftp producer took around 1 minute 43 second&#010;to transfer file &#010;========================================================================================&#010;&#010;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#010;&#010;&#010;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&#010;&#010;&#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&#010;=======================================================================================&#010;When target directory having 40,000 files. Camel sftp producer took around 3 minute 17 second&#010;to transfer file&#010;=======================================================================================&#010;&#010;&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&#010;&#010;&#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&#010;&#010;&#010;====================================================================================================&#010;Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;===================================================================================================&#010;&#010;PFB the producer route which we set up&#010;sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;&#010;  was:&#010;==========================================================&#010;When target directory having 20,000 files. Camel sftp producer took around 1 minute 43 second&#010;to transfer file &#010;==========================================================&#010;&#010;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#010;&#010;&#010;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&#010;&#010;&#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&#010;=======================================================================================&#010;When target directory having 40,000 files. Camel sftp producer took around 3 minute 17 second&#010;to transfer file&#010;=======================================================================================&#010;&#010;&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&#010;&#010;&#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&#010;&#010;&#010;==========================================================&#010;Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;==========================================================&#010;&#010;PFB the producer route which we set up&#010;sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;&#010;&#010;&gt; Camel SFTP is taking time to transfer file on sftp server.When target target directory&#010;contains lot of files&#010;&gt; ------------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11102&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11102&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sftp&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;         Environment: Client Performance Enviroment&#010;&gt;            Reporter: Ayush Dixit&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;&#010;&gt; ========================================================================================&#010;&gt; When target directory having 20,000 files. Camel sftp producer took around 1 minute 43&#010;second to transfer file &#010;&gt; ========================================================================================&#010;&gt; DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt; &#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&gt; &#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&gt; &#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt; DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&gt; &#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&gt; &#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&gt; &#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt; &#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&gt; &#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&gt; =======================================================================================&#010;&gt; When target directory having 40,000 files. Camel sftp producer took around 3 minute 17&#010;second to transfer file&#010;&gt; =======================================================================================&#010;&gt; &#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&gt; &#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt; &#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&gt; &#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&gt; &#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&gt; &#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&gt; &#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&gt; &#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&gt; &#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt; &#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&gt; &#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&gt; ====================================================================================================&#010;&gt; Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;&gt; ===================================================================================================&#010;&gt; PFB the producer route which we set up&#010;&gt; sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
33,34,,[jira] [Created] (CAMEL-11103) Add camel-digitalocean Karaf feature,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061351.1491288781000.198054.1491289247198%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 07:00:47 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11102?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Ayush Dixit updated CAMEL-11102:&#010;--------------------------------&#010;    Description: &#010;========================================================================================&#010;When target directory having 20,000 files. Camel sftp producer took around 1 minute 43 second&#010;to transfer file &#010;========================================================================================&#010;&#010;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#010;&#010;&#010;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&#010;&#010;&#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&#010;=======================================================================================&#010;When target directory having 40,000 files. Camel sftp producer took around 3 minute 17 second&#010;to transfer file&#010;=======================================================================================&#010;&#010;&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&#010;&#010;&#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&#010;&#010;&#010;====================================================================================================&#010;Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;===================================================================================================&#010;&#010;PFB the producer route which we set up&#010;sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;&#010;  was:&#010;==========================================================&#010;When target directory having 20,000 files. Camel sftp producer took around 1 minute 43 second&#010;to transfer file &#010;==========================================================&#010;&#010;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#010;&#010;&#010;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&#010;&#010;&#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&#010;=======================================================================================&#010;When target directory having 40,000 files. Camel sftp producer took around 3 minute 17 second&#010;to transfer file&#010;=======================================================================================&#010;&#010;&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&#010;&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&#010;&#010;&#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&#010;&#010;&#010;==========================================================&#010;Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;==========================================================&#010;&#010;PFB the producer route which we set up&#010;sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;&#010;&#010;&gt; Camel SFTP is taking time to transfer file on sftp server.When target target directory&#010;contains lot of files&#010;&gt; ------------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11102&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11102&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sftp&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;         Environment: Client Performance Enviroment&#010;&gt;            Reporter: Ayush Dixit&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;&#010;&gt; ========================================================================================&#010;&gt; When target directory having 20,000 files. Camel sftp producer took around 1 minute 43&#010;second to transfer file &#010;&gt; ========================================================================================&#010;&gt; DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt; &#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&gt; &#009;&#009;INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&gt; &#009;&#009;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt; DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&gt; &#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&gt; &#009;&#009;DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&gt; &#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt; &#009;&#009;DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&gt; &#009;&#009;INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&gt; =======================================================================================&#010;&gt; When target directory having 40,000 files. Camel sftp producer took around 3 minute 17&#010;second to transfer file&#010;&gt; =======================================================================================&#010;&gt; &#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&gt; &#009;&#009;mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt; &#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&gt; &#009;&#009; SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&gt; &#009;&#009;INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&gt; &#009;&#009;: SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&gt; &#009;&#009;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&gt; &#009;&#009;Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&gt; &#009;&#009;DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&gt; &#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt; &#009;&#009;DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&gt; &#009;&#009;INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&gt; ====================================================================================================&#010;&gt; Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;&gt; ===================================================================================================&#010;&gt; PFB the producer route which we set up&#010;&gt; sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
34,35,Andrea Cosentino (JIRA),  [jira] [Created] (CAMEL-11103) Add camel-digitalocean Karaf feature,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061354.1491289872000.198091.1491289902286%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 07:11:42 GMT",Andrea Cosentino created CAMEL-11103:&#010;----------------------------------------&#010;&#010;             Summary: Add camel-digitalocean Karaf feature&#010;                 Key: CAMEL-11103&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11103&#010;             Project: Camel&#010;          Issue Type: Task&#010;            Reporter: Andrea Cosentino&#010;            Assignee: Andrea Cosentino&#010;            Priority: Minor&#010;&#010;&#010;Waiting for this: https://issues.apache.org/jira/browse/SM-3295&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
35,36,,[jira] [Assigned] (CAMEL-11097) Injection of CamelContext inside a CamelContextAware bean,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061354.1491289872000.198091.1491289902286%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 07:11:42 GMT",Andrea Cosentino created CAMEL-11103:&#010;----------------------------------------&#010;&#010;             Summary: Add camel-digitalocean Karaf feature&#010;                 Key: CAMEL-11103&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11103&#010;             Project: Camel&#010;          Issue Type: Task&#010;            Reporter: Andrea Cosentino&#010;            Assignee: Andrea Cosentino&#010;            Priority: Minor&#010;&#010;&#010;Waiting for this: https://issues.apache.org/jira/browse/SM-3295&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
36,37,Antonin Stefanutti (JIRA),  [jira] [Assigned] (CAMEL-11097) Injection of CamelContext inside a CamelContextAware bean,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13060418.1490890106000.198205.1491291102041%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 07:31:42 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11097?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Antonin Stefanutti reassigned CAMEL-11097:&#010;------------------------------------------&#010;&#010;    Assignee: Antonin Stefanutti&#010;&#010;&gt; Injection of CamelContext inside a CamelContextAware bean&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11097&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11097&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-cdi&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Bernard Ligny&#010;&gt;            Assignee: Antonin Stefanutti&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; See this thread on Camel Users forum:&#010;&gt; http://camel.465427.n5.nabble.com/Why-do-we-have-to-specify-a-context-for-PropertyInject-td5796699.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
37,38,,[jira] [Created] (CAMEL-11104) Performance issue in camel sftp,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13060418.1490890106000.198205.1491291102041%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 07:31:42 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11097?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Antonin Stefanutti reassigned CAMEL-11097:&#010;------------------------------------------&#010;&#010;    Assignee: Antonin Stefanutti&#010;&#010;&gt; Injection of CamelContext inside a CamelContextAware bean&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11097&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11097&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-cdi&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Bernard Ligny&#010;&gt;            Assignee: Antonin Stefanutti&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; See this thread on Camel Users forum:&#010;&gt; http://camel.465427.n5.nabble.com/Why-do-we-have-to-specify-a-context-for-PropertyInject-td5796699.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
38,39,Ayush Dixit (JIRA),  [jira] [Created] (CAMEL-11104) Performance issue in camel sftp,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061359.1491291146000.198216.1491291161909%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 07:32:41 GMT","Ayush Dixit created CAMEL-11104:&#010;-----------------------------------&#010;&#010;             Summary: Performance issue in camel sftp&#010;                 Key: CAMEL-11104&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11104&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-sftp&#010;    Affects Versions: 2.15.2&#010;         Environment: Performance Enviroment&#010;            Reporter: Ayush Dixit&#010;&#010;&#010;We have implemented a camel route where we are having camel sftp producer to transfer a files&#010;to remote SFTP location but on performance testing on client environment and on our local&#010;environment we have observed degradation in the time for transferring files to remote SFTP&#010;location. Please find the detailed analysis below. The we tried the various test in our local&#010;environment. In each test we put around 22 files on camel file consumer and each file took&#010;below time to write the file. PFB details&#010;&#010;&#010;========================================================================================&#010;When target directory having 20,000 files. Camel sftp producer took around 1 minute 43 second&#010;to a transfer file &#010;========================================================================================&#010;&#010;DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;           INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;            INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;            DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&#010;&#010;&#010;            DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;           DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;           DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&#010;           DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;           DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;            INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&#010;&#010;=======================================================================================&#010;When target directory having 40,000 files. Camel sftp producer took around 3 minute 17 second&#010;to transfer file&#010;=======================================================================================&#010;&#010;DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;                                mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using&#010;exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;                INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;                                SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;                INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;                                : SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;                DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;                                Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[SX30RPMAJAR1702483756.txt]&#010;&#010;&#010;                DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;                DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;                DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;                DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;                DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;                INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&#010;&#010;&#010;====================================================================================================&#010;Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;===================================================================================================&#010;&#010;PFB the producer route which we set up&#010;sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
39,40,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11104) Performance issue in camel sftp,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061359.1491291146000.198237.1491291401571%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 07:36:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11104?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11104.&#010;---------------------------------&#010;    Resolution: Invalid&#010;&#010;Use the user forum or user mailing list to ask for help&#010;&#010;&gt; Performance issue in camel sftp&#010;&gt; -------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11104&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11104&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sftp&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;         Environment: Performance Enviroment&#010;&gt;            Reporter: Ayush Dixit&#010;&gt;&#010;&gt; We have implemented a camel route where we are having camel sftp producer to transfer&#010;a files to remote SFTP location but on performance testing on client environment and on our&#010;local environment we have observed degradation in the time for transferring files to remote&#010;SFTP location. Please find the detailed analysis below. The we tried the various test in our&#010;local environment. In each test we put around 22 files on camel file consumer and each file&#010;took below time to write the file. PFB details&#010;&gt; ========================================================================================&#010;&gt; When target directory having 20,000 files. Camel sftp producer took around 1 minute 43&#010;second to a transfer file &#010;&gt; ========================================================================================&#010;&gt; DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt;            INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&gt;             INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&gt;             DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt;             DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&gt;            DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&gt;            DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&gt;            DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt;            DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&gt;             INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&gt; =======================================================================================&#010;&gt; When target directory having 40,000 files. Camel sftp producer took around 3 minute 17&#010;second to transfer file&#010;&gt; =======================================================================================&#010;&gt; DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&gt;                                 mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using&#010;exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt;                 INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&gt;                                 SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&gt;                 INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&gt;                                 : SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&gt;                 DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&gt;                                 Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt;                 DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&gt;                 DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&gt;                 DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&gt;                 DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt;                 DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&gt;                 INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&gt; ====================================================================================================&#010;&gt; Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;&gt; ===================================================================================================&#010;&gt; PFB the producer route which we set up&#010;&gt; sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
40,41,Ayush Dixit (JIRA),  [jira] [Commented] (CAMEL-11104) Performance issue in camel sftp,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061359.1491291146000.198324.1491291941667%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 07:45:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11104?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15954732#comment-15954732&#010;] &#010;&#010;Ayush Dixit commented on CAMEL-11104:&#010;-------------------------------------&#010;&#010;Already put on user mailing list&#010;&#010;&gt; Performance issue in camel sftp&#010;&gt; -------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11104&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11104&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sftp&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;         Environment: Performance Enviroment&#010;&gt;            Reporter: Ayush Dixit&#010;&gt;&#010;&gt; We have implemented a camel route where we are having camel sftp producer to transfer&#010;a files to remote SFTP location but on performance testing on client environment and on our&#010;local environment we have observed degradation in the time for transferring files to remote&#010;SFTP location. Please find the detailed analysis below. The we tried the various test in our&#010;local environment. In each test we put around 22 files on camel file consumer and each file&#010;took below time to write the file. PFB details&#010;&gt; ========================================================================================&#010;&gt; When target directory having 20,000 files. Camel sftp producer took around 1 minute 43&#010;second to a transfer file &#010;&gt; ========================================================================================&#010;&gt; DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt;            INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&gt;             INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&gt;             DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt;             DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&gt;            DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&gt;            DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&gt;            DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt;            DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&gt;             INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&gt; =======================================================================================&#010;&gt; When target directory having 40,000 files. Camel sftp producer took around 3 minute 17&#010;second to transfer file&#010;&gt; =======================================================================================&#010;&gt; DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&gt;                                 mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using&#010;exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt;                 INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&gt;                                 SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&gt;                 INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&gt;                                 : SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&gt;                 DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&gt;                                 Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt;                 DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&gt;                 DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&gt;                 DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&gt;                 DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt;                 DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&gt;                 INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&gt; ====================================================================================================&#010;&gt; Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;&gt; ===================================================================================================&#010;&gt; PFB the producer route which we set up&#010;&gt; sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
41,42,Andrea Cosentino (JIRA),  [jira] [Commented] (CAMEL-11104) Performance issue in camel sftp,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061359.1491291146000.198365.1491292182103%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 07:49:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11104?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15954738#comment-15954738&#010;] &#010;&#010;Andrea Cosentino commented on CAMEL-11104:&#010;------------------------------------------&#010;&#010;and don't open the same issue two times.&#010;&#010;&gt; Performance issue in camel sftp&#010;&gt; -------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11104&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11104&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sftp&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;         Environment: Performance Enviroment&#010;&gt;            Reporter: Ayush Dixit&#010;&gt;&#010;&gt; We have implemented a camel route where we are having camel sftp producer to transfer&#010;a files to remote SFTP location but on performance testing on client environment and on our&#010;local environment we have observed degradation in the time for transferring files to remote&#010;SFTP location. Please find the detailed analysis below. The we tried the various test in our&#010;local environment. In each test we put around 22 files on camel file consumer and each file&#010;took below time to write the file. PFB details&#010;&gt; ========================================================================================&#010;&gt; When target directory having 20,000 files. Camel sftp producer took around 1 minute 43&#010;second to a transfer file &#010;&gt; ========================================================================================&#010;&gt; DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt;            INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&gt;             INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&gt;             DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt;             DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&gt;            DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&gt;            DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&gt;            DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt;            DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&gt;             INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&gt; =======================================================================================&#010;&gt; When target directory having 40,000 files. Camel sftp producer took around 3 minute 17&#010;second to transfer file&#010;&gt; =======================================================================================&#010;&gt; DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&gt;                                 mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using&#010;exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt;                 INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&gt;                                 SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&gt;                 INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&gt;                                 : SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&gt;                 DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&gt;                                 Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt;                 DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&gt;                 DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&gt;                 DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&gt;                 DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt;                 DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&gt;                 INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&gt; ====================================================================================================&#010;&gt; Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;&gt; ===================================================================================================&#010;&gt; PFB the producer route which we set up&#010;&gt; sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
42,43,,[jira] [Updated] (CAMEL-11096) Connector semantics with respect to default values,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061359.1491291146000.198365.1491292182103%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 07:49:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11104?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15954738#comment-15954738&#010;] &#010;&#010;Andrea Cosentino commented on CAMEL-11104:&#010;------------------------------------------&#010;&#010;and don't open the same issue two times.&#010;&#010;&gt; Performance issue in camel sftp&#010;&gt; -------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11104&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11104&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sftp&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;         Environment: Performance Enviroment&#010;&gt;            Reporter: Ayush Dixit&#010;&gt;&#010;&gt; We have implemented a camel route where we are having camel sftp producer to transfer&#010;a files to remote SFTP location but on performance testing on client environment and on our&#010;local environment we have observed degradation in the time for transferring files to remote&#010;SFTP location. Please find the detailed analysis below. The we tried the various test in our&#010;local environment. In each test we put around 22 files on camel file consumer and each file&#010;took below time to write the file. PFB details&#010;&gt; ========================================================================================&#010;&gt; When target directory having 20,000 files. Camel sftp producer took around 1 minute 43&#010;second to a transfer file &#010;&gt; ========================================================================================&#010;&gt; DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt]&#010;using exchange: Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt;            INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file : ST30PERFORPMAJAR17020726.txt from IOP FTP directory&#010;&gt;             INFO 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : ST30PERFORPMAJAR17020726.txt to ICOMS FTP directory&#010;&gt;             DEBUG 07:00:38 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[ST30PERFORPMAJAR17020726.txt]&#010;&gt;             DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/ST30PERFORPMAJAR17020726.txt&#010;(no charset)&#010;&gt;            DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QST30PERFORPMAJAR17020726.txt&#010;using stream: java.io.BufferedInputStream@54a89ff5&#010;&gt;            DEBUG 07:02:19 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.658 seconds (658 millis)&#010;to store file: QST30PERFORPMAJAR17020726.txt and FTP client returned: true&#010;&gt;            DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QST30PERFORPMAJAR17020726.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt;            DEBUG 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QST30PERFORPMAJAR17020726.txt&#010;to: icoms/1/ST30PERFORPMAJAR17020726.txt&#010;&gt;             INFO 07:02:20 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : ST30PERFORPMAJAR17020726.txt successfully sent to ICOMS FTP directory&#010;&gt; =======================================================================================&#010;&gt; When target directory having 40,000 files. Camel sftp producer took around 3 minute 17&#010;second to transfer file&#010;&gt; =======================================================================================&#010;&gt; DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.FileConsumer&gt; About to process file: GenericFile[/data/users/slvm02/smp53/domains/v&#010;&gt;                                 mb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt] using&#010;exchange: Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt;                 INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Picked IOP response file :&#010;&gt;                                 SX30RPMAJAR1702483756.txt from IOP FTP directory&#010;&gt;                 INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file&#010;&gt;                                 : SX30RPMAJAR1702483756.txt to ICOMS FTP directory&#010;&gt;                 DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPer&#010;&gt;                                 Poll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]&#010;Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt;                 DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJAR1702483756.txt&#010;(no charset)&#010;&gt;                 DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; About to store file: QSX30RPMAJAR1702483756.txt&#010;using stream: java.io.BufferedInputStream@7954cfa8&#010;&gt;                 DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Took 0.659 seconds (659 millis)&#010;to store file: QSX30RPMAJAR1702483756.txt and FTP client returned: true&#010;&gt;                 DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.RemoteFileProducer&gt; Wrote [icoms/1/QSX30RPMAJAR1702483756.txt]&#010;to [Endpoint[sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser]]&#010;&gt;                 DEBUG 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.remote.SftpOperations&gt; Renaming file: icoms/1/QSX30RPMAJAR1702483756.txt&#010;to: icoms/1/SX30RPMAJAR1702483756.txt&#010;&gt;                 INFO 07:50:41 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;IOP response file : SX30RPMAJAR1702483756.txt successfully sent to ICOMS FTP directory&#010;&gt; ====================================================================================================&#010;&gt; Similarly when we achieved the files from target directory. It took around 6 sec.It seems&#010;like there is a performance issue with camel sftp component. Does it list the files in target&#010;directory which is taking time.&#010;&gt; ===================================================================================================&#010;&gt; PFB the producer route which we set up&#010;&gt; sftp://10.100.150.190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;tempPrefix=Q&amp;username=sigmauser&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
43,44,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11096) Connector semantics with respect to default values,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13060362.1490880649000.198261.1491291581656%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 07:39:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11096?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11096:&#010;--------------------------------&#010;    Issue Type: Task  (was: Bug)&#010;&#010;&gt; Connector semantics with respect to default values&#010;&gt; --------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11096&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11096&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-connector&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Roland Huss&#010;&gt;&#010;&gt; I would like to discuss the semantics of default parameters for connectors. Currently&#010;a user can override 'frozen' (== pre-configured) component options when [creating the endpoint|https://github.com/apache/camel/blob/bc9d07700678604ae43754a32519898c47bb9529/connectors/camel-connector/src/main/java/org/apache/camel/component/connector/DefaultConnectorComponent.java#L261]&#010;&gt; I wonder whether this is the desired behaviour ? E.g. when creating a `salesforce-upsert-connector`&#010;and letting override the ""operationName"" (which was preconfigured in the connector) defeats&#010;its purpose imo. (Although it was just quite helpful in my case ;-)&#010;&gt; Of course the ideal solution would be to mark options as overridable or not.&#010;&gt; What do you think ?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
44,45,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11096) Connector semantics with respect to default values,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13060362.1490880649000.198281.1491291641729%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 07:40:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11096?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11096:&#010;--------------------------------&#010;    Priority: Minor  (was: Major)&#010;&#010;&gt; Connector semantics with respect to default values&#010;&gt; --------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11096&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11096&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-connector&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Roland Huss&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; I would like to discuss the semantics of default parameters for connectors. Currently&#010;a user can override 'frozen' (== pre-configured) component options when [creating the endpoint|https://github.com/apache/camel/blob/bc9d07700678604ae43754a32519898c47bb9529/connectors/camel-connector/src/main/java/org/apache/camel/component/connector/DefaultConnectorComponent.java#L261]&#010;&gt; I wonder whether this is the desired behaviour ? E.g. when creating a `salesforce-upsert-connector`&#010;and letting override the ""operationName"" (which was preconfigured in the connector) defeats&#010;its purpose imo. (Although it was just quite helpful in my case ;-)&#010;&gt; Of course the ideal solution would be to mark options as overridable or not.&#010;&gt; What do you think ?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
45,46,,[jira] [Commented] (CAMEL-10497) Improve documentation detailing websocket implementation details,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13060362.1490880649000.198281.1491291641729%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 07:40:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11096?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11096:&#010;--------------------------------&#010;    Priority: Minor  (was: Major)&#010;&#010;&gt; Connector semantics with respect to default values&#010;&gt; --------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11096&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11096&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-connector&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Roland Huss&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; I would like to discuss the semantics of default parameters for connectors. Currently&#010;a user can override 'frozen' (== pre-configured) component options when [creating the endpoint|https://github.com/apache/camel/blob/bc9d07700678604ae43754a32519898c47bb9529/connectors/camel-connector/src/main/java/org/apache/camel/component/connector/DefaultConnectorComponent.java#L261]&#010;&gt; I wonder whether this is the desired behaviour ? E.g. when creating a `salesforce-upsert-connector`&#010;and letting override the ""operationName"" (which was preconfigured in the connector) defeats&#010;its purpose imo. (Although it was just quite helpful in my case ;-)&#010;&gt; Of course the ideal solution would be to mark options as overridable or not.&#010;&gt; What do you think ?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
46,47,onder sezgin (JIRA),  [jira] [Commented] (CAMEL-10497) Improve documentation detailing websocket implementation details,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13021752.1479475962000.198599.1491294342273%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 08:25:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10497?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15954800#comment-15954800&#010;] &#010;&#010;onder sezgin commented on CAMEL-10497:&#010;--------------------------------------&#010;&#010;[~singram777] I am not sure i understand what you require in camel-websocket documents.As&#010;far as i can see, if port specified, the component uses it, otherwise default port 9292 is&#010;in use.&#010;&#010;&gt; Improve documentation detailing websocket implementation details&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10497&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10497&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-websocket, documentation&#010;&gt;    Affects Versions: 2.18.0&#010;&gt;            Reporter: Stuart Ingram&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; Improve behavior documentation of this component, specifically around port workflows.&#010;&gt; While the initial port can be declaratively exposed for clients to connect the component&#010;opens up two random(?) ports per client connected rather than communicate through the single&#010;exposed port declared.&#010;&gt; This was not apparent from the documentation and makes this component somewhat inappropriate&#010;for containerization which would be useful to consider when evaluating the 3 websocket implementations&#010;currently available for Camel.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
47,48,onder sezgin (JIRA),  [jira] [Commented] (CAMEL-10497) Improve documentation detailing websocket implementation details,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13021752.1479475962000.245038.1491805661696%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 06:27:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10497?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15962485#comment-15962485&#010;] &#010;&#010;onder sezgin commented on CAMEL-10497:&#010;--------------------------------------&#010;&#010;[~singram777] any commen?&#010;&#010;&gt; Improve documentation detailing websocket implementation details&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10497&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10497&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-websocket, documentation&#010;&gt;    Affects Versions: 2.18.0&#010;&gt;            Reporter: Stuart Ingram&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; Improve behavior documentation of this component, specifically around port workflows.&#010;&gt; While the initial port can be declaratively exposed for clients to connect the component&#010;opens up two random(?) ports per client connected rather than communicate through the single&#010;exposed port declared.&#010;&gt; This was not apparent from the documentation and makes this component somewhat inappropriate&#010;for containerization which would be useful to consider when evaluating the 3 websocket implementations&#010;currently available for Camel.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
48,49,Stuart Ingram (JIRA),  [jira] [Commented] (CAMEL-10497) Improve documentation detailing websocket implementation details,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13021752.1479475962000.248698.1491839442351%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 15:50:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10497?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15963067#comment-15963067&#010;] &#010;&#010;Stuart Ingram commented on CAMEL-10497:&#010;---------------------------------------&#010;&#010;Apologies for the slow response.&#010;&#010;To clarify on the issue.  The port specified is indeed the primary port used.  However the&#010;implementation requires 2 other ports per client connection which was unexpected.&#010;The effect of this is that if you are running locally and have no network restrictions this&#010;implementation detail is invisible.&#010;However if you put this in say a container with the primary port specified it does not work&#010;because the 2 other ports are not exposed to traffic.&#010;This is particularly difficult as the 2 ports created per client connection are random.&#010;&#010;This was not clear in the documentation and took some time to discover, hence the request&#010;to note it in the documentation which may be important selection criteria for another developer&#010;looking at this solution.&#010;&#010;Let me know if this make sense.&#010;Thanks for taking a look.&#010;&#010;&gt; Improve documentation detailing websocket implementation details&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10497&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10497&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-websocket, documentation&#010;&gt;    Affects Versions: 2.18.0&#010;&gt;            Reporter: Stuart Ingram&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; Improve behavior documentation of this component, specifically around port workflows.&#010;&gt; While the initial port can be declaratively exposed for clients to connect the component&#010;opens up two random(?) ports per client connected rather than communicate through the single&#010;exposed port declared.&#010;&gt; This was not apparent from the documentation and makes this component somewhat inappropriate&#010;for containerization which would be useful to consider when evaluating the 3 websocket implementations&#010;currently available for Camel.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
49,50,onder sezgin (JIRA),  [jira] [Commented] (CAMEL-10497) Improve documentation detailing websocket implementation details,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13021752.1479475962000.303509.1492501481836%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 07:44:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10497?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972268#comment-15972268&#010;] &#010;&#010;onder sezgin commented on CAMEL-10497:&#010;--------------------------------------&#010;&#010;[~singram777]i got what you mean. however, i can not verify that i can see what you meant&#010;in the code. if you could provide test env or steps that i can reproduce, i can provide better&#010;documentation (i just don't want to add a simple statement to adoc and close the issue.) or&#010;why don't you create github PR if you are already able to test and see the issue and maybe&#010;you can do a blog post about your experience?&#010;&#010;&gt; Improve documentation detailing websocket implementation details&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10497&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10497&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-websocket, documentation&#010;&gt;    Affects Versions: 2.18.0&#010;&gt;            Reporter: Stuart Ingram&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; Improve behavior documentation of this component, specifically around port workflows.&#010;&gt; While the initial port can be declaratively exposed for clients to connect the component&#010;opens up two random(?) ports per client connected rather than communicate through the single&#010;exposed port declared.&#010;&gt; This was not apparent from the documentation and makes this component somewhat inappropriate&#010;for containerization which would be useful to consider when evaluating the 3 websocket implementations&#010;currently available for Camel.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
50,51,onder sezgin (JIRA),  [jira] [Assigned] (CAMEL-10497) Improve documentation detailing websocket implementation details,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13021752.1479475962000.303512.1492501481859%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 07:44:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10497?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;onder sezgin reassigned CAMEL-10497:&#010;------------------------------------&#010;&#010;    Assignee:     (was: onder sezgin)&#010;&#010;&gt; Improve documentation detailing websocket implementation details&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10497&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10497&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-websocket, documentation&#010;&gt;    Affects Versions: 2.18.0&#010;&gt;            Reporter: Stuart Ingram&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; Improve behavior documentation of this component, specifically around port workflows.&#010;&gt; While the initial port can be declaratively exposed for clients to connect the component&#010;opens up two random(?) ports per client connected rather than communicate through the single&#010;exposed port declared.&#010;&gt; This was not apparent from the documentation and makes this component somewhat inappropriate&#010;for containerization which would be useful to consider when evaluating the 3 websocket implementations&#010;currently available for Camel.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
51,52,,[jira] [Created] (CAMEL-11105) camel-eventadmin does not allow multiple consumers with the same URI,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13021752.1479475962000.303512.1492501481859%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 07:44:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10497?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;onder sezgin reassigned CAMEL-10497:&#010;------------------------------------&#010;&#010;    Assignee:     (was: onder sezgin)&#010;&#010;&gt; Improve documentation detailing websocket implementation details&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10497&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10497&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-websocket, documentation&#010;&gt;    Affects Versions: 2.18.0&#010;&gt;            Reporter: Stuart Ingram&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; Improve behavior documentation of this component, specifically around port workflows.&#010;&gt; While the initial port can be declaratively exposed for clients to connect the component&#010;opens up two random(?) ports per client connected rather than communicate through the single&#010;exposed port declared.&#010;&gt; This was not apparent from the documentation and makes this component somewhat inappropriate&#010;for containerization which would be useful to consider when evaluating the 3 websocket implementations&#010;currently available for Camel.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
52,53,David Franke (JIRA),  [jira] [Created] (CAMEL-11105) camel-eventadmin does not allow multiple consumers with the same URI,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061376.1491296412000.198854.1491296449501%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 09:00:49 GMT",David Franke created CAMEL-11105:&#010;------------------------------------&#010;&#010;             Summary: camel-eventadmin does not allow multiple consumers with the same URI&#010;                 Key: CAMEL-11105&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11105&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: osgi&#010;            Reporter: David Franke&#010;&#010;&#010;I have an application which uses the OSGi EventAdmin to send events when something important&#010;happens. I want to register several EventHandlers for the same event topic to perform different&#010;tasks.&#010;&#010;Use the eventadmin endpoint I can register an endpoint that listens on the OSGi Events.&#010;However if I try to define several routes with the same event topic I get the following exception:&#010;&#010;{{org.apache.camel.FailedToStartRouteException: Failed to start route myapp.example.custom-events&#010;because of Multiple consumers for the same endpoint is not allowed: Endpoint[eventadmin://mycustom/events/*]}}&#010;&#010;I think it should be possible to register several Endpoints for the same Event topic as it&#010;is possible to have several EventHandlers listening on the same topic.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
53,54,David Franke (JIRA),  [jira] [Updated] (CAMEL-11105) camel-eventadmin does not allow multiple consumers with the same URI,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061376.1491296412000.198861.1491296501589%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 09:01:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11105?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;David Franke updated CAMEL-11105:&#010;---------------------------------&#010;    Description: &#010;I have an application which uses the OSGi EventAdmin to send events when something important&#010;happens. I want to register several EventHandlers for the same event topic to perform different&#010;tasks.&#010;&#010;Using the eventadmin endpoint I can register an endpoint that listens on the OSGi Events.&#010;However if I try to define several routes with the same event topic I get the following exception:&#010;&#010;{{org.apache.camel.FailedToStartRouteException: Failed to start route myapp.example.custom-events&#010;because of Multiple consumers for the same endpoint is not allowed: Endpoint[eventadmin://mycustom/events/*]}}&#010;&#010;I think it should be possible to register several Endpoints for the same Event topic as it&#010;is possible to have several EventHandlers listening on the same topic.&#010;&#010;  was:&#010;I have an application which uses the OSGi EventAdmin to send events when something important&#010;happens. I want to register several EventHandlers for the same event topic to perform different&#010;tasks.&#010;&#010;Use the eventadmin endpoint I can register an endpoint that listens on the OSGi Events.&#010;However if I try to define several routes with the same event topic I get the following exception:&#010;&#010;{{org.apache.camel.FailedToStartRouteException: Failed to start route myapp.example.custom-events&#010;because of Multiple consumers for the same endpoint is not allowed: Endpoint[eventadmin://mycustom/events/*]}}&#010;&#010;I think it should be possible to register several Endpoints for the same Event topic as it&#010;is possible to have several EventHandlers listening on the same topic.&#010;&#010;&#010;&gt; camel-eventadmin does not allow multiple consumers with the same URI&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11105&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11105&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: osgi&#010;&gt;            Reporter: David Franke&#010;&gt;&#010;&gt; I have an application which uses the OSGi EventAdmin to send events when something important&#010;happens. I want to register several EventHandlers for the same event topic to perform different&#010;tasks.&#010;&gt; Using the eventadmin endpoint I can register an endpoint that listens on the OSGi Events.&#010;&gt; However if I try to define several routes with the same event topic I get the following&#010;exception:&#010;&gt; {{org.apache.camel.FailedToStartRouteException: Failed to start route myapp.example.custom-events&#010;because of Multiple consumers for the same endpoint is not allowed: Endpoint[eventadmin://mycustom/events/*]}}&#010;&gt; I think it should be possible to register several Endpoints for the same Event topic&#010;as it is possible to have several EventHandlers listening on the same topic.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
54,55,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11105) camel-eventadmin does not allow multiple consumers with the same URI,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061376.1491296412000.198926.1491296921693%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 09:08:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11105?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11105:&#010;--------------------------------&#010;    Priority: Minor  (was: Major)&#010;&#010;&gt; camel-eventadmin does not allow multiple consumers with the same URI&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11105&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11105&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: osgi&#010;&gt;            Reporter: David Franke&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; I have an application which uses the OSGi EventAdmin to send events when something important&#010;happens. I want to register several EventHandlers for the same event topic to perform different&#010;tasks.&#010;&gt; Using the eventadmin endpoint I can register an endpoint that listens on the OSGi Events.&#010;&gt; However if I try to define several routes with the same event topic I get the following&#010;exception:&#010;&gt; {{org.apache.camel.FailedToStartRouteException: Failed to start route myapp.example.custom-events&#010;because of Multiple consumers for the same endpoint is not allowed: Endpoint[eventadmin://mycustom/events/*]}}&#010;&gt; I think it should be possible to register several Endpoints for the same Event topic&#010;as it is possible to have several EventHandlers listening on the same topic.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
55,56,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11105) camel-eventadmin does not allow multiple consumers with the same URI,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061376.1491296412000.198928.1491296921707%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 09:08:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11105?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11105:&#010;--------------------------------&#010;    Issue Type: Improvement  (was: Bug)&#010;&#010;&gt; camel-eventadmin does not allow multiple consumers with the same URI&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11105&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11105&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: osgi&#010;&gt;            Reporter: David Franke&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; I have an application which uses the OSGi EventAdmin to send events when something important&#010;happens. I want to register several EventHandlers for the same event topic to perform different&#010;tasks.&#010;&gt; Using the eventadmin endpoint I can register an endpoint that listens on the OSGi Events.&#010;&gt; However if I try to define several routes with the same event topic I get the following&#010;exception:&#010;&gt; {{org.apache.camel.FailedToStartRouteException: Failed to start route myapp.example.custom-events&#010;because of Multiple consumers for the same endpoint is not allowed: Endpoint[eventadmin://mycustom/events/*]}}&#010;&gt; I think it should be possible to register several Endpoints for the same Event topic&#010;as it is possible to have several EventHandlers listening on the same topic.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
56,57,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11105) camel-eventadmin does not allow multiple consumers with the same URI,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061376.1491296412000.200454.1491309641914%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 12:40:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11105?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11105:&#010;--------------------------------&#010;    Estimated Complexity: Novice  (was: Unknown)&#010;&#010;&gt; camel-eventadmin does not allow multiple consumers with the same URI&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11105&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11105&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: osgi&#010;&gt;            Reporter: David Franke&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; I have an application which uses the OSGi EventAdmin to send events when something important&#010;happens. I want to register several EventHandlers for the same event topic to perform different&#010;tasks.&#010;&gt; Using the eventadmin endpoint I can register an endpoint that listens on the OSGi Events.&#010;&gt; However if I try to define several routes with the same event topic I get the following&#010;exception:&#010;&gt; {{org.apache.camel.FailedToStartRouteException: Failed to start route myapp.example.custom-events&#010;because of Multiple consumers for the same endpoint is not allowed: Endpoint[eventadmin://mycustom/events/*]}}&#010;&gt; I think it should be possible to register several Endpoints for the same Event topic&#010;as it is possible to have several EventHandlers listening on the same topic.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
57,58,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11105) camel-eventadmin does not allow multiple consumers with the same URI,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061376.1491296412000.200459.1491309642054%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 12:40:42 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11105?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15955089#comment-15955089&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11105:&#010;-------------------------------------&#010;&#010;You can contribute a github PR to improve this. You need to do this in the endpoint class&#010;to turn on mulitple consumers&#010;&#010;&gt; camel-eventadmin does not allow multiple consumers with the same URI&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11105&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11105&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: osgi&#010;&gt;            Reporter: David Franke&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; I have an application which uses the OSGi EventAdmin to send events when something important&#010;happens. I want to register several EventHandlers for the same event topic to perform different&#010;tasks.&#010;&gt; Using the eventadmin endpoint I can register an endpoint that listens on the OSGi Events.&#010;&gt; However if I try to define several routes with the same event topic I get the following&#010;exception:&#010;&gt; {{org.apache.camel.FailedToStartRouteException: Failed to start route myapp.example.custom-events&#010;because of Multiple consumers for the same endpoint is not allowed: Endpoint[eventadmin://mycustom/events/*]}}&#010;&gt; I think it should be possible to register several Endpoints for the same Event topic&#010;as it is possible to have several EventHandlers listening on the same topic.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
58,59,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11105) camel-eventadmin does not allow multiple consumers with the same URI,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061376.1491296412000.207851.1491373961573%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 06:32:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11105?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15956379#comment-15956379&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11105:&#010;----------------------------------------&#010;&#010;GitHub user onders86 opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1595&#010;&#010;    CAMEL-11105 - disable endpoint to be singleton&#010;&#010;    &#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/onders86/camel CAMEL-11105&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1595.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1595&#010;    &#010;----&#010;commit 06e15faad98b75b387125c3f12c2a82d18ee157f&#010;Author: onders86 &lt;ondersezgin@gmail.com&gt;&#010;Date:   2017-04-05T06:22:44Z&#010;&#010;    CAMEL-11105 - disable endpoint to be singleton&#010;&#010;----&#010;&#010;&#010;&gt; camel-eventadmin does not allow multiple consumers with the same URI&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11105&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11105&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: osgi&#010;&gt;            Reporter: David Franke&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; I have an application which uses the OSGi EventAdmin to send events when something important&#010;happens. I want to register several EventHandlers for the same event topic to perform different&#010;tasks.&#010;&gt; Using the eventadmin endpoint I can register an endpoint that listens on the OSGi Events.&#010;&gt; However if I try to define several routes with the same event topic I get the following&#010;exception:&#010;&gt; {{org.apache.camel.FailedToStartRouteException: Failed to start route myapp.example.custom-events&#010;because of Multiple consumers for the same endpoint is not allowed: Endpoint[eventadmin://mycustom/events/*]}}&#010;&gt; I think it should be possible to register several Endpoints for the same Event topic&#010;as it is possible to have several EventHandlers listening on the same topic.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
59,60,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11105) camel-eventadmin does not allow multiple consumers with the same URI,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061376.1491296412000.221265.1491464381648%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 07:39:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11105?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11105.&#010;---------------------------------&#010;       Resolution: Fixed&#010;         Assignee: Claus Ibsen&#010;    Fix Version/s: 2.19.0&#010;&#010;Thanks for the PR&#010;&#010;&gt; camel-eventadmin does not allow multiple consumers with the same URI&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11105&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11105&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: osgi&#010;&gt;            Reporter: David Franke&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; I have an application which uses the OSGi EventAdmin to send events when something important&#010;happens. I want to register several EventHandlers for the same event topic to perform different&#010;tasks.&#010;&gt; Using the eventadmin endpoint I can register an endpoint that listens on the OSGi Events.&#010;&gt; However if I try to define several routes with the same event topic I get the following&#010;exception:&#010;&gt; {{org.apache.camel.FailedToStartRouteException: Failed to start route myapp.example.custom-events&#010;because of Multiple consumers for the same endpoint is not allowed: Endpoint[eventadmin://mycustom/events/*]}}&#010;&gt; I think it should be possible to register several Endpoints for the same Event topic&#010;as it is possible to have several EventHandlers listening on the same topic.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
60,61,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11105) camel-eventadmin does not allow multiple consumers with the same URI,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061376.1491296412000.221582.1491467201607%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 08:26:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11105?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15958531#comment-15958531&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11105:&#010;----------------------------------------&#010;&#010;Github user onders86 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1595&#010;&#010;&#010;&gt; camel-eventadmin does not allow multiple consumers with the same URI&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11105&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11105&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: osgi&#010;&gt;            Reporter: David Franke&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; I have an application which uses the OSGi EventAdmin to send events when something important&#010;happens. I want to register several EventHandlers for the same event topic to perform different&#010;tasks.&#010;&gt; Using the eventadmin endpoint I can register an endpoint that listens on the OSGi Events.&#010;&gt; However if I try to define several routes with the same event topic I get the following&#010;exception:&#010;&gt; {{org.apache.camel.FailedToStartRouteException: Failed to start route myapp.example.custom-events&#010;because of Multiple consumers for the same endpoint is not allowed: Endpoint[eventadmin://mycustom/events/*]}}&#010;&gt; I think it should be possible to register several Endpoints for the same Event topic&#010;as it is possible to have several EventHandlers listening on the same topic.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
61,62,,[jira] [Work started] (CAMEL-11081) camel-consul: add support for additional http api,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061376.1491296412000.221582.1491467201607%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 08:26:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11105?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15958531#comment-15958531&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11105:&#010;----------------------------------------&#010;&#010;Github user onders86 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1595&#010;&#010;&#010;&gt; camel-eventadmin does not allow multiple consumers with the same URI&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11105&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11105&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: osgi&#010;&gt;            Reporter: David Franke&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; I have an application which uses the OSGi EventAdmin to send events when something important&#010;happens. I want to register several EventHandlers for the same event topic to perform different&#010;tasks.&#010;&gt; Using the eventadmin endpoint I can register an endpoint that listens on the OSGi Events.&#010;&gt; However if I try to define several routes with the same event topic I get the following&#010;exception:&#010;&gt; {{org.apache.camel.FailedToStartRouteException: Failed to start route myapp.example.custom-events&#010;because of Multiple consumers for the same endpoint is not allowed: Endpoint[eventadmin://mycustom/events/*]}}&#010;&gt; I think it should be possible to register several Endpoints for the same Event topic&#010;as it is possible to have several EventHandlers listening on the same topic.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
62,63,Luca Burgazzoli (JIRA),  [jira] [Work started] (CAMEL-11081) camel-consul: add support for additional http api,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13059694.1490695831000.200048.1491305021579%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 11:23:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11081?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Work on CAMEL-11081 started by Luca Burgazzoli.&#010;-----------------------------------------------&#010;&gt; camel-consul: add support for additional http api&#010;&gt; -------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11081&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11081&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-consul&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; As today the camel-consul component implements the following api:&#010;&gt; - kv&#010;&gt; - event&#010;&gt; - agent&#010;&gt; But it would be nice to extend it and support all the APIs consul supports [1] of course&#010;if OrbitzWorldwide's consul-client [2] support them&#010;&gt; [1] https://www.consul.io/docs/agent/http.html&#010;&gt; [2] https://github.com/OrbitzWorldwide/consul-client&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
63,64,Luca Burgazzoli (JIRA),  [jira] [Resolved] (CAMEL-11081) camel-consul: add support for additional http api,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13059694.1490695831000.207573.1491370182101%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 05:29:42 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11081?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-11081.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; camel-consul: add support for additional http api&#010;&gt; -------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11081&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11081&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-consul&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; As today the camel-consul component implements the following api:&#010;&gt; - kv&#010;&gt; - event&#010;&gt; - agent&#010;&gt; But it would be nice to extend it and support all the APIs consul supports [1] of course&#010;if OrbitzWorldwide's consul-client [2] support them&#010;&gt; [1] https://www.consul.io/docs/agent/http.html&#010;&gt; [2] https://github.com/OrbitzWorldwide/consul-client&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
64,65,,[jira] [Created] (CAMEL-11106) camel-sql - allow using the $simple{} syntax for query arguments,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13059694.1490695831000.207573.1491370182101%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 05:29:42 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11081?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-11081.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; camel-consul: add support for additional http api&#010;&gt; -------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11081&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11081&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-consul&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; As today the camel-consul component implements the following api:&#010;&gt; - kv&#010;&gt; - event&#010;&gt; - agent&#010;&gt; But it would be nice to extend it and support all the APIs consul supports [1] of course&#010;if OrbitzWorldwide's consul-client [2] support them&#010;&gt; [1] https://www.consul.io/docs/agent/http.html&#010;&gt; [2] https://github.com/OrbitzWorldwide/consul-client&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
65,66,Nicola Ferraro (JIRA),  [jira] [Created] (CAMEL-11106) camel-sql - allow using the $simple{} syntax for query arguments,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061422.1491310013000.200487.1491310061522%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 12:47:41 GMT","Nicola Ferraro created CAMEL-11106:&#010;--------------------------------------&#010;&#010;             Summary: camel-sql - allow using the $simple{} syntax for query arguments&#010;                 Key: CAMEL-11106&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11106&#010;             Project: Camel&#010;          Issue Type: Bug&#010;            Reporter: Nicola Ferraro&#010;            Assignee: Nicola Ferraro&#010;&#010;&#010;The $simple{} syntax is useful to avoid clash with spring property placeholders. The camel-sql&#010;component does not recognize it, so when users create endpoints like:&#010;&#010;{code}&#010;&lt;to id=""_to1"" uri=""sql:select * from accounts where customerid = :#${header.xxx}?dataSource=dataSource""/&gt;&#010;{code}&#010;&#010;I.e. use the id field and the ""${header.xxx}"" syntax, spring tries to find a property named&#010;""header.xxx"" and crashes.&#010;&#010;We should allow writing:&#010;{code}&#010;&lt;to id=""_to1"" uri=""sql:select * from accounts where customerid = :#$simple{header.xxx}?dataSource=dataSource""/&gt;&#010;{code}&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
66,67,Nicola Ferraro (JIRA),  [jira] [Updated] (CAMEL-11106) camel-sql - allow using the $simple{} syntax for query arguments,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061422.1491310013000.200498.1491310181610%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 12:49:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11106?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro updated CAMEL-11106:&#010;-----------------------------------&#010;    Component/s: camel-sql&#010;&#010;&gt; camel-sql - allow using the $simple{} syntax for query arguments&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11106&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11106&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sql&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;&#010;&gt; The $simple{} syntax is useful to avoid clash with spring property placeholders. The&#010;camel-sql component does not recognize it, so when users create endpoints like:&#010;&gt; {code}&#010;&gt; &lt;to id=""_to1"" uri=""sql:select * from accounts where customerid = :#${header.xxx}?dataSource=dataSource""/&gt;&#010;&gt; {code}&#010;&gt; I.e. use the id field and the ""${header.xxx}"" syntax, spring tries to find a property&#010;named ""header.xxx"" and crashes.&#010;&gt; We should allow writing:&#010;&gt; {code}&#010;&gt; &lt;to id=""_to1"" uri=""sql:select * from accounts where customerid = :#$simple{header.xxx}?dataSource=dataSource""/&gt;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
67,68,Nicola Ferraro (JIRA),  [jira] [Updated] (CAMEL-11106) camel-sql - allow using the $simple{} syntax for query arguments,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061422.1491310013000.200522.1491310901649%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 13:01:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11106?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro updated CAMEL-11106:&#010;-----------------------------------&#010;    Affects Version/s: 2.18.3&#010;&#010;&gt; camel-sql - allow using the $simple{} syntax for query arguments&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11106&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11106&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sql&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.18.4&#010;&gt;&#010;&gt;&#010;&gt; The $simple{} syntax is useful to avoid clash with spring property placeholders. The&#010;camel-sql component does not recognize it, so when users create endpoints like:&#010;&gt; {code}&#010;&gt; &lt;to id=""_to1"" uri=""sql:select * from accounts where customerid = :#${header.xxx}?dataSource=dataSource""/&gt;&#010;&gt; {code}&#010;&gt; I.e. use the id field and the ""${header.xxx}"" syntax, spring tries to find a property&#010;named ""header.xxx"" and crashes.&#010;&gt; We should allow writing:&#010;&gt; {code}&#010;&gt; &lt;to id=""_to1"" uri=""sql:select * from accounts where customerid = :#$simple{header.xxx}?dataSource=dataSource""/&gt;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
68,69,Nicola Ferraro (JIRA),  [jira] [Updated] (CAMEL-11106) camel-sql - allow using the $simple{} syntax for query arguments,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061422.1491310013000.200523.1491310901658%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 13:01:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11106?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro updated CAMEL-11106:&#010;-----------------------------------&#010;    Fix Version/s: 2.18.4&#010;&#010;&gt; camel-sql - allow using the $simple{} syntax for query arguments&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11106&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11106&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sql&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.18.4&#010;&gt;&#010;&gt;&#010;&gt; The $simple{} syntax is useful to avoid clash with spring property placeholders. The&#010;camel-sql component does not recognize it, so when users create endpoints like:&#010;&gt; {code}&#010;&gt; &lt;to id=""_to1"" uri=""sql:select * from accounts where customerid = :#${header.xxx}?dataSource=dataSource""/&gt;&#010;&gt; {code}&#010;&gt; I.e. use the id field and the ""${header.xxx}"" syntax, spring tries to find a property&#010;named ""header.xxx"" and crashes.&#010;&gt; We should allow writing:&#010;&gt; {code}&#010;&gt; &lt;to id=""_to1"" uri=""sql:select * from accounts where customerid = :#$simple{header.xxx}?dataSource=dataSource""/&gt;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
69,70,Nicola Ferraro (JIRA),  [jira] [Resolved] (CAMEL-11106) camel-sql - allow using the $simple{} syntax for query arguments,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061422.1491310013000.211149.1491402101894%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 14:21:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11106?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro resolved CAMEL-11106.&#010;------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; camel-sql - allow using the $simple{} syntax for query arguments&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11106&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11106&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sql&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.18.4&#010;&gt;&#010;&gt;&#010;&gt; The $simple{} syntax is useful to avoid clash with spring property placeholders. The&#010;camel-sql component does not recognize it, so when users create endpoints like:&#010;&gt; {code}&#010;&gt; &lt;to id=""_to1"" uri=""sql:select * from accounts where customerid = :#${header.xxx}?dataSource=dataSource""/&gt;&#010;&gt; {code}&#010;&gt; I.e. use the id field and the ""${header.xxx}"" syntax, spring tries to find a property&#010;named ""header.xxx"" and crashes.&#010;&gt; We should allow writing:&#010;&gt; {code}&#010;&gt; &lt;to id=""_to1"" uri=""sql:select * from accounts where customerid = :#$simple{header.xxx}?dataSource=dataSource""/&gt;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
70,71,,[jira] [Commented] (CAMEL-11060) dn shouldn't be strictly required for Spring LDAP component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061422.1491310013000.211149.1491402101894%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 14:21:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11106?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro resolved CAMEL-11106.&#010;------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; camel-sql - allow using the $simple{} syntax for query arguments&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11106&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11106&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sql&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.18.4&#010;&gt;&#010;&gt;&#010;&gt; The $simple{} syntax is useful to avoid clash with spring property placeholders. The&#010;camel-sql component does not recognize it, so when users create endpoints like:&#010;&gt; {code}&#010;&gt; &lt;to id=""_to1"" uri=""sql:select * from accounts where customerid = :#${header.xxx}?dataSource=dataSource""/&gt;&#010;&gt; {code}&#010;&gt; I.e. use the id field and the ""${header.xxx}"" syntax, spring tries to find a property&#010;named ""header.xxx"" and crashes.&#010;&gt; We should allow writing:&#010;&gt; {code}&#010;&gt; &lt;to id=""_to1"" uri=""sql:select * from accounts where customerid = :#$simple{header.xxx}?dataSource=dataSource""/&gt;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
71,72,onder sezgin (JIRA),  [jira] [Commented] (CAMEL-11060) dn shouldn't be strictly required for Spring LDAP component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058707.1490295911000.201209.1491318342414%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 15:05:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11060?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15955226#comment-15955226&#010;] &#010;&#010;onder sezgin commented on CAMEL-11060:&#010;--------------------------------------&#010;&#010;well, i think better approach would be able to check if baseDN was set on LdapTemplate and&#010;if none, grab the DN from the enpoint options. I am not an expert on ldap and spring-ldap&#010;API. However, i could not see a way to check if LdapTemplate was created with baseDN. spring-ldap&#010;has limitations i guess and so the component comes with it. How about an option on the endpoint,&#010;so that camel would give you the control over if you set the base dn or not? maybe we can&#010;work on such PR? what do you think?&#010;&#010;&gt; dn shouldn't be strictly required for Spring LDAP component&#010;&gt; -----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11060&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11060&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Ken Geis&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; I set a base DN in my LdapContextSource underlying the LdapTemplate. It's redundant to&#010;need to set it in my route, but if I don't, the SpringLdapProducer complains ""DN must not&#010;be empty, but you provided an empty DN"".&#010;&gt; In other code, I do this and regularly pass an empty string as the base to LdapTemplate.search(base,&#010;...).&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
72,73,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11060) dn shouldn't be strictly required for Spring LDAP component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058707.1490295911000.203475.1491331301912%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 18:41:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11060?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15955596#comment-15955596&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11060:&#010;----------------------------------------&#010;&#010;GitHub user kgeis opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1592&#010;&#010;    CAMEL-11060: fall back to context source base DN&#010;&#010;    This patch makes the Spring LDAP component so that if no ""dn"" parameter is specified,&#010;it uses the base defined on the Spring LDAP ContextSource. An error will only occur if the&#010;base is defined in neither place.&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/kgeis/camel CAMEL-11060&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1592.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1592&#010;    &#010;----&#010;commit 018be2d8dbae53fd262eebeaeee7f7be3c825a33&#010;Author: Ken Geis &lt;kgeis@berkeley.edu&gt;&#010;Date:   2017-04-04T18:34:22Z&#010;&#010;    CAMEL-11060: fall back on base DN specified on Spring LDAP context source if none is defined&#010;in the URI&#010;&#010;----&#010;&#010;&#010;&gt; dn shouldn't be strictly required for Spring LDAP component&#010;&gt; -----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11060&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11060&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Ken Geis&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; I set a base DN in my LdapContextSource underlying the LdapTemplate. It's redundant to&#010;need to set it in my route, but if I don't, the SpringLdapProducer complains ""DN must not&#010;be empty, but you provided an empty DN"".&#010;&gt; In other code, I do this and regularly pass an empty string as the base to LdapTemplate.search(base,&#010;...).&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
73,74,Ken Geis (JIRA),  [jira] [Commented] (CAMEL-11060) dn shouldn't be strictly required for Spring LDAP component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058707.1490295911000.203490.1491331361808%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 18:42:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11060?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15955599#comment-15955599&#010;] &#010;&#010;Ken Geis commented on CAMEL-11060:&#010;----------------------------------&#010;&#010;I've created a pull request: [CAMEL-11060: fall back to context source base DN|https://github.com/apache/camel/pull/1592]&#010;&#010;&gt; dn shouldn't be strictly required for Spring LDAP component&#010;&gt; -----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11060&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11060&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Ken Geis&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; I set a base DN in my LdapContextSource underlying the LdapTemplate. It's redundant to&#010;need to set it in my route, but if I don't, the SpringLdapProducer complains ""DN must not&#010;be empty, but you provided an empty DN"".&#010;&gt; In other code, I do this and regularly pass an empty string as the base to LdapTemplate.search(base,&#010;...).&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
74,75,Ken Geis (JIRA),  [jira] [Issue Comment Deleted] (CAMEL-11060) dn shouldn't be strictly required for Spring LDAP component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058707.1490295911000.203497.1491331421693%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 18:43:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11060?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Ken Geis updated CAMEL-11060:&#010;-----------------------------&#010;    Comment: was deleted&#010;&#010;(was: I've created a pull request: [CAMEL-11060: fall back to context source base DN|https://github.com/apache/camel/pull/1592])&#010;&#010;&gt; dn shouldn't be strictly required for Spring LDAP component&#010;&gt; -----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11060&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11060&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Ken Geis&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; I set a base DN in my LdapContextSource underlying the LdapTemplate. It's redundant to&#010;need to set it in my route, but if I don't, the SpringLdapProducer complains ""DN must not&#010;be empty, but you provided an empty DN"".&#010;&gt; In other code, I do this and regularly pass an empty string as the base to LdapTemplate.search(base,&#010;...).&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
75,76,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11060) dn shouldn't be strictly required for Spring LDAP component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058707.1490295911000.263555.1491985842230%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 08:30:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11060?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965549#comment-15965549&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11060:&#010;----------------------------------------&#010;&#010;Github user asfgit closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1592&#010;&#010;&#010;&gt; dn shouldn't be strictly required for Spring LDAP component&#010;&gt; -----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11060&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11060&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Ken Geis&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; I set a base DN in my LdapContextSource underlying the LdapTemplate. It's redundant to&#010;need to set it in my route, but if I don't, the SpringLdapProducer complains ""DN must not&#010;be empty, but you provided an empty DN"".&#010;&gt; In other code, I do this and regularly pass an empty string as the base to LdapTemplate.search(base,&#010;...).&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
76,77,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11060) dn shouldn't be strictly required for Spring LDAP component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058707.1490295911000.263550.1491985842186%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 08:30:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11060?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11060.&#010;---------------------------------&#010;       Resolution: Fixed&#010;         Assignee: Claus Ibsen&#010;    Fix Version/s: 2.19.0&#010;&#010;Thanks for the PR&#010;&#010;&gt; dn shouldn't be strictly required for Spring LDAP component&#010;&gt; -----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11060&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11060&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Ken Geis&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; I set a base DN in my LdapContextSource underlying the LdapTemplate. It's redundant to&#010;need to set it in my route, but if I don't, the SpringLdapProducer complains ""DN must not&#010;be empty, but you provided an empty DN"".&#010;&gt; In other code, I do this and regularly pass an empty string as the base to LdapTemplate.search(base,&#010;...).&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
77,78,,[jira] [Created] (CAMEL-11107) Create a new camel-grpc component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058707.1490295911000.263550.1491985842186%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 08:30:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11060?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11060.&#010;---------------------------------&#010;       Resolution: Fixed&#010;         Assignee: Claus Ibsen&#010;    Fix Version/s: 2.19.0&#010;&#010;Thanks for the PR&#010;&#010;&gt; dn shouldn't be strictly required for Spring LDAP component&#010;&gt; -----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11060&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11060&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Ken Geis&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; I set a base DN in my LdapContextSource underlying the LdapTemplate. It's redundant to&#010;need to set it in my route, but if I don't, the SpringLdapProducer complains ""DN must not&#010;be empty, but you provided an empty DN"".&#010;&gt; In other code, I do this and regularly pass an empty string as the base to LdapTemplate.search(base,&#010;...).&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
78,79,Dmitry Volodin (JIRA),  [jira] [Created] (CAMEL-11107) Create a new camel-grpc component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061463.1491321623000.201616.1491321643972%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 16:00:43 GMT",Dmitry Volodin created CAMEL-11107:&#010;--------------------------------------&#010;&#010;             Summary: Create a new camel-grpc component &#010;                 Key: CAMEL-11107&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11107&#010;             Project: Camel&#010;          Issue Type: Sub-task&#010;    Affects Versions: 2.19.0&#010;            Reporter: Dmitry Volodin&#010;&#010;&#010;Create a new camel-grpc component which allows to do Remote Procedure Call (RPC) Protocol&#010;Buffers (protobuf)] format over HTTP/2 transport.&#010;Stage 1: Producer with basic parameters and calling sync and async methods&#010;Stage 2: Consumer and extended parameters (future PR)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
79,80,Dmitry Volodin (JIRA),  [jira] [Updated] (CAMEL-11107) Create a new camel-grpc component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061463.1491321623000.201629.1491321821685%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 16:03:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11107?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Dmitry Volodin updated CAMEL-11107:&#010;-----------------------------------&#010;    Description: &#010;Create a new camel-grpc component which allows to do Remote Procedure Call (RPC) Protocol&#010;Buffers (protobuf)] format over HTTP/2 transport.&#010;Stage 1: Producer with basic parameters and calling sync and async methods&#010;Stage 2: Consumer and extended producer parameters (separate future PR)&#010;&#010;  was:&#010;Create a new camel-grpc component which allows to do Remote Procedure Call (RPC) Protocol&#010;Buffers (protobuf)] format over HTTP/2 transport.&#010;Stage 1: Producer with basic parameters and calling sync and async methods&#010;Stage 2: Consumer and extended parameters (future PR)&#010;&#010;&#010;&gt; Create a new camel-grpc component &#010;&gt; ----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11107&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11107&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; Create a new camel-grpc component which allows to do Remote Procedure Call (RPC) Protocol&#010;Buffers (protobuf)] format over HTTP/2 transport.&#010;&gt; Stage 1: Producer with basic parameters and calling sync and async methods&#010;&gt; Stage 2: Consumer and extended producer parameters (separate future PR)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
80,81,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11107) Create a new camel-grpc component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061463.1491321623000.209016.1491385301632%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 09:41:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11107?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15956586#comment-15956586&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11107:&#010;----------------------------------------&#010;&#010;GitHub user dmvolod opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1596&#010;&#010;    CAMEL-11107: Create a new camel-grpc component&#010;&#010;    Create a new camel-grpc component which allows to do Remote Procedure Call (RPC) Protocol&#010;Buffers (protobuf)] format over HTTP/2 transport.&#010;    Stage 1 - Producer with basic parameters and calling sync and async methods&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/dmvolod/camel CAMEL-11107&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1596.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1596&#010;    &#010;----&#010;commit efbd65919ba8a7de8261a869756bed109254db1a&#010;Author: Dmitry Volodin &lt;dmvolod@gmail.com&gt;&#010;Date:   2017-04-05T09:25:13Z&#010;&#010;    CAMEL-11107: Create a new camel-grpc component&#010;&#010;commit cf6173668c4562090f383737aab8127d31eb43ea&#010;Author: Dmitry Volodin &lt;dmvolod@gmail.com&gt;&#010;Date:   2017-04-05T09:38:37Z&#010;&#010;    CAMEL-11107: Changing camel-grpc documentation&#010;&#010;----&#010;&#010;&#010;&gt; Create a new camel-grpc component &#010;&gt; ----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11107&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11107&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; Create a new camel-grpc component which allows to do Remote Procedure Call (RPC) Protocol&#010;Buffers (protobuf)] format over HTTP/2 transport.&#010;&gt; Stage 1: Producer with basic parameters and calling sync and async methods&#010;&gt; Stage 2: Consumer and extended producer parameters (separate future PR)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
81,82,Andrea Cosentino (JIRA),  [jira] [Assigned] (CAMEL-11107) Create a new camel-grpc component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061463.1491321623000.209050.1491385482194%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 09:44:42 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11107?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino reassigned CAMEL-11107:&#010;----------------------------------------&#010;&#010;    Assignee: Andrea Cosentino&#010;&#010;&gt; Create a new camel-grpc component &#010;&gt; ----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11107&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11107&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; Create a new camel-grpc component which allows to do Remote Procedure Call (RPC) Protocol&#010;Buffers (protobuf)] format over HTTP/2 transport.&#010;&gt; Stage 1: Producer with basic parameters and calling sync and async methods&#010;&gt; Stage 2: Consumer and extended producer parameters (separate future PR)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
82,83,Dmitry Volodin (JIRA),  [jira] [Updated] (CAMEL-11107) Create a new camel-grpc component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061463.1491321623000.210697.1491399161687%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 13:32:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11107?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Dmitry Volodin updated CAMEL-11107:&#010;-----------------------------------&#010;    Labels: grpc protobuf  (was: )&#010;&#010;&gt; Create a new camel-grpc component &#010;&gt; ----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11107&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11107&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;              Labels: grpc, protobuf&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; Create a new camel-grpc component which allows to do Remote Procedure Call (RPC) Protocol&#010;Buffers (protobuf)] format over HTTP/2 transport.&#010;&gt; Stage 1: Producer with basic parameters and calling sync and async methods&#010;&gt; Stage 2: Consumer and extended producer parameters (separate future PR)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
83,84,Andrea Cosentino (JIRA),  [jira] [Updated] (CAMEL-11107) Create a new camel-grpc component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061463.1491321623000.210705.1491399221723%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 13:33:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11107?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino updated CAMEL-11107:&#010;-------------------------------------&#010;    Fix Version/s:     (was: Future)&#010;                   2.19.0&#010;&#010;&gt; Create a new camel-grpc component &#010;&gt; ----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11107&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11107&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;              Labels: grpc, protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Create a new camel-grpc component which allows to do Remote Procedure Call (RPC) Protocol&#010;Buffers (protobuf)] format over HTTP/2 transport.&#010;&gt; Stage 1: Producer with basic parameters and calling sync and async methods&#010;&gt; Stage 2: Consumer and extended producer parameters (separate future PR)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
84,85,Andrea Cosentino (JIRA),  [jira] [Resolved] (CAMEL-11107) Create a new camel-grpc component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061463.1491321623000.234568.1491566801719%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 12:06:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11107?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino resolved CAMEL-11107.&#010;--------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Create a new camel-grpc component &#010;&gt; ----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11107&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11107&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;              Labels: grpc, protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Create a new camel-grpc component which allows to do Remote Procedure Call (RPC) Protocol&#010;Buffers (protobuf)] format over HTTP/2 transport.&#010;&gt; Stage 1: Producer with basic parameters and calling sync and async methods&#010;&gt; Stage 2: Consumer and extended producer parameters (separate future PR)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
85,86,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11107) Create a new camel-grpc component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061463.1491321623000.234755.1491568302005%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 12:31:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11107?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960694#comment-15960694&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11107:&#010;----------------------------------------&#010;&#010;Github user dmvolod closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1596&#010;&#010;&#010;&gt; Create a new camel-grpc component &#010;&gt; ----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11107&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11107&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;              Labels: grpc, protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Create a new camel-grpc component which allows to do Remote Procedure Call (RPC) Protocol&#010;Buffers (protobuf)] format over HTTP/2 transport.&#010;&gt; Stage 1: Producer with basic parameters and calling sync and async methods&#010;&gt; Stage 2: Consumer and extended producer parameters (separate future PR)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
86,87,,[jira] [Commented] (CAMEL-11006) Auto generate REST DSL for Camel from Swagger2.0/OAI specification,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061463.1491321623000.234755.1491568302005%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 12:31:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11107?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960694#comment-15960694&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11107:&#010;----------------------------------------&#010;&#010;Github user dmvolod closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1596&#010;&#010;&#010;&gt; Create a new camel-grpc component &#010;&gt; ----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11107&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11107&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;              Labels: grpc, protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Create a new camel-grpc component which allows to do Remote Procedure Call (RPC) Protocol&#010;Buffers (protobuf)] format over HTTP/2 transport.&#010;&gt; Stage 1: Producer with basic parameters and calling sync and async methods&#010;&gt; Stage 2: Consumer and extended producer parameters (separate future PR)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
87,88,Christian Posta (JIRA),  [jira] [Commented] (CAMEL-11006) Auto generate REST DSL for Camel from Swagger2.0/OAI specification,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050594.1489418427000.202674.1491327461969%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 17:37:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11006?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15955480#comment-15955480&#010;] &#010;&#010;Christian Posta commented on CAMEL-11006:&#010;-----------------------------------------&#010;&#010;So honestly, this looks great! So i do like the annotation-processor approach here as well.&#010;&#010;Are there plans to include this in the maven plugin? &#010;&#010;&gt; Auto generate REST DSL for Camel from Swagger2.0/OAI specification&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11006&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11006&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Christian Posta&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; Would be awesome if we can generate a stub server project that has all dependencies in&#010;the pom.xml and implement the OAI spec with Camel REST DSL + swagger documentation annotations.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
88,89,Zoran Regvart (JIRA),  [jira] [Commented] (CAMEL-11006) Auto generate REST DSL for Camel from Swagger2.0/OAI specification,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050594.1489418427000.202859.1491328361896%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 17:52:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11006?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15955506#comment-15955506&#010;] &#010;&#010;Zoran Regvart commented on CAMEL-11006:&#010;---------------------------------------&#010;&#010;Yeah, I'm worming up to a maven plugin workflow, the annotation processor will take considerable&#010;effort (like lombok) to get it to work properly in IDEs, but I have it almost done (will create&#010;a PR soon).&#010;&#010;&gt; Auto generate REST DSL for Camel from Swagger2.0/OAI specification&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11006&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11006&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Christian Posta&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; Would be awesome if we can generate a stub server project that has all dependencies in&#010;the pom.xml and implement the OAI spec with Camel REST DSL + swagger documentation annotations.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
89,90,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11006) Auto generate REST DSL for Camel from Swagger2.0/OAI specification,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050594.1489418427000.274753.1492081721624%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 11:08:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11006?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11006.&#010;-----------------------------------&#010;       Resolution: Done&#010;    Fix Version/s:     (was: Future)&#010;                   2.19.0&#010;&#010;We now have a general code generation utility and a Maven plugin based on it&#010;&#010;&gt; Auto generate REST DSL for Camel from Swagger2.0/OAI specification&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11006&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11006&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Christian Posta&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Would be awesome if we can generate a stub server project that has all dependencies in&#010;the pom.xml and implement the OAI spec with Camel REST DSL + swagger documentation annotations.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
90,91,,[jira] [Commented] (CAMEL-11087) Create a Annotation processor that creates REST DSL source code from Swagger specification,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050594.1489418427000.274753.1492081721624%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 11:08:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11006?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11006.&#010;-----------------------------------&#010;       Resolution: Done&#010;    Fix Version/s:     (was: Future)&#010;                   2.19.0&#010;&#010;We now have a general code generation utility and a Maven plugin based on it&#010;&#010;&gt; Auto generate REST DSL for Camel from Swagger2.0/OAI specification&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11006&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11006&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Christian Posta&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Would be awesome if we can generate a stub server project that has all dependencies in&#010;the pom.xml and implement the OAI spec with Camel REST DSL + swagger documentation annotations.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
91,92,Christian Posta (JIRA),  [jira] [Commented] (CAMEL-11087) Create a Annotation processor that creates REST DSL source code from Swagger specification,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13059843.1490734376000.202699.1491327521817%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 17:38:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11087?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15955482#comment-15955482&#010;] &#010;&#010;Christian Posta commented on CAMEL-11087:&#010;-----------------------------------------&#010;&#010;This sounds great. So is the plan to annotate the Java classes that specify the CamelContext&#010;configuration? i.e., like in a spring config file or in custom bootstrapping camel class?&#010;&#010;&gt; Create a Annotation processor that creates REST DSL source code from Swagger specification&#010;&gt; ------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11087&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11087&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; With the generator implemented in CAMEL-11006 an annotation processor can be built that&#010;takes the Swagger specification and generates the REST DSL source code.&#010;&gt; I'm thinking of one annotation, something like:&#010;&gt; {code:java}&#010;&gt; @RestDsl(specification=""petstore.json"", package=""com.example"", name=""MyPetstore"")&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
92,93,Zoran Regvart (JIRA),  [jira] [Commented] (CAMEL-11087) Create a Annotation processor that creates REST DSL source code from Swagger specification,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13059843.1490734376000.202855.1491328301696%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 17:51:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11087?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15955504#comment-15955504&#010;] &#010;&#010;Zoran Regvart commented on CAMEL-11087:&#010;---------------------------------------&#010;&#010;Mind you, you could place this annotation on any type, but yes, a class that contributes to&#010;CamelContext configuration would be the best place, for instance a RouteBuilder that defines&#010;all the direct routes. I don't think that field or method would make sense.&#010;I'm just about to create a PR with annotation processor, there are a few dark corners in it,&#010;and it's sprinkled with black magic, so I would appreciate anyone joining in the review.&#010;&#010;&gt; Create a Annotation processor that creates REST DSL source code from Swagger specification&#010;&gt; ------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11087&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11087&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; With the generator implemented in CAMEL-11006 an annotation processor can be built that&#010;takes the Swagger specification and generates the REST DSL source code.&#010;&gt; I'm thinking of one annotation, something like:&#010;&gt; {code:java}&#010;&gt; @RestDsl(specification=""petstore.json"", package=""com.example"", name=""MyPetstore"")&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
93,94,Christian Posta (JIRA),  [jira] [Updated] (CAMEL-11087) Create a Annotation processor that creates REST DSL source code from Swagger specification,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13059843.1490734376000.202898.1491328541765%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 17:55:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11087?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Christian Posta updated CAMEL-11087:&#010;------------------------------------&#010;&#010;Cool. I'll take a look when you send the PR.&#010;&#010;On Tue, Apr 4, 2017 at 10:51 AM, Zoran Regvart (JIRA) &lt;jira@apache.org&gt;&#010;&#010;&#010;&#010;&#010;-- &#010;*Christian Posta*&#010;twitter: @christianposta&#010;http://www.christianposta.com/blog&#010;http://fabric8.io&#010;&#010;&#010;&gt; Create a Annotation processor that creates REST DSL source code from Swagger specification&#010;&gt; ------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11087&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11087&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; With the generator implemented in CAMEL-11006 an annotation processor can be built that&#010;takes the Swagger specification and generates the REST DSL source code.&#010;&gt; I'm thinking of one annotation, something like:&#010;&gt; {code:java}&#010;&gt; @RestDsl(specification=""petstore.json"", package=""com.example"", name=""MyPetstore"")&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
94,95,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11087) Create a Annotation processor that creates REST DSL source code from Swagger specification,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13059843.1490734376000.204823.1491340601611%40Atlassian.JIRA%3E,issues,"Tue, 04 Apr 2017 21:16:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11087?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15955826#comment-15955826&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11087:&#010;----------------------------------------&#010;&#010;GitHub user zregvart opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1594&#010;&#010;    CAMEL-11087 Create a Annotation processor that creates REST DSL source code from Swagger&#010;specification&#010;&#010;    **This crazy implementation submitted for review, thanks for looking at it ðŸ¥‡** &#010;    &#010;    I would specifically like to know:&#010;     - is there a need for this (I have a Maven plugin in mind also)?&#010;     - is this too convoluted and too hacky?&#010;     - as usual any other suggestions on code style/implementation choices&#010;    &#010;    This is an implementation of the Annotation processor to generate REST&#010;    DSL RouteBuilder source code from Swagger specification. The processor&#010;    is triggered by the presence of @SwaggerRestDsl annotation:&#010;    &#010;        @SwaggerRestDsl(className = ""MyRestRoute"",&#010;            packageName = ""com.example"",&#010;            specificationUri = ""specification.json""&#010;            destinationGenerator = CustomDestinationGenerator.class)&#010;    &#010;    This would generate source code for `com.example.MyRestRoute` from&#010;    `specification.json` using `CustomDestinationGenerator` to generate `to`&#010;    route endpoint.&#010;    &#010;    `@SwaggerRestDsl` annotation can be placed on a Java type&#010;    (`ElementType.TYPE`), and it is not present in the compiled class&#010;    (`RetentionPolicy.SOURCE`).&#010;    &#010;    Annotation processors do not _in general_ access resources outside Java&#010;    type system, this can be done but not with 100% reliability, most&#010;    notably when used in IDEs accessing resources can fail. This is mostly&#010;    due to a fact that `Filer::getResource`[1] does not mandate the support&#010;    for `StandardLocation.SOURCE_PATH`[2] location. So this implementation&#010;    tries to search for the specified `specificationUri`.&#010;    &#010;    There is no support for remote (i.e. http) `specificationUri`s.&#010;    &#010;    The use of `destinationGenerator` is also very contrary to annotation&#010;    processor architecture. Accessing `Class` objects that are being&#010;    compiled is not possible as one has access to a partial AST (with&#010;    com.sun.* full AST) through `javax.lang.model.element`&#010;    and `javax.lang.model.type` packages. So if the `destinationGenerator`&#010;    is not present on the output (usually target/classes with Maven), the&#010;    implementation locates the source code for the DestinationGenerator and&#010;    spawns another compiler to output the compiled class into a temp&#010;    directory. The classpath needed for this step is computed by enumerating&#010;    all elements within `StandardLocation.CLASS_PATH` and computing paths to&#010;    either JAR files or directories (`bin`, and directories containing the&#010;    word `classes` are picked). If the class is found compiled within output&#010;    directory (incremental compile) or class has been compiled into the temp&#010;    directory (clean compile) it  can be loaded and instantiated and used in&#010;    REST DSL generation.&#010;    &#010;    [1] https://docs.oracle.com/javase/8/docs/api/javax/annotation/processing/Filer.html#getResource-javax.tools.JavaFileManager.Location-java.lang.CharSequence-java.lang.CharSequence-&#010;    [2] https://docs.oracle.com/javase/8/docs/api/javax/tools/StandardLocation.html#SOURCE_PATH&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/zregvart/camel CAMEL-11087&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1594.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1594&#010;    &#010;----&#010;commit 58b77c2ffbf9a36f3d43ccdde2e13ae79eafde90&#010;Author: Zoran Regvart &lt;zregvart@apache.org&gt;&#010;Date:   2017-04-03T19:47:45Z&#010;&#010;    CAMEL-11087 Create a Annotation processor that ...&#010;    &#010;    ...creates REST DSL source code from Swagger specification&#010;    &#010;    This is an implementation of the Annotation processor to generate REST&#010;    DSL RouteBuilder source code from Swagger specification. The processor&#010;    is triggered by the presence of @SwaggerRestDsl annotation:&#010;    &#010;        @SwaggerRestDsl(className = ""MyRestRoute"",&#010;            packageName = ""com.example"",&#010;            specificationUri = ""specification.json""&#010;            destinationGenerator = CustomDestinationGenerator.class)&#010;    &#010;    This would generate source code for `com.example.MyRestRoute` from&#010;    `specification.json` using `CustomDestinationGenerator` to generate `to`&#010;    route endpoint.&#010;    &#010;    `@SwaggerRestDsl` annotation can be placed on a Java type&#010;    (`ElementType.TYPE`), and it is not present in the compiled class&#010;    (`RetentionPolicy.SOURCE`).&#010;    &#010;    Annotation processors do not _in general_ access resources outside Java&#010;    type system, this can be done but not with 100% reliability, most&#010;    notably when used in IDEs accessing resources can fail. This is mostly&#010;    due to a fact that `Filer::getResource`[1] does not mandate the support&#010;    for `StandardLocation.SOURCE_PATH`[2] location. So this implementation&#010;    tries to search for the specified `specificationUri`.&#010;    &#010;    There is no support for remote (i.e. http) `specificationUri`s.&#010;    &#010;    The use of `destinationGenerator` is also very contrary to annotation&#010;    processor architecture. Accessing `Class` objects that are being&#010;    compiled is not possible as one has access to a partial AST (with&#010;    com.sun.* full AST) through `javax.lang.model.element`&#010;    and `javax.lang.model.type` packages. So if the `destinationGenerator`&#010;    is not present on the output (usually target/classes with Maven), the&#010;    implementation locates the source code for the DestinationGenerator and&#010;    spawns another compiler to output the compiled class into a temp&#010;    directory. The classpath needed for this step is computed by enumerating&#010;    all elements within `StandardLocation.CLASS_PATH` and computing paths to&#010;    either JAR files or directories (`bin`, and directories containing the&#010;    word `classes` are picked). If the class is found compiled within output&#010;    directory (incremental compile) or class has been compiled into the temp&#010;    directory (clean compile) it  can be loaded and instantiated and used in&#010;    REST DSL generation.&#010;    &#010;    [1] https://docs.oracle.com/javase/8/docs/api/javax/annotation/processing/Filer.html#getResource-javax.tools.JavaFileManager.Location-java.lang.CharSequence-java.lang.CharSequence-&#010;    [2] https://docs.oracle.com/javase/8/docs/api/javax/tools/StandardLocation.html#SOURCE_PATH&#010;&#010;----&#010;&#010;&#010;&gt; Create a Annotation processor that creates REST DSL source code from Swagger specification&#010;&gt; ------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11087&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11087&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; With the generator implemented in CAMEL-11006 an annotation processor can be built that&#010;takes the Swagger specification and generates the REST DSL source code.&#010;&gt; I'm thinking of one annotation, something like:&#010;&gt; {code:java}&#010;&gt; @RestDsl(specification=""petstore.json"", package=""com.example"", name=""MyPetstore"")&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
95,96,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11087) Create a Annotation processor that creates REST DSL source code from Swagger specification,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13059843.1490734376000.273792.1492070321673%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 07:58:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11087?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11087.&#010;-----------------------------------&#010;    Resolution: Won't Fix&#010;&#010;This is not getting much traction, better to close it than to have it just for the sake of&#010;having it :)&#010;&#010;&gt; Create a Annotation processor that creates REST DSL source code from Swagger specification&#010;&gt; ------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11087&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11087&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; With the generator implemented in CAMEL-11006 an annotation processor can be built that&#010;takes the Swagger specification and generates the REST DSL source code.&#010;&gt; I'm thinking of one annotation, something like:&#010;&gt; {code:java}&#010;&gt; @RestDsl(specification=""petstore.json"", package=""com.example"", name=""MyPetstore"")&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
96,97,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11087) Create a Annotation processor that creates REST DSL source code from Swagger specification,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13059843.1490734376000.273797.1492070321756%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 07:58:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11087?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967262#comment-15967262&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11087:&#010;----------------------------------------&#010;&#010;Github user zregvart closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1594&#010;&#010;&#010;&gt; Create a Annotation processor that creates REST DSL source code from Swagger specification&#010;&gt; ------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11087&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11087&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; With the generator implemented in CAMEL-11006 an annotation processor can be built that&#010;takes the Swagger specification and generates the REST DSL source code.&#010;&gt; I'm thinking of one annotation, something like:&#010;&gt; {code:java}&#010;&gt; @RestDsl(specification=""petstore.json"", package=""com.example"", name=""MyPetstore"")&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
97,98,,[jira] [Created] (CAMEL-11108) camel-infinispan : change the uri syntax from infinispan:hostName to infinispan:cacheName,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13059843.1490734376000.273797.1492070321756%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 07:58:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11087?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967262#comment-15967262&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11087:&#010;----------------------------------------&#010;&#010;Github user zregvart closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1594&#010;&#010;&#010;&gt; Create a Annotation processor that creates REST DSL source code from Swagger specification&#010;&gt; ------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11087&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11087&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; With the generator implemented in CAMEL-11006 an annotation processor can be built that&#010;takes the Swagger specification and generates the REST DSL source code.&#010;&gt; I'm thinking of one annotation, something like:&#010;&gt; {code:java}&#010;&gt; @RestDsl(specification=""petstore.json"", package=""com.example"", name=""MyPetstore"")&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
98,99,Luca Burgazzoli (JIRA),  [jira] [Created] (CAMEL-11108) camel-infinispan : change the uri syntax from infinispan:hostName to infinispan:cacheName,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061654.1491378117000.208265.1491378161718%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 07:42:41 GMT","Luca Burgazzoli created CAMEL-11108:&#010;---------------------------------------&#010;&#010;             Summary: camel-infinispan : change the uri syntax from infinispan:hostName to&#010;infinispan:cacheName&#010;                 Key: CAMEL-11108&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11108&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-infinispan&#010;         Environment: &#010;&#010;&#010;&#010;            Reporter: Luca Burgazzoli&#010;            Priority: Minor&#010;             Fix For: 2.19.0&#010;&#010;&#010;As today camel-infinispan uri is supposed to configure the infinispan client used by the component&#010;to connect to a remote infinispan cluster but that's not always the case as you can also use&#010;an embedded standalone cache which may be not very intuitive to setup as the uri requires&#010;an host to be set.&#010;&#010;Because of that it would be nice to make camel-infinispan uri looks similar to other cache&#010;implementation which are in the form scheme:cacheName and have an option to specify a list&#010;of hosts in case you want to join an infinispan-cluster (btw, there are also other way to&#010;configure a remote cache).&#010;&#010;This change would make it easy also to use https://github.com/infinispan/infinispan-spring-boot&#010;to automatically configure the client in spring-boot.&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
99,100,Luca Burgazzoli (JIRA),  [jira] [Assigned] (CAMEL-11108) camel-infinispan : change the uri syntax from infinispan:hostName to infinispan:cacheName,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061654.1491378117000.223017.1491477041549%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 11:10:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11108?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli reassigned CAMEL-11108:&#010;---------------------------------------&#010;&#010;    Assignee: Luca Burgazzoli&#010;&#010;&gt; camel-infinispan : change the uri syntax from infinispan:hostName to infinispan:cacheName&#010;&gt; -----------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11108&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11108&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-infinispan&#010;&gt;         Environment: &#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; As today camel-infinispan uri is supposed to configure the infinispan client used by&#010;the component to connect to a remote infinispan cluster but that's not always the case as&#010;you can also use an embedded standalone cache which may be not very intuitive to setup as&#010;the uri requires an host to be set.&#010;&gt; Because of that it would be nice to make camel-infinispan uri looks similar to other&#010;cache implementation which are in the form scheme:cacheName and have an option to specify&#010;a list of hosts in case you want to join an infinispan-cluster (btw, there are also other&#010;way to configure a remote cache).&#010;&gt; This change would make it easy also to use https://github.com/infinispan/infinispan-spring-boot&#010;to automatically configure the client in spring-boot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
100,101,Luca Burgazzoli (JIRA),  [jira] [Work started] (CAMEL-11108) camel-infinispan : change the uri syntax from infinispan:hostName to infinispan:cacheName,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061654.1491378117000.223267.1491479681625%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 11:54:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11108?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Work on CAMEL-11108 started by Luca Burgazzoli.&#010;-----------------------------------------------&#010;&gt; camel-infinispan : change the uri syntax from infinispan:hostName to infinispan:cacheName&#010;&gt; -----------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11108&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11108&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-infinispan&#010;&gt;         Environment: &#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; As today camel-infinispan uri is supposed to configure the infinispan client used by&#010;the component to connect to a remote infinispan cluster but that's not always the case as&#010;you can also use an embedded standalone cache which may be not very intuitive to setup as&#010;the uri requires an host to be set.&#010;&gt; Because of that it would be nice to make camel-infinispan uri looks similar to other&#010;cache implementation which are in the form scheme:cacheName and have an option to specify&#010;a list of hosts in case you want to join an infinispan-cluster (btw, there are also other&#010;way to configure a remote cache).&#010;&gt; This change would make it easy also to use https://github.com/infinispan/infinispan-spring-boot&#010;to automatically configure the client in spring-boot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
101,102,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11108) camel-infinispan : change the uri syntax from infinispan:hostName to infinispan:cacheName,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061654.1491378117000.225309.1491493301861%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 15:41:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11108?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15959123#comment-15959123&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11108:&#010;----------------------------------------&#010;&#010;GitHub user lburgazzoli opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1604&#010;&#010;    WIP - CAMEL-11108: camel-infinispan : change the uri syntax from infinispan:hostName to&#010;infinispan:cacheName&#010;&#010;    @tristantarrant may you check if I missed something on infinispan side &#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/lburgazzoli/apache-camel CAMEL-11108&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1604.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1604&#010;    &#010;----&#010;commit 14fa5e5156e3e0e0e76cfdd23427a06febc27714&#010;Author: lburgazzoli &lt;lburgazzoli@gmail.com&gt;&#010;Date:   2017-04-06T13:11:54Z&#010;&#010;    CAMEL-11108: camel-infinispan : change the uri syntax from infinispan:hostName to infinispan:cacheName&#010;&#010;----&#010;&#010;&#010;&gt; camel-infinispan : change the uri syntax from infinispan:hostName to infinispan:cacheName&#010;&gt; -----------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11108&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11108&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-infinispan&#010;&gt;         Environment: &#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; As today camel-infinispan uri is supposed to configure the infinispan client used by&#010;the component to connect to a remote infinispan cluster but that's not always the case as&#010;you can also use an embedded standalone cache which may be not very intuitive to setup as&#010;the uri requires an host to be set.&#010;&gt; Because of that it would be nice to make camel-infinispan uri looks similar to other&#010;cache implementation which are in the form scheme:cacheName and have an option to specify&#010;a list of hosts in case you want to join an infinispan-cluster (btw, there are also other&#010;way to configure a remote cache).&#010;&gt; This change would make it easy also to use https://github.com/infinispan/infinispan-spring-boot&#010;to automatically configure the client in spring-boot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
102,103,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11108) camel-infinispan : change the uri syntax from infinispan:hostName to infinispan:cacheName,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061654.1491378117000.263333.1491983141747%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 07:45:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11108?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965510#comment-15965510&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11108:&#010;----------------------------------------&#010;&#010;Github user lburgazzoli closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1604&#010;&#010;&#010;&gt; camel-infinispan : change the uri syntax from infinispan:hostName to infinispan:cacheName&#010;&gt; -----------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11108&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11108&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-infinispan&#010;&gt;         Environment: &#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; As today camel-infinispan uri is supposed to configure the infinispan client used by&#010;the component to connect to a remote infinispan cluster but that's not always the case as&#010;you can also use an embedded standalone cache which may be not very intuitive to setup as&#010;the uri requires an host to be set.&#010;&gt; Because of that it would be nice to make camel-infinispan uri looks similar to other&#010;cache implementation which are in the form scheme:cacheName and have an option to specify&#010;a list of hosts in case you want to join an infinispan-cluster (btw, there are also other&#010;way to configure a remote cache).&#010;&gt; This change would make it easy also to use https://github.com/infinispan/infinispan-spring-boot&#010;to automatically configure the client in spring-boot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
103,104,Luca Burgazzoli (JIRA),  [jira] [Resolved] (CAMEL-11108) camel-infinispan : change the uri syntax from infinispan:hostName to infinispan:cacheName,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061654.1491378117000.263337.1491983201806%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 07:46:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11108?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-11108.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; camel-infinispan : change the uri syntax from infinispan:hostName to infinispan:cacheName&#010;&gt; -----------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11108&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11108&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-infinispan&#010;&gt;         Environment: &#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; As today camel-infinispan uri is supposed to configure the infinispan client used by&#010;the component to connect to a remote infinispan cluster but that's not always the case as&#010;you can also use an embedded standalone cache which may be not very intuitive to setup as&#010;the uri requires an host to be set.&#010;&gt; Because of that it would be nice to make camel-infinispan uri looks similar to other&#010;cache implementation which are in the form scheme:cacheName and have an option to specify&#010;a list of hosts in case you want to join an infinispan-cluster (btw, there are also other&#010;way to configure a remote cache).&#010;&gt; This change would make it easy also to use https://github.com/infinispan/infinispan-spring-boot&#010;to automatically configure the client in spring-boot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
104,105,,[jira] [Created] (CAMEL-11109) Failed to resolve endpoint when using destination.consumer.exclusive,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061654.1491378117000.263337.1491983201806%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 07:46:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11108?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-11108.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; camel-infinispan : change the uri syntax from infinispan:hostName to infinispan:cacheName&#010;&gt; -----------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11108&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11108&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-infinispan&#010;&gt;         Environment: &#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; As today camel-infinispan uri is supposed to configure the infinispan client used by&#010;the component to connect to a remote infinispan cluster but that's not always the case as&#010;you can also use an embedded standalone cache which may be not very intuitive to setup as&#010;the uri requires an host to be set.&#010;&gt; Because of that it would be nice to make camel-infinispan uri looks similar to other&#010;cache implementation which are in the form scheme:cacheName and have an option to specify&#010;a list of hosts in case you want to join an infinispan-cluster (btw, there are also other&#010;way to configure a remote cache).&#010;&gt; This change would make it easy also to use https://github.com/infinispan/infinispan-spring-boot&#010;to automatically configure the client in spring-boot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
105,106,Christian Schneider (JIRA),  [jira] [Created] (CAMEL-11109) Failed to resolve endpoint when using destination.consumer.exclusive,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061666.1491381122000.208602.1491381161600%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 08:32:41 GMT","Christian Schneider created CAMEL-11109:&#010;-------------------------------------------&#010;&#010;             Summary: Failed to resolve endpoint when using destination.consumer.exclusive&#010;                 Key: CAMEL-11109&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11109&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-jms&#010;    Affects Versions: 2.18.3, 2.17.6, 2.16.5&#010;            Reporter: Christian Schneider&#010;            Assignee: Christian Schneider&#010;             Fix For: 2.16.6, 2.17.7, 2.18.4&#010;&#010;&#010;The queue below will fail with the EexceptionesolveEndpointFailedException: Failed to resolve&#010;endpoint&#010;&#010;Route:&#010;from(""jms:queue:queue1?destination.consumer.exclusive=true"").to(""log:test"");&#010;&#010;Full exception:&#010;Exception in thread ""main"" org.apache.camel.FailedToCreateRouteException: Failed to create&#010;route route1: Route(route1)[[From[jms:queue:queue1?destination.consumer.ex... because of Failed&#010;to resolve endpoint: jms://queue:queue1?destination.consumer.exclusive=true due to: Failed&#010;to resolve endpoint: jms://queue:queue1?destination.consumer.exclusive=true due to: There&#010;are 1 parameters that couldn't be set on the endpoint. Check the uri if the parameters are&#010;spelt correctly and that they are properties of the endpoint. Unknown parameters=[{destination.consumer.exclusive=true}]&#010;&#009;at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:201)&#010;&#009;at org.apache.camel.impl.DefaultCamelContext.startRoute(DefaultCamelContext.java:984)&#010;&#009;at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:3401)&#010;&#009;at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:3132)&#010;&#009;at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:183)&#010;&#009;at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2961)&#010;&#009;at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2957)&#010;&#009;at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:2980)&#010;&#009;at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:2957)&#010;&#009;at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61)&#010;&#009;at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:2924)&#010;&#009;at test.Starter.main(Starter.java:17)&#010;Caused by: org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint: jms://queue:queue1?destination.consumer.exclusive=true&#010;due to: Failed to resolve endpoint: jms://queue:queue1?destination.consumer.exclusive=true&#010;due to: There are 1 parameters that couldn't be set on the endpoint. Check the uri if the&#010;parameters are spelt correctly and that they are properties of the endpoint. Unknown parameters=[{destination.consumer.exclusive=true}]&#010;&#009;at org.apache.camel.impl.DefaultCamelContext.getEndpoint(DefaultCamelContext.java:623)&#010;&#009;at org.apache.camel.util.CamelContextHelper.getMandatoryEndpoint(CamelContextHelper.java:79)&#010;&#009;at org.apache.camel.model.RouteDefinition.resolveEndpoint(RouteDefinition.java:211)&#010;&#009;at org.apache.camel.impl.DefaultRouteContext.resolveEndpoint(DefaultRouteContext.java:108)&#010;&#009;at org.apache.camel.impl.DefaultRouteContext.resolveEndpoint(DefaultRouteContext.java:114)&#010;&#009;at org.apache.camel.model.FromDefinition.resolveEndpoint(FromDefinition.java:69)&#010;&#009;at org.apache.camel.impl.DefaultRouteContext.getEndpoint(DefaultRouteContext.java:90)&#010;&#009;at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:1051)&#010;&#009;at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:196)&#010;&#009;... 11 more&#010;Caused by: org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint: jms://queue:queue1?destination.consumer.exclusive=true&#010;due to: There are 1 parameters that couldn't be set on the endpoint. Check the uri if the&#010;parameters are spelt correctly and that they are properties of the endpoint. Unknown parameters=[{destination.consumer.exclusive=true}]&#010;&#009;at org.apache.camel.impl.DefaultComponent.validateParameters(DefaultComponent.java:183)&#010;&#009;at org.apache.camel.impl.DefaultComponent.createEndpoint(DefaultComponent.java:125)&#010;&#009;at org.apache.camel.impl.DefaultCamelContext.getEndpoint(DefaultCamelContext.java:603)&#010;&#009;... 19 more&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
106,107,Christian Schneider (JIRA),  [jira] [Closed] (CAMEL-11109) Failed to resolve endpoint when using destination.consumer.exclusive,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061666.1491381122000.209990.1491393881785%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:04:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11109?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Christian Schneider closed CAMEL-11109.&#010;---------------------------------------&#010;       Resolution: Won't Fix&#010;    Fix Version/s:     (was: 2.17.7)&#010;                       (was: 2.18.4)&#010;                       (was: 2.16.6)&#010;&#010;After talking to Claus I close this issue. The destination. options are not processed by the&#010;jms component. They are only available for the activemq component.&#010;&#010;&gt; Failed to resolve endpoint when using destination.consumer.exclusive&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11109&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11109&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-jms&#010;&gt;    Affects Versions: 2.16.5, 2.17.6, 2.18.3&#010;&gt;            Reporter: Christian Schneider&#010;&gt;            Assignee: Christian Schneider&#010;&gt;&#010;&gt; The queue below will fail with the EexceptionesolveEndpointFailedException: Failed to&#010;resolve endpoint&#010;&gt; Route:&#010;&gt; from(""jms:queue:queue1?destination.consumer.exclusive=true"").to(""log:test"");&#010;&gt; Full exception:&#010;&gt; Exception in thread ""main"" org.apache.camel.FailedToCreateRouteException: Failed to create&#010;route route1: Route(route1)[[From[jms:queue:queue1?destination.consumer.ex... because of Failed&#010;to resolve endpoint: jms://queue:queue1?destination.consumer.exclusive=true due to: Failed&#010;to resolve endpoint: jms://queue:queue1?destination.consumer.exclusive=true due to: There&#010;are 1 parameters that couldn't be set on the endpoint. Check the uri if the parameters are&#010;spelt correctly and that they are properties of the endpoint. Unknown parameters=[{destination.consumer.exclusive=true}]&#010;&gt; &#009;at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:201)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.startRoute(DefaultCamelContext.java:984)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:3401)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:3132)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:183)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2961)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2957)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:2980)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:2957)&#010;&gt; &#009;at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:2924)&#010;&gt; &#009;at test.Starter.main(Starter.java:17)&#010;&gt; Caused by: org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint:&#010;jms://queue:queue1?destination.consumer.exclusive=true due to: Failed to resolve endpoint:&#010;jms://queue:queue1?destination.consumer.exclusive=true due to: There are 1 parameters that&#010;couldn't be set on the endpoint. Check the uri if the parameters are spelt correctly and that&#010;they are properties of the endpoint. Unknown parameters=[{destination.consumer.exclusive=true}]&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.getEndpoint(DefaultCamelContext.java:623)&#010;&gt; &#009;at org.apache.camel.util.CamelContextHelper.getMandatoryEndpoint(CamelContextHelper.java:79)&#010;&gt; &#009;at org.apache.camel.model.RouteDefinition.resolveEndpoint(RouteDefinition.java:211)&#010;&gt; &#009;at org.apache.camel.impl.DefaultRouteContext.resolveEndpoint(DefaultRouteContext.java:108)&#010;&gt; &#009;at org.apache.camel.impl.DefaultRouteContext.resolveEndpoint(DefaultRouteContext.java:114)&#010;&gt; &#009;at org.apache.camel.model.FromDefinition.resolveEndpoint(FromDefinition.java:69)&#010;&gt; &#009;at org.apache.camel.impl.DefaultRouteContext.getEndpoint(DefaultRouteContext.java:90)&#010;&gt; &#009;at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:1051)&#010;&gt; &#009;at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:196)&#010;&gt; &#009;... 11 more&#010;&gt; Caused by: org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint:&#010;jms://queue:queue1?destination.consumer.exclusive=true due to: There are 1 parameters that&#010;couldn't be set on the endpoint. Check the uri if the parameters are spelt correctly and that&#010;they are properties of the endpoint. Unknown parameters=[{destination.consumer.exclusive=true}]&#010;&gt; &#009;at org.apache.camel.impl.DefaultComponent.validateParameters(DefaultComponent.java:183)&#010;&gt; &#009;at org.apache.camel.impl.DefaultComponent.createEndpoint(DefaultComponent.java:125)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.getEndpoint(DefaultCamelContext.java:603)&#010;&gt; &#009;... 19 more&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
107,108,,[jira] [Created] (CAMEL-11110) REST component host parameter handling,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061666.1491381122000.209990.1491393881785%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:04:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11109?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Christian Schneider closed CAMEL-11109.&#010;---------------------------------------&#010;       Resolution: Won't Fix&#010;    Fix Version/s:     (was: 2.17.7)&#010;                       (was: 2.18.4)&#010;                       (was: 2.16.6)&#010;&#010;After talking to Claus I close this issue. The destination. options are not processed by the&#010;jms component. They are only available for the activemq component.&#010;&#010;&gt; Failed to resolve endpoint when using destination.consumer.exclusive&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11109&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11109&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-jms&#010;&gt;    Affects Versions: 2.16.5, 2.17.6, 2.18.3&#010;&gt;            Reporter: Christian Schneider&#010;&gt;            Assignee: Christian Schneider&#010;&gt;&#010;&gt; The queue below will fail with the EexceptionesolveEndpointFailedException: Failed to&#010;resolve endpoint&#010;&gt; Route:&#010;&gt; from(""jms:queue:queue1?destination.consumer.exclusive=true"").to(""log:test"");&#010;&gt; Full exception:&#010;&gt; Exception in thread ""main"" org.apache.camel.FailedToCreateRouteException: Failed to create&#010;route route1: Route(route1)[[From[jms:queue:queue1?destination.consumer.ex... because of Failed&#010;to resolve endpoint: jms://queue:queue1?destination.consumer.exclusive=true due to: Failed&#010;to resolve endpoint: jms://queue:queue1?destination.consumer.exclusive=true due to: There&#010;are 1 parameters that couldn't be set on the endpoint. Check the uri if the parameters are&#010;spelt correctly and that they are properties of the endpoint. Unknown parameters=[{destination.consumer.exclusive=true}]&#010;&gt; &#009;at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:201)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.startRoute(DefaultCamelContext.java:984)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:3401)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.doStartCamel(DefaultCamelContext.java:3132)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.access$000(DefaultCamelContext.java:183)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2961)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext$2.call(DefaultCamelContext.java:2957)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.doWithDefinedClassLoader(DefaultCamelContext.java:2980)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:2957)&#010;&gt; &#009;at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:2924)&#010;&gt; &#009;at test.Starter.main(Starter.java:17)&#010;&gt; Caused by: org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint:&#010;jms://queue:queue1?destination.consumer.exclusive=true due to: Failed to resolve endpoint:&#010;jms://queue:queue1?destination.consumer.exclusive=true due to: There are 1 parameters that&#010;couldn't be set on the endpoint. Check the uri if the parameters are spelt correctly and that&#010;they are properties of the endpoint. Unknown parameters=[{destination.consumer.exclusive=true}]&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.getEndpoint(DefaultCamelContext.java:623)&#010;&gt; &#009;at org.apache.camel.util.CamelContextHelper.getMandatoryEndpoint(CamelContextHelper.java:79)&#010;&gt; &#009;at org.apache.camel.model.RouteDefinition.resolveEndpoint(RouteDefinition.java:211)&#010;&gt; &#009;at org.apache.camel.impl.DefaultRouteContext.resolveEndpoint(DefaultRouteContext.java:108)&#010;&gt; &#009;at org.apache.camel.impl.DefaultRouteContext.resolveEndpoint(DefaultRouteContext.java:114)&#010;&gt; &#009;at org.apache.camel.model.FromDefinition.resolveEndpoint(FromDefinition.java:69)&#010;&gt; &#009;at org.apache.camel.impl.DefaultRouteContext.getEndpoint(DefaultRouteContext.java:90)&#010;&gt; &#009;at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:1051)&#010;&gt; &#009;at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:196)&#010;&gt; &#009;... 11 more&#010;&gt; Caused by: org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint:&#010;jms://queue:queue1?destination.consumer.exclusive=true due to: There are 1 parameters that&#010;couldn't be set on the endpoint. Check the uri if the parameters are spelt correctly and that&#010;they are properties of the endpoint. Unknown parameters=[{destination.consumer.exclusive=true}]&#010;&gt; &#009;at org.apache.camel.impl.DefaultComponent.validateParameters(DefaultComponent.java:183)&#010;&gt; &#009;at org.apache.camel.impl.DefaultComponent.createEndpoint(DefaultComponent.java:125)&#010;&gt; &#009;at org.apache.camel.impl.DefaultCamelContext.getEndpoint(DefaultCamelContext.java:603)&#010;&gt; &#009;... 19 more&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
108,109,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11110) REST component host parameter handling,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061677.1491384794000.208976.1491384822022%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 09:33:42 GMT","Zoran Regvart created CAMEL-11110:&#010;-------------------------------------&#010;&#010;             Summary: REST component host parameter handling&#010;                 Key: CAMEL-11110&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11110&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-core&#010;    Affects Versions: 2.19.0&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;&#010;&#010;The REST component tries to resolve the {{host}} parameter as a reference even if it's not&#010;in reference syntax, i.e. concrete value. So if set to {{http://...}} the component tries&#010;to resolve a bean reference with name {{http://...}}..&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
109,110,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11110) REST component host parameter handling,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061677.1491384794000.209006.1491385121660%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 09:38:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11110?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11110.&#010;-----------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.19.0&#010;&#010;Using {{getAndRemoveOrResolveReferenceParameter}} instead of {{resolveAndRemoveReferenceParameter}}&#010;fixes this.&#010;&#010;&gt; REST component host parameter handling&#010;&gt; --------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11110&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11110&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The REST component tries to resolve the {{host}} parameter as a reference even if it's&#010;not in reference syntax, i.e. concrete value. So if set to {{http://...}} the component tries&#010;to resolve a bean reference with name {{http://...}}..&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
110,111,,[jira] [Created] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061677.1491384794000.209006.1491385121660%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 09:38:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11110?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11110.&#010;-----------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.19.0&#010;&#010;Using {{getAndRemoveOrResolveReferenceParameter}} instead of {{resolveAndRemoveReferenceParameter}}&#010;fixes this.&#010;&#010;&gt; REST component host parameter handling&#010;&gt; --------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11110&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11110&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The REST component tries to resolve the {{host}} parameter as a reference even if it's&#010;not in reference syntax, i.e. concrete value. So if set to {{http://...}} the component tries&#010;to resolve a bean reference with name {{http://...}}..&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
111,112,Scott Cranton (JIRA),  [jira] [Created] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.209751.1491390641619%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 11:10:41 GMT","Scott Cranton created CAMEL-11111:&#010;-------------------------------------&#010;&#010;             Summary: Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;                 Key: CAMEL-11111&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-undertow&#010;    Affects Versions: 2.19.0&#010;            Reporter: Scott Cranton&#010;&#010;&#010;When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does NOT&#010;throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
112,113,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.209931.1491392981617%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 11:49:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15956715#comment-15956715&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11111:&#010;----------------------------------------&#010;&#010;GitHub user scranton opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1597&#010;&#010;    CAMEL-11111: added unit test for throwExceptionOnFailure&#010;&#010;    Test case for camel-undertow showing issue, and same test case working in camel-netty4-http&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/scranton/camel CAMEL-11111&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1597.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1597&#010;    &#010;----&#010;commit e493cf03964571497a0a946bad2016ff35f89397&#010;Author: Scott Cranton &lt;scott@cranton.com&gt;&#010;Date:   2017-04-05T11:49:04Z&#010;&#010;    CAMEL-11111: added unit test for throwExceptionOnFailure&#010;&#010;----&#010;&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
113,114,Scott Cranton (JIRA),  [jira] [Commented] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.210981.1491400961593%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 14:02:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15956901#comment-15956901&#010;] &#010;&#010;Scott Cranton commented on CAMEL-11111:&#010;---------------------------------------&#010;&#010;Looking at UndertowProducer and UndertowClientCallback, I don't see any code to handle HTTP_RESPONSE_CODE&#010;indicating an error. Not clear where or what exception should be thrown. Feels like a response&#010;code check when throwExceptionOnFailure=true should happen here - https://github.com/apache/camel/blob/master/components/camel-undertow/src/main/java/org/apache/camel/component/undertow/UndertowClientCallback.java#L167-L167&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
114,115,Scott Cranton (JIRA),  [jira] [Commented] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.210999.1491401261554%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 14:07:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15956909#comment-15956909&#010;] &#010;&#010;Scott Cranton commented on CAMEL-11111:&#010;---------------------------------------&#010;&#010;camel-netty4-http appears to check in a similar place - https://github.com/apache/camel/blob/master/components/camel-netty4-http/src/main/java/org/apache/camel/component/netty4/http/NettyHttpProducer.java#L135-L135&#010;- Guessing an UndertowHttpOperationsException would have to be created... Is there a standard&#010;base interface for that given all of the camel HTTP producer components?&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
115,116,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.234341.1491563622033%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:13:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11111:&#010;--------------------------------&#010;    Priority: Minor  (was: Major)&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
116,117,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.234342.1491563622041%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:13:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960615#comment-15960615&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11111:&#010;-------------------------------------&#010;&#010;There is a ticket about making undertow align with the other http components and base it of&#010;camel-http-common. But that is more work&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
117,118,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.234370.1491564281979%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:24:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960623#comment-15960623&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11111:&#010;-------------------------------------&#010;&#010;This requires the binding code to support this as its not in that callback, but when parsing&#010;the http response and check the HTTP status code&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
118,119,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.234383.1491564461601%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:27:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11111:&#010;--------------------------------&#010;    Affects Version/s:     (was: 2.19.0)&#010;                       2.18.3&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
119,120,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.234399.1491564701627%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:31:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11111:&#010;--------------------------------&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
120,121,Scott Cranton (JIRA),  [jira] [Commented] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.234441.1491565662289%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:47:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960644#comment-15960644&#010;] &#010;&#010;Scott Cranton commented on CAMEL-11111:&#010;---------------------------------------&#010;&#010;So my PR just includes a test case showing the issue with camel-undertow, and how camel-netty4-http&#010;works doing similar settings of throwExceptionOnFailure. I could probably hack in the code&#010;from camel-netty4-http and create a similar NettyHttpOperationsFailureException for camel-undertow&#010;to band-aid this. It would only be an issue if many use ProducerTemplates to get the response&#010;body back cast as a String or such, and expect any HTTP Response Code &gt; 300 to be thrown&#010;as an exception OR if they are using undertow as a producer within a camel route, and again&#010;expect an exception to be thrown. I do the Producer Template approach a lot in test cases...&#010;&#010;Since we're deprecating camel-http, and encouraging people to use camel-undertow as a producer,&#010;that's where I think the expectation that it behaves similar will bite us...&#010;&#010;Let me know your thoughts. Like I said, I believe I could quickly hack in something similar&#010;to netty4-http that gets my test case to pass...&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
121,122,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.235320.1491572141729%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 13:35:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960803#comment-15960803&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11111:&#010;-------------------------------------&#010;&#010;Yeah we need an UndertowHttpOperationFailureException that does something like the others&#010;do with having http status code etc.&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
122,123,Scott Cranton (JIRA),  [jira] [Assigned] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.235354.1491572741729%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 13:45:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Scott Cranton reassigned CAMEL-11111:&#010;-------------------------------------&#010;&#010;    Assignee: Scott Cranton&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Assignee: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
123,124,Scott Cranton (JIRA),  [jira] [Commented] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.235358.1491572741761%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 13:45:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960813#comment-15960813&#010;] &#010;&#010;Scott Cranton commented on CAMEL-11111:&#010;---------------------------------------&#010;&#010;Ok, will try to get this done this weekend...&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Assignee: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
124,125,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.240949.1491646721564%40Atlassian.JIRA%3E,issues,"Sat, 08 Apr 2017 10:18:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15961764#comment-15961764&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11111:&#010;----------------------------------------&#010;&#010;Github user scranton closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1597&#010;&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Assignee: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
125,126,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.242248.1491691422455%40Atlassian.JIRA%3E,issues,"Sat, 08 Apr 2017 22:43:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15961981#comment-15961981&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11111:&#010;----------------------------------------&#010;&#010;GitHub user scranton opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1608&#010;&#010;    CAMEL-11111: implemented throwExceptionOnFailure Producer attribute&#010;&#010;    &#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/scranton/camel CAMEL-11111&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1608.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1608&#010;    &#010;----&#010;commit eb4a236e36c4665e6234d72db40d8c7ef4e5d6fb&#010;Author: Scott Cranton &lt;scott@cranton.com&gt;&#010;Date:   2017-04-08T22:42:46Z&#010;&#010;    CAMEL-11111: implemented throwExceptionOnFailure attribute for Producer usage&#010;&#010;----&#010;&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Assignee: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
126,127,Scott Cranton (JIRA),  [jira] [Work started] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.242251.1491691662055%40Atlassian.JIRA%3E,issues,"Sat, 08 Apr 2017 22:47:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Work on CAMEL-11111 started by Scott Cranton.&#010;---------------------------------------------&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Assignee: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
127,128,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.242629.1491725741833%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 08:15:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11111.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Assignee: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
128,129,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.243233.1491751421566%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 15:23:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15962161#comment-15962161&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11111:&#010;----------------------------------------&#010;&#010;Github user scranton closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1608&#010;&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Assignee: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
129,130,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.243237.1491751662029%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 15:27:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15962162#comment-15962162&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11111:&#010;----------------------------------------&#010;&#010;GitHub user scranton opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1609&#010;&#010;    CAMEL-11111: correctly copy response’s headers and body to exception&#010;&#010;    &#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/scranton/camel CAMEL-11111&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1609.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1609&#010;    &#010;----&#010;commit 9e09dd4223491215e7b389d1741539b71605a833&#010;Author: Scott Cranton &lt;scott@cranton.com&gt;&#010;Date:   2017-04-09T15:26:32Z&#010;&#010;    CAMEL-11111: correctly copy response’s headers and body to exception&#010;&#010;----&#010;&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Assignee: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
130,131,Scott Cranton (JIRA),  [jira] [Reopened] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.243246.1491751781599%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 15:29:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Scott Cranton reopened CAMEL-11111:&#010;-----------------------------------&#010;&#010;Error response's headers and body were not being copied correctly to HttpOperationsFailedException.&#010;Corrected with provided PR&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Assignee: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
131,132,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.243355.1491753761566%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 16:02:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15962180#comment-15962180&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11111:&#010;----------------------------------------&#010;&#010;Github user asfgit closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1609&#010;&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Assignee: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
132,133,Scott Cranton (JIRA),  [jira] [Resolved] (CAMEL-11111) Camel-Undertow: throwExceptionOnFailure doesn't work as expected,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.246311.1491820241656%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 10:30:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Scott Cranton resolved CAMEL-11111.&#010;-----------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Assignee: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
133,134,,[jira] [Commented] (CAMEL-11098) FacebookEndpointConfiguration bean not taken into account as a UriParam,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061696.1491390627000.246311.1491820241656%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 10:30:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11111?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Scott Cranton resolved CAMEL-11111.&#010;-----------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Camel-Undertow: throwExceptionOnFailure doesn't work as expected&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11111&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11111&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Assignee: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using camel-undertow as a producer and HTTP_RESPONSE_CODE is 404, the producer does&#010;NOT throw an exception as expected. Setting throwExceptionOnFailure appears to have no effect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
134,135,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11098) FacebookEndpointConfiguration bean not taken into account as a UriParam,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13060715.1490974969000.209845.1491392381606%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 11:39:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11098?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15956705#comment-15956705&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11098:&#010;----------------------------------------&#010;&#010;Github user asfgit closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1588&#010;&#010;&#010;&gt; FacebookEndpointConfiguration bean not taken into account as a UriParam&#010;&gt; -----------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11098&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11098&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-facebook&#010;&gt;            Reporter: John Poth&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; [FacebookEndpointConfiguration|https://github.com/apache/camel/blob/e3ec108c871058c840f99a7fcfd06d8807b6da85/components/camel-facebook/src/main/java/org/apache/camel/component/facebook/FacebookEndpoint.java#L67]&#010;is not taken into account when specified as a UriParam. I can provide a PR.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
135,136,,[jira] [Updated] (CAMEL-10026) HealthCheck API,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13060715.1490974969000.209845.1491392381606%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 11:39:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11098?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15956705#comment-15956705&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11098:&#010;----------------------------------------&#010;&#010;Github user asfgit closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1588&#010;&#010;&#010;&gt; FacebookEndpointConfiguration bean not taken into account as a UriParam&#010;&gt; -----------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11098&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11098&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-facebook&#010;&gt;            Reporter: John Poth&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; [FacebookEndpointConfiguration|https://github.com/apache/camel/blob/e3ec108c871058c840f99a7fcfd06d8807b6da85/components/camel-facebook/src/main/java/org/apache/camel/component/facebook/FacebookEndpoint.java#L67]&#010;is not taken into account when specified as a UriParam. I can provide a PR.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
136,137,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-10026) HealthCheck API,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12976458.1465308728000.210373.1491396942063%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:55:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10026?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10026:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; HealthCheck API&#010;&gt; ---------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10026&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10026&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Add a health check API to camel-core so this API can be queried from Java / JMX / spring-boot&#010;etc. so users can easily get a health check. This can be used for liveness/readiness checks&#010;for their Camel apps.&#010;&gt; The API should allow optional support for components to implement custom logic for health&#010;check. So a FTP component can connect to a FTP server and do a FTP list etc. A JDBC component&#010;does a SQL query, and so on.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
137,138,,[jira] [Updated] (CAMEL-10320) Provide a LeaderPolicy to ease the implementation of master/slave route/context,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12976458.1465308728000.210373.1491396942063%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:55:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10026?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10026:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; HealthCheck API&#010;&gt; ---------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10026&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10026&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Add a health check API to camel-core so this API can be queried from Java / JMX / spring-boot&#010;etc. so users can easily get a health check. This can be used for liveness/readiness checks&#010;for their Camel apps.&#010;&gt; The API should allow optional support for components to implement custom logic for health&#010;check. So a FTP component can connect to a FTP server and do a FTP list etc. A JDBC component&#010;does a SQL query, and so on.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
138,139,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-10320) Provide a LeaderPolicy to ease the implementation of master/slave route/context,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13005100.1473926009000.210383.1491396942145%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:55:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10320?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10320:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Provide a LeaderPolicy to ease the implementation of master/slave route/context&#010;&gt; -------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10320&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10320&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; I've been working on some master/slave RoutePolicy and I'm wondering&#010;&gt; if we can have a proper LeaderPolicy with a standardized&#010;&gt; implementation in Camel 3.0 so one has only to notify when a&#010;&gt; leadership is taken&#010;&gt; In addition it may be nice to have:&#010;&gt; - a support for Leader election from the CmelContext so the routes are&#010;&gt; started when the context become leader.&#010;&gt; - an option to warm-up routes or to keep them stopped while not leader&#010;&gt; Then we can also make it exposed in JMX so tooling are able to detect&#010;&gt; which are current master and slaves, and whatnot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
139,140,,[jira] [Updated] (CAMEL-10793) camel cloud: expose routes as a service,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13005100.1473926009000.210383.1491396942145%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:55:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10320?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10320:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Provide a LeaderPolicy to ease the implementation of master/slave route/context&#010;&gt; -------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10320&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10320&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; I've been working on some master/slave RoutePolicy and I'm wondering&#010;&gt; if we can have a proper LeaderPolicy with a standardized&#010;&gt; implementation in Camel 3.0 so one has only to notify when a&#010;&gt; leadership is taken&#010;&gt; In addition it may be nice to have:&#010;&gt; - a support for Leader election from the CmelContext so the routes are&#010;&gt; started when the context become leader.&#010;&gt; - an option to warm-up routes or to keep them stopped while not leader&#010;&gt; Then we can also make it exposed in JMX so tooling are able to detect&#010;&gt; which are current master and slaves, and whatnot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
140,141,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-10793) camel cloud: expose routes as a service,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13040677.1486397888000.210391.1491397001782%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:56:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10793?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10793:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; camel cloud: expose routes as a service&#010;&gt; ---------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10793&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10793&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; As today we have a ServiceCall EIP that makes it easy to call external services in a&#010;cloud environment leveraging external service registry such as kubernetes, consul, etcd &amp;&#010;co so It could maje sense to add a way for a route to register itself in such registries and&#010;be available as a service for other to consume.&#010;&gt; Something like:&#010;&gt; {code:java}&#010;&gt;     // programmatic config&#010;&gt;     from(""jetty:http://0.0.0.0:8001/service1"")&#010;&gt;         .serviceRegistry()&#010;&gt;             .name(""service-1"")&#010;&gt;             .host(""...."")&#010;&gt;             .port(8001)&#010;&gt;             .meta(""camel.protocol"", ""http"")&#010;&gt;             .meta(""camel.component"", ""jetty"")&#010;&gt;             .meta(""camel.context.path"", ""/service1"")&#010;&gt;             .end()&#010;&gt;         .to(""direct:service-1"")&#010;&gt;     // Inherit from a global config and eventually override it&#010;&gt;     from(""jetty:http://0.0.0.0:8002/service2"")&#010;&gt;       .serviceRegistry(""service-2"")&#010;&gt;           .configRef(""service-registry-conf"")&#010;&gt;           .port(8002)&#010;&gt;       .to(""direct:service-2"")&#010;&gt;     // Smart auto configuration&#010;&gt;     from(""jetty:http://0.0.0.0:8003/service3"")&#010;&gt;       .serviceRegistry(""service-3"")&#010;&gt;       .to(""direct:service-3"")&#010;&gt; {code}&#010;&gt; Beside making camel play better in cloud environment,  you can use the service call to&#010;connect camel based micro services with minimal configuration as the registration may provide&#010;some additional meta data that the service call can use for auto-configuration (of course&#010;not all the registries can do it).&#010;&gt; The future Health  API/Service may then also be configured to remove or invalidate the&#010;service if the route is reported as not healthy.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
141,142,,[jira] [Updated] (CAMEL-10748) ServiceNow: add support for Instambul release,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13040677.1486397888000.210391.1491397001782%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:56:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10793?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10793:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; camel cloud: expose routes as a service&#010;&gt; ---------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10793&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10793&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; As today we have a ServiceCall EIP that makes it easy to call external services in a&#010;cloud environment leveraging external service registry such as kubernetes, consul, etcd &amp;&#010;co so It could maje sense to add a way for a route to register itself in such registries and&#010;be available as a service for other to consume.&#010;&gt; Something like:&#010;&gt; {code:java}&#010;&gt;     // programmatic config&#010;&gt;     from(""jetty:http://0.0.0.0:8001/service1"")&#010;&gt;         .serviceRegistry()&#010;&gt;             .name(""service-1"")&#010;&gt;             .host(""...."")&#010;&gt;             .port(8001)&#010;&gt;             .meta(""camel.protocol"", ""http"")&#010;&gt;             .meta(""camel.component"", ""jetty"")&#010;&gt;             .meta(""camel.context.path"", ""/service1"")&#010;&gt;             .end()&#010;&gt;         .to(""direct:service-1"")&#010;&gt;     // Inherit from a global config and eventually override it&#010;&gt;     from(""jetty:http://0.0.0.0:8002/service2"")&#010;&gt;       .serviceRegistry(""service-2"")&#010;&gt;           .configRef(""service-registry-conf"")&#010;&gt;           .port(8002)&#010;&gt;       .to(""direct:service-2"")&#010;&gt;     // Smart auto configuration&#010;&gt;     from(""jetty:http://0.0.0.0:8003/service3"")&#010;&gt;       .serviceRegistry(""service-3"")&#010;&gt;       .to(""direct:service-3"")&#010;&gt; {code}&#010;&gt; Beside making camel play better in cloud environment,  you can use the service call to&#010;connect camel based micro services with minimal configuration as the registration may provide&#010;some additional meta data that the service call can use for auto-configuration (of course&#010;not all the registries can do it).&#010;&gt; The future Health  API/Service may then also be configured to remove or invalidate the&#010;service if the route is reported as not healthy.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
142,143,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-10748) ServiceNow: add support for Instambul release,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13038068.1485421625000.210397.1491397001832%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:56:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10748?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10748:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; ServiceNow: add support for Instambul release&#010;&gt; ---------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10748&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10748&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-servicenow&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; https://docs.servicenow.com/category/istanbul&#010;&gt; https://docs.servicenow.com/bundle/istanbul-servicenow-platform/page/integrate/inbound-rest/concept/c_RESTAPI.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
143,144,,[jira] [Updated] (CAMEL-10815) Create a saxon-xslt component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13038068.1485421625000.210397.1491397001832%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:56:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10748?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10748:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; ServiceNow: add support for Instambul release&#010;&gt; ---------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10748&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10748&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-servicenow&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; https://docs.servicenow.com/category/istanbul&#010;&gt; https://docs.servicenow.com/bundle/istanbul-servicenow-platform/page/integrate/inbound-rest/concept/c_RESTAPI.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
144,145,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-10815) Create a saxon-xslt component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13042058.1486732910000.210408.1491397061859%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:57:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10815?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10815:&#010;------------------------------------&#010;    Fix Version/s:     (was: Future)&#010;                   2.20.0&#010;&#010;&gt; Create a saxon-xslt component&#010;&gt; -----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10815&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10815&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-saxon&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; I've recently been working on camel-saxon and camel-xslt to enable&#010;&gt; saxon specific stuffs in camel-xslt and this required some little&#010;&gt; reflection hacks which could make it harder to detect potential api&#010;&gt; breaks when updating saxon and could be problematic for java 9 if&#010;&gt; saxon does not properly configure the modules system so we should create a saxon-xslt&#010;component (to be done after 2.19) which inherit from xslt component and adds saxon specifc&#010;stuffs without reflection hacks.&#010;&gt; So with component:&#010;&gt; - xslt --&gt; you can still use saxon but can't confiugre saxon specific features&#010;&gt; - saxon-xslt --&gt; same as xslt but you can configure/use saxon specific features&#010;&gt; It also ensures that users are not in doubt if they use saxon or not. Usually Saxon offers&#010;more advanced features that you dont have from the JDK.&#010;&gt; And maybe we can add something so users can install the commercial saxon and unlock xslt&#010;3.0 functionality or what else is exclusive in their commercial product.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
145,146,,[jira] [Updated] (CAMEL-10806) Create camel-rxjava2 component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13042058.1486732910000.210408.1491397061859%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:57:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10815?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10815:&#010;------------------------------------&#010;    Fix Version/s:     (was: Future)&#010;                   2.20.0&#010;&#010;&gt; Create a saxon-xslt component&#010;&gt; -----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10815&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10815&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-saxon&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; I've recently been working on camel-saxon and camel-xslt to enable&#010;&gt; saxon specific stuffs in camel-xslt and this required some little&#010;&gt; reflection hacks which could make it harder to detect potential api&#010;&gt; breaks when updating saxon and could be problematic for java 9 if&#010;&gt; saxon does not properly configure the modules system so we should create a saxon-xslt&#010;component (to be done after 2.19) which inherit from xslt component and adds saxon specifc&#010;stuffs without reflection hacks.&#010;&gt; So with component:&#010;&gt; - xslt --&gt; you can still use saxon but can't confiugre saxon specific features&#010;&gt; - saxon-xslt --&gt; same as xslt but you can configure/use saxon specific features&#010;&gt; It also ensures that users are not in doubt if they use saxon or not. Usually Saxon offers&#010;more advanced features that you dont have from the JDK.&#010;&gt; And maybe we can add something so users can install the commercial saxon and unlock xslt&#010;3.0 functionality or what else is exclusive in their commercial product.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
146,147,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-10806) Create camel-rxjava2 component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13041418.1486569923000.210404.1491397061829%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:57:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10806?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10806:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Create camel-rxjava2 component&#010;&gt; ------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10806&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10806&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; A we have now camel-reactive-streams it would be nice to have a RxJava 2 implementation&#010;of the camel-reactive-streams API&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
147,148,,[jira] [Updated] (CAMEL-10715) service-call : create ZooKeeper based ServiceDiscovery,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13041418.1486569923000.210404.1491397061829%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:57:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10806?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10806:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Create camel-rxjava2 component&#010;&gt; ------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10806&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10806&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; A we have now camel-reactive-streams it would be nice to have a RxJava 2 implementation&#010;of the camel-reactive-streams API&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
148,149,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-10715) service-call : create ZooKeeper based ServiceDiscovery,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13035441.1484645151000.210413.1491397061894%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:57:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10715?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10715:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; service-call : create ZooKeeper based ServiceDiscovery&#010;&gt; ------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10715&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10715&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-zookeeper&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; [~paolo.antinori]&#010;&gt; As you know ZooKeeper, do you mind creating a ZooKeeper ServiceDiscovery implementation&#010;?&#010;&gt; Some references:&#010;&gt; https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/cloud/ServiceDiscovery.java&#010;&gt; https://github.com/apache/camel/blob/master/components/camel-consul/src/main/java/org/apache/camel/component/consul/cloud/ConsulServiceDiscovery.java&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
149,150,,[jira] [Updated] (CAMEL-11030) Add a vault service to manage secrets,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13035441.1484645151000.210413.1491397061894%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:57:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10715?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10715:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; service-call : create ZooKeeper based ServiceDiscovery&#010;&gt; ------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10715&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10715&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-zookeeper&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; [~paolo.antinori]&#010;&gt; As you know ZooKeeper, do you mind creating a ZooKeeper ServiceDiscovery implementation&#010;?&#010;&gt; Some references:&#010;&gt; https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/cloud/ServiceDiscovery.java&#010;&gt; https://github.com/apache/camel/blob/master/components/camel-consul/src/main/java/org/apache/camel/component/consul/cloud/ConsulServiceDiscovery.java&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
150,151,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-11030) Add a vault service to manage secrets,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13056936.1489741243000.210416.1491397121579%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:58:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11030?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-11030:&#010;------------------------------------&#010;    Fix Version/s:     (was: Future)&#010;                   3.0.0&#010;&#010;&gt; Add a vault service to manage secrets&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11030&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11030&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;             Fix For: 3.0.0&#010;&gt;&#010;&gt;&#010;&gt; Lot of components these days are supposed to manage secrets such as auth tokens etc.&#010;but as there's no common support in camel each component is implementing the same concept&#010;which increase the maintenance cost.&#010;&gt; It would be nice to have a vault service in camel-core so that components can leverage&#010;and extend it, some ideas/examples:&#010;&gt; - to store auth tokens and delegate to the vault the notification about expiration and&#010;renewal when needed (by registering some functions/callbacks)&#010;&gt; - to provide different backends like kubernetes secrets, hashicorp's vault,&#010;&gt; - to provide different workflow (i.e. JSON Web Token)&#010;&gt; - to use the vault as properties source if someone prefix a property with vault like&#010;{{vault:db.password}}&#010;&gt; The interface should be as simple as possible.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
151,152,,[jira] [Created] (CAMEL-11112) Make sure streams are closed in camel-catalog,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13056936.1489741243000.210416.1491397121579%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 12:58:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11030?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-11030:&#010;------------------------------------&#010;    Fix Version/s:     (was: Future)&#010;                   3.0.0&#010;&#010;&gt; Add a vault service to manage secrets&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11030&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11030&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;             Fix For: 3.0.0&#010;&gt;&#010;&gt;&#010;&gt; Lot of components these days are supposed to manage secrets such as auth tokens etc.&#010;but as there's no common support in camel each component is implementing the same concept&#010;which increase the maintenance cost.&#010;&gt; It would be nice to have a vault service in camel-core so that components can leverage&#010;and extend it, some ideas/examples:&#010;&gt; - to store auth tokens and delegate to the vault the notification about expiration and&#010;renewal when needed (by registering some functions/callbacks)&#010;&gt; - to provide different backends like kubernetes secrets, hashicorp's vault,&#010;&gt; - to provide different workflow (i.e. JSON Web Token)&#010;&gt; - to use the vault as properties source if someone prefix a property with vault like&#010;{{vault:db.password}}&#010;&gt; The interface should be as simple as possible.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
152,153,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11112) Make sure streams are closed in camel-catalog,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061729.1491397591000.210520.1491397601525%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 13:06:41 GMT",Zoran Regvart created CAMEL-11112:&#010;-------------------------------------&#010;&#010;             Summary: Make sure streams are closed in camel-catalog&#010;                 Key: CAMEL-11112&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11112&#010;             Project: Camel&#010;          Issue Type: Task&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;            Priority: Trivial&#010;&#010;&#010;Implementation in {{camel-catalog}} could be cleaned up a bit to make sure that the InputStreams&#010;are closed by using try-with-resources construct.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
153,154,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11112) Make sure streams are closed in camel-catalog,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061729.1491397591000.210537.1491397842104%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 13:10:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11112?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11112.&#010;-----------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.19.0&#010;&#010;Performed a bit of refactoring along the way, to remove {{while(true)}} loops and refactor&#010;common code into methods.&#010;&#010;&gt; Make sure streams are closed in camel-catalog&#010;&gt; ---------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11112&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11112&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Implementation in {{camel-catalog}} could be cleaned up a bit to make sure that the InputStreams&#010;are closed by using try-with-resources construct.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
154,155,Zoran Regvart (JIRA),  [jira] [Updated] (CAMEL-11112) Make sure streams are closed in camel-catalog,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061729.1491397591000.210602.1491398321656%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 13:18:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11112?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart updated CAMEL-11112:&#010;----------------------------------&#010;    Component/s: camel-core&#010;                 camel-catalog&#010;&#010;&gt; Make sure streams are closed in camel-catalog&#010;&gt; ---------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11112&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11112&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-catalog, camel-core&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Implementation in {{camel-catalog}} could be cleaned up a bit to make sure that the InputStreams&#010;are closed by using try-with-resources construct.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
155,156,,[jira] [Created] (CAMEL-11113) Camel catalog's asEndpointUri mangles endpoint URIs for unequal number of tokens,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061729.1491397591000.210602.1491398321656%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 13:18:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11112?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart updated CAMEL-11112:&#010;----------------------------------&#010;    Component/s: camel-core&#010;                 camel-catalog&#010;&#010;&gt; Make sure streams are closed in camel-catalog&#010;&gt; ---------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11112&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11112&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-catalog, camel-core&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Implementation in {{camel-catalog}} could be cleaned up a bit to make sure that the InputStreams&#010;are closed by using try-with-resources construct.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
156,157,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11113) Camel catalog's asEndpointUri mangles endpoint URIs for unequal number of tokens,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061732.1491398255000.210601.1491398261514%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 13:17:41 GMT","Zoran Regvart created CAMEL-11113:&#010;-------------------------------------&#010;&#010;             Summary: Camel catalog's asEndpointUri mangles endpoint URIs for unequal number&#010;of tokens&#010;                 Key: CAMEL-11113&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11113&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-catalog, camel-core&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;&#010;&#010;When used with unequal number of tokens vs parameters the CamelCatalog {{asEndpointUri}} can&#010;drop extra of the tokens.&#010;&#010;For instance if used with {{rest}} component and {{uriTemplate}} containing template placeholders,&#010;expected endpoint URI should be:&#010;&#010;{code:java}&#010;""rest:GET:/path:/template/{param}""&#010;{code}&#010;&#010;but it ends up being:&#010;{code:java}&#010;""rest:GET:/path:/template/{param""&#010;{code}&#010;&#010;as the number of tokens ({{:}}, {{:/}}, {{:/}}, {{&amp;#123;}}, {{&amp;#125;}}) is 5, and&#010;the number of properties specified ({{rest}}, {{GET}}, {{/path}}, {{/template/&amp;#123;param&amp;#125;}})&#010;is 4&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
157,158,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11113) Camel catalog's asEndpointUri mangles endpoint URIs for unequal number of tokens,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061732.1491398255000.210985.1491401021568%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 14:03:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11113?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15956903#comment-15956903&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11113:&#010;----------------------------------------&#010;&#010;GitHub user zregvart opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1598&#010;&#010;    CAMEL-11113 Camel catalog's asEndpointUri mangles endpoint URIs for unequal number of&#010;tokens&#010;&#010;    **Work in progress, please don't merge**&#010;    &#010;    This illustrates a number of issues when constructing the endpoint URI from Camel catalog.&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/zregvart/camel CAMEL-11113&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1598.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1598&#010;    &#010;----&#010;commit 9780195a4da306373d874552e92f9b0c80e8e3c5&#010;Author: Zoran Regvart &lt;zregvart@apache.org&gt;&#010;Date:   2017-04-05T14:01:33Z&#010;&#010;    CAMEL-11113 added unit tests&#010;&#010;----&#010;&#010;&#010;&gt; Camel catalog's asEndpointUri mangles endpoint URIs for unequal number of tokens&#010;&gt; --------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11113&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11113&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-catalog, camel-core&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;&#010;&gt; When used with unequal number of tokens vs parameters the CamelCatalog {{asEndpointUri}}&#010;can drop extra of the tokens.&#010;&gt; For instance if used with {{rest}} component and {{uriTemplate}} containing template&#010;placeholders, expected endpoint URI should be:&#010;&gt; {code:java}&#010;&gt; ""rest:GET:/path:/template/{param}""&#010;&gt; {code}&#010;&gt; but it ends up being:&#010;&gt; {code:java}&#010;&gt; ""rest:GET:/path:/template/{param""&#010;&gt; {code}&#010;&gt; as the number of tokens ({{:}}, {{:/}}, {{:/}}, {{&amp;#123;}}, {{&amp;#125;}}) is 5,&#010;and the number of properties specified ({{rest}}, {{GET}}, {{/path}}, {{/template/&amp;#123;param&amp;#125;}})&#010;is 4&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
158,159,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11113) Camel catalog's asEndpointUri mangles endpoint URIs for unequal number of tokens,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061732.1491398255000.222322.1491472301839%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 09:51:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11113?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15958674#comment-15958674&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11113:&#010;-------------------------------------&#010;&#010;Thanks for the test case I am working on a fix&#010;&#010;&gt; Camel catalog's asEndpointUri mangles endpoint URIs for unequal number of tokens&#010;&gt; --------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11113&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11113&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-catalog, camel-core&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;&#010;&gt; When used with unequal number of tokens vs parameters the CamelCatalog {{asEndpointUri}}&#010;can drop extra of the tokens.&#010;&gt; For instance if used with {{rest}} component and {{uriTemplate}} containing template&#010;placeholders, expected endpoint URI should be:&#010;&gt; {code:java}&#010;&gt; ""rest:GET:/path:/template/{param}""&#010;&gt; {code}&#010;&gt; but it ends up being:&#010;&gt; {code:java}&#010;&gt; ""rest:GET:/path:/template/{param""&#010;&gt; {code}&#010;&gt; as the number of tokens ({{:}}, {{:/}}, {{:/}}, {{&amp;#123;}}, {{&amp;#125;}}) is 5,&#010;and the number of properties specified ({{rest}}, {{GET}}, {{/path}}, {{/template/&amp;#123;param&amp;#125;}})&#010;is 4&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
159,160,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11113) Camel catalog's asEndpointUri mangles endpoint URIs for unequal number of tokens,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061732.1491398255000.222963.1491476501789%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 11:01:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11113?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11113.&#010;---------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.19.0&#010;&#010;There is a fix now, and I added a TODO to revisit the logic in the future&#010;&#010;&gt; Camel catalog's asEndpointUri mangles endpoint URIs for unequal number of tokens&#010;&gt; --------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11113&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11113&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-catalog, camel-core&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When used with unequal number of tokens vs parameters the CamelCatalog {{asEndpointUri}}&#010;can drop extra of the tokens.&#010;&gt; For instance if used with {{rest}} component and {{uriTemplate}} containing template&#010;placeholders, expected endpoint URI should be:&#010;&gt; {code:java}&#010;&gt; ""rest:GET:/path:/template/{param}""&#010;&gt; {code}&#010;&gt; but it ends up being:&#010;&gt; {code:java}&#010;&gt; ""rest:GET:/path:/template/{param""&#010;&gt; {code}&#010;&gt; as the number of tokens ({{:}}, {{:/}}, {{:/}}, {{&amp;#123;}}, {{&amp;#125;}}) is 5,&#010;and the number of properties specified ({{rest}}, {{GET}}, {{/path}}, {{/template/&amp;#123;param&amp;#125;}})&#010;is 4&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
160,161,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11113) Camel catalog's asEndpointUri mangles endpoint URIs for unequal number of tokens,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061732.1491398255000.223011.1491476921593%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 11:08:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11113?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15958752#comment-15958752&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11113:&#010;----------------------------------------&#010;&#010;Github user zregvart closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1598&#010;&#010;&#010;&gt; Camel catalog's asEndpointUri mangles endpoint URIs for unequal number of tokens&#010;&gt; --------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11113&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11113&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-catalog, camel-core&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When used with unequal number of tokens vs parameters the CamelCatalog {{asEndpointUri}}&#010;can drop extra of the tokens.&#010;&gt; For instance if used with {{rest}} component and {{uriTemplate}} containing template&#010;placeholders, expected endpoint URI should be:&#010;&gt; {code:java}&#010;&gt; ""rest:GET:/path:/template/{param}""&#010;&gt; {code}&#010;&gt; but it ends up being:&#010;&gt; {code:java}&#010;&gt; ""rest:GET:/path:/template/{param""&#010;&gt; {code}&#010;&gt; as the number of tokens ({{:}}, {{:/}}, {{:/}}, {{&amp;#123;}}, {{&amp;#125;}}) is 5,&#010;and the number of properties specified ({{rest}}, {{GET}}, {{/path}}, {{/template/&amp;#123;param&amp;#125;}})&#010;is 4&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
161,162,,[jira] [Created] (CAMEL-11114) Create cache DSL,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061732.1491398255000.223011.1491476921593%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 11:08:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11113?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15958752#comment-15958752&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11113:&#010;----------------------------------------&#010;&#010;Github user zregvart closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1598&#010;&#010;&#010;&gt; Camel catalog's asEndpointUri mangles endpoint URIs for unequal number of tokens&#010;&gt; --------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11113&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11113&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-catalog, camel-core&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When used with unequal number of tokens vs parameters the CamelCatalog {{asEndpointUri}}&#010;can drop extra of the tokens.&#010;&gt; For instance if used with {{rest}} component and {{uriTemplate}} containing template&#010;placeholders, expected endpoint URI should be:&#010;&gt; {code:java}&#010;&gt; ""rest:GET:/path:/template/{param}""&#010;&gt; {code}&#010;&gt; but it ends up being:&#010;&gt; {code:java}&#010;&gt; ""rest:GET:/path:/template/{param""&#010;&gt; {code}&#010;&gt; as the number of tokens ({{:}}, {{:/}}, {{:/}}, {{&amp;#123;}}, {{&amp;#125;}}) is 5,&#010;and the number of properties specified ({{rest}}, {{GET}}, {{/path}}, {{/template/&amp;#123;param&amp;#125;}})&#010;is 4&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
162,163,Nicola Ferraro (JIRA),  [jira] [Created] (CAMEL-11114) Create cache DSL,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061756.1491402664000.211199.1491402701520%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 14:31:41 GMT","Nicola Ferraro created CAMEL-11114:&#010;--------------------------------------&#010;&#010;             Summary: Create cache DSL&#010;                 Key: CAMEL-11114&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11114&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;            Reporter: Nicola Ferraro&#010;             Fix For: 2.20.0&#010;&#010;&#010;We should evaluate adding a new ""cache"" dsl that can be used with all cache components in&#010;Camel. A default implementation may use also caffeine, included in camel-core.&#010;&#010;A possible usage example may be:&#010;&#010;{code}&#010;from(""xxx"")&#010;.cache().on(""${header.yyy}"").ttl(600000) // caches the body&#010;  .to(""http4://a-service-that-makes-me-pay-for-each-request.com/api/expensive-endpoint"")&#010;  .transform().zzz()&#010;  .to(""http4://or-a-service-that-i-can-call-few-times-a-day.com/api/limited-endpoint"")&#010;  .unmarshal()&#010;.endCache()&#010;{code}&#010;&#010;It should be also useful to protect internal services when using Camel e.g. as a api-gateway&#010;(almost what hystrix does in case of failure of the target host).&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
163,164,Dmitry Volodin (JIRA),  [jira] [Commented] (CAMEL-11114) Create cache DSL,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061756.1491402664000.211549.1491405701579%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 15:21:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11114?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15957017#comment-15957017&#010;] &#010;&#010;Dmitry Volodin commented on CAMEL-11114:&#010;----------------------------------------&#010;&#010;Nicola, this a good idea and desirable feature, please also add method which could invalidate&#010;cache by key. For example, we can catch event from foreign system that the data has changed&#010;and clear (invalidate) cache for the data and systems consistency.&#010;&#010;&gt; Create cache DSL&#010;&gt; ----------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11114&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11114&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; We should evaluate adding a new ""cache"" dsl that can be used with all cache components&#010;in Camel. A default implementation may use also caffeine, included in camel-core.&#010;&gt; A possible usage example may be:&#010;&gt; {code}&#010;&gt; from(""xxx"")&#010;&gt; .cache().on(""${header.yyy}"").ttl(600000) // caches the body&#010;&gt;   .to(""http4://a-service-that-makes-me-pay-for-each-request.com/api/expensive-endpoint"")&#010;&gt;   .transform().zzz()&#010;&gt;   .to(""http4://or-a-service-that-i-can-call-few-times-a-day.com/api/limited-endpoint"")&#010;&gt;   .unmarshal()&#010;&gt; .endCache()&#010;&gt; {code}&#010;&gt; It should be also useful to protect internal services when using Camel e.g. as a api-gateway&#010;(almost what hystrix does in case of failure of the target host).&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
164,165,,[jira] [Work started] (CAMEL-10650) camel-spring-boot - Allow to configure SSLContextParameters in auto configuration,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061756.1491402664000.211549.1491405701579%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 15:21:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11114?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15957017#comment-15957017&#010;] &#010;&#010;Dmitry Volodin commented on CAMEL-11114:&#010;----------------------------------------&#010;&#010;Nicola, this a good idea and desirable feature, please also add method which could invalidate&#010;cache by key. For example, we can catch event from foreign system that the data has changed&#010;and clear (invalidate) cache for the data and systems consistency.&#010;&#010;&gt; Create cache DSL&#010;&gt; ----------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11114&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11114&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; We should evaluate adding a new ""cache"" dsl that can be used with all cache components&#010;in Camel. A default implementation may use also caffeine, included in camel-core.&#010;&gt; A possible usage example may be:&#010;&gt; {code}&#010;&gt; from(""xxx"")&#010;&gt; .cache().on(""${header.yyy}"").ttl(600000) // caches the body&#010;&gt;   .to(""http4://a-service-that-makes-me-pay-for-each-request.com/api/expensive-endpoint"")&#010;&gt;   .transform().zzz()&#010;&gt;   .to(""http4://or-a-service-that-i-can-call-few-times-a-day.com/api/limited-endpoint"")&#010;&gt;   .unmarshal()&#010;&gt; .endCache()&#010;&gt; {code}&#010;&gt; It should be also useful to protect internal services when using Camel e.g. as a api-gateway&#010;(almost what hystrix does in case of failure of the target host).&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
165,166,Nicola Ferraro (JIRA),  [jira] [Work started] (CAMEL-10650) camel-spring-boot - Allow to configure SSLContextParameters in auto configuration,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13030363.1482493557000.211924.1491407861690%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 15:57:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10650?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Work on CAMEL-10650 started by Nicola Ferraro.&#010;----------------------------------------------&#010;&gt; camel-spring-boot - Allow to configure SSLContextParameters in auto configuration&#010;&gt; ---------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10650&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10650&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-spring-boot&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Camel has org.apache.camel.util.jsse.SSLContextParameters from&#010;&gt; http://camel.apache.org/camel-configuration-utilities.html&#010;&gt; We should allow to configure this from spring boot auto configuration so people can easier&#010;setup this in the application properties file etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
166,167,Nicola Ferraro (JIRA),  [jira] [Commented] (CAMEL-10650) camel-spring-boot - Allow to configure SSLContextParameters in auto configuration,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13030363.1482493557000.221538.1491466781541%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 08:19:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10650?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15958520#comment-15958520&#010;] &#010;&#010;Nicola Ferraro commented on CAMEL-10650:&#010;----------------------------------------&#010;&#010;[~davsclaus] There are multiple issues with code generation when code is splitted in multiple&#010;classes in different modules (will open other jiras for 2.20).. &#010;&#010;I'm thinking to provide a default value of the context parameters in the spring-boot module&#010;(manually coded). That value can be configured in a common place for every module:&#010;&#010;{code}&#010;camel:&#010;  ssl:&#010;    enabled: true&#010;      config:&#010;        cert-alias: xxx&#010;        key-managers:&#010;          provider: yyy&#010;...&#010;{code}&#010;&#010;Each module using SSLContextParameters will try to lookup the default value from the registry&#010;if a specific value is not provided in their configuration.&#010;&#010;This is in line with spring-boot way of handling ssl (https://docs.spring.io/spring-boot/docs/current/reference/html/howto-embedded-servlet-containers.html#howto-configure-ssl).&#010;&#010;Wdyt?&#010;&#010;&gt; camel-spring-boot - Allow to configure SSLContextParameters in auto configuration&#010;&gt; ---------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10650&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10650&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-spring-boot&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Camel has org.apache.camel.util.jsse.SSLContextParameters from&#010;&gt; http://camel.apache.org/camel-configuration-utilities.html&#010;&gt; We should allow to configure this from spring boot auto configuration so people can easier&#010;setup this in the application properties file etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
167,168,Nicola Ferraro (JIRA),  [jira] [Comment Edited] (CAMEL-10650) camel-spring-boot - Allow to configure SSLContextParameters in auto configuration,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13030363.1482493557000.221540.1491466841535%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 08:20:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10650?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15958520#comment-15958520&#010;] &#010;&#010;Nicola Ferraro edited comment on CAMEL-10650 at 4/6/17 8:19 AM:&#010;----------------------------------------------------------------&#010;&#010;[~davsclaus] There are multiple issues with code generation when code is splitted in multiple&#010;classes in different modules (will open other jiras for 2.20).. &#010;&#010;I'm thinking to provide a default value of the context parameters in the spring-boot module&#010;(manually coded). That value can be configured in a common place for every module:&#010;&#010;{code}&#010;camel:&#010;  ssl:&#010;    enabled: true&#010;    config:&#010;      cert-alias: xxx&#010;      key-managers:&#010;        provider: yyy&#010;...&#010;{code}&#010;&#010;Each module using SSLContextParameters will try to lookup the default value from the registry&#010;if a specific value is not provided in their configuration.&#010;&#010;This is in line with spring-boot way of handling ssl (https://docs.spring.io/spring-boot/docs/current/reference/html/howto-embedded-servlet-containers.html#howto-configure-ssl).&#010;&#010;Wdyt?&#010;&#010;&#010;was (Author: nferraro):&#010;[~davsclaus] There are multiple issues with code generation when code is splitted in multiple&#010;classes in different modules (will open other jiras for 2.20).. &#010;&#010;I'm thinking to provide a default value of the context parameters in the spring-boot module&#010;(manually coded). That value can be configured in a common place for every module:&#010;&#010;{code}&#010;camel:&#010;  ssl:&#010;    enabled: true&#010;      config:&#010;        cert-alias: xxx&#010;        key-managers:&#010;          provider: yyy&#010;...&#010;{code}&#010;&#010;Each module using SSLContextParameters will try to lookup the default value from the registry&#010;if a specific value is not provided in their configuration.&#010;&#010;This is in line with spring-boot way of handling ssl (https://docs.spring.io/spring-boot/docs/current/reference/html/howto-embedded-servlet-containers.html#howto-configure-ssl).&#010;&#010;Wdyt?&#010;&#010;&gt; camel-spring-boot - Allow to configure SSLContextParameters in auto configuration&#010;&gt; ---------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10650&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10650&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-spring-boot&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Camel has org.apache.camel.util.jsse.SSLContextParameters from&#010;&gt; http://camel.apache.org/camel-configuration-utilities.html&#010;&gt; We should allow to configure this from spring boot auto configuration so people can easier&#010;setup this in the application properties file etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
168,169,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-10650) camel-spring-boot - Allow to configure SSLContextParameters in auto configuration,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13030363.1482493557000.221629.1491467501534%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 08:31:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10650?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15958544#comment-15958544&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-10650:&#010;-------------------------------------&#010;&#010;Yeah this sounds good.&#010;&#010;&gt; camel-spring-boot - Allow to configure SSLContextParameters in auto configuration&#010;&gt; ---------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10650&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10650&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-spring-boot&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Camel has org.apache.camel.util.jsse.SSLContextParameters from&#010;&gt; http://camel.apache.org/camel-configuration-utilities.html&#010;&gt; We should allow to configure this from spring boot auto configuration so people can easier&#010;setup this in the application properties file etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
169,170,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10650) camel-spring-boot - Allow to configure SSLContextParameters in auto configuration,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13030363.1482493557000.237534.1491586781994%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 17:39:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10650?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15961175#comment-15961175&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10650:&#010;----------------------------------------&#010;&#010;GitHub user nicolaferraro opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1607&#010;&#010;    CAMEL-10650: global sslContextParameters&#010;&#010;    Submitting for a review.&#010;    It basically adds global ssl parameters that can be configured using spring-boot properties.&#010;There is no ide autocompletion at the moment, bu I'll add it. A sample configuration is contained&#010;in the tests e.g. of `camel-undertow-starter`.&#010;    &#010;    To create a global ssl config, I needed to take care of:&#010;    - Change each component using SSLContextParameters to lookup the new default if no configuration&#010;is given&#010;    - Not clash with spring xml configuration of SSLContextParameters, so I avoided putting&#010;into the registry an instance of SSLContextParameters, instead I put a GlobalSSLContextParametersSupplier&#010;class.&#010;    - Make sure that taking a default does not change the behaviour of the component: for&#010;components where the presence of a SSLContextParameters in the config turns on the SSL mode,&#010;I've put a flag named ""useGlobalSslContextParameters"" to disable the feature. For some components,&#010;the default is false (do not use the global config).&#010;    &#010;    For http/tcp components there is no need of such flag since SSL is enabled by other means&#010;(e.g. ""https://"" in the uri). Some components have their own flag to enable SSL.&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/nicolaferraro/camel master&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1607.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1607&#010;    &#010;----&#010;commit 854774eca5c8caec34fc41bb8d52386ecd581537&#010;Author: Nicola Ferraro &lt;ni.ferraro@gmail.com&gt;&#010;Date:   2017-04-06T12:52:06Z&#010;&#010;    CAMEL-10650: adding sslContextParameters to spring-boot configuration&#010;&#010;----&#010;&#010;&#010;&gt; camel-spring-boot - Allow to configure SSLContextParameters in auto configuration&#010;&gt; ---------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10650&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10650&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-spring-boot&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Camel has org.apache.camel.util.jsse.SSLContextParameters from&#010;&gt; http://camel.apache.org/camel-configuration-utilities.html&#010;&gt; We should allow to configure this from spring boot auto configuration so people can easier&#010;setup this in the application properties file etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
170,171,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10650) camel-spring-boot - Allow to configure SSLContextParameters in auto configuration,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13030363.1482493557000.256682.1491919781806%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 14:09:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10650?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15964420#comment-15964420&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10650:&#010;----------------------------------------&#010;&#010;Github user nicolaferraro closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1607&#010;&#010;&#010;&gt; camel-spring-boot - Allow to configure SSLContextParameters in auto configuration&#010;&gt; ---------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10650&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10650&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-spring-boot&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Camel has org.apache.camel.util.jsse.SSLContextParameters from&#010;&gt; http://camel.apache.org/camel-configuration-utilities.html&#010;&gt; We should allow to configure this from spring boot auto configuration so people can easier&#010;setup this in the application properties file etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
171,172,Nicola Ferraro (JIRA),  [jira] [Commented] (CAMEL-10650) camel-spring-boot - Allow to configure SSLContextParameters in auto configuration,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13030363.1482493557000.257791.1491927641592%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 16:20:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10650?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15964594#comment-15964594&#010;] &#010;&#010;Nicola Ferraro commented on CAMEL-10650:&#010;----------------------------------------&#010;&#010;Now that http context parameters should be enabled explicitly, there's no need to set the&#010;flag ""camel.ssl.enabled=true"". I should change the condition that lead to the creation of&#010;the SSLParametersSupplier in the registry.&#010;&#010;&gt; camel-spring-boot - Allow to configure SSLContextParameters in auto configuration&#010;&gt; ---------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10650&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10650&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-spring-boot&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Camel has org.apache.camel.util.jsse.SSLContextParameters from&#010;&gt; http://camel.apache.org/camel-configuration-utilities.html&#010;&gt; We should allow to configure this from spring boot auto configuration so people can easier&#010;setup this in the application properties file etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
172,173,Nicola Ferraro (JIRA),  [jira] [Comment Edited] (CAMEL-10650) camel-spring-boot - Allow to configure SSLContextParameters in auto configuration,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13030363.1482493557000.257792.1491927641600%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 16:20:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10650?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15964594#comment-15964594&#010;] &#010;&#010;Nicola Ferraro edited comment on CAMEL-10650 at 4/11/17 4:20 PM:&#010;-----------------------------------------------------------------&#010;&#010;Now that ssl context parameters should be enabled explicitly, there's no need to set the flag&#010;""camel.ssl.enabled=true"". I should change the condition that lead to the creation of the SSLParametersSupplier&#010;in the registry.&#010;&#010;&#010;was (Author: nferraro):&#010;Now that http context parameters should be enabled explicitly, there's no need to set the&#010;flag ""camel.ssl.enabled=true"". I should change the condition that lead to the creation of&#010;the SSLParametersSupplier in the registry.&#010;&#010;&gt; camel-spring-boot - Allow to configure SSLContextParameters in auto configuration&#010;&gt; ---------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10650&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10650&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-spring-boot&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Camel has org.apache.camel.util.jsse.SSLContextParameters from&#010;&gt; http://camel.apache.org/camel-configuration-utilities.html&#010;&gt; We should allow to configure this from spring boot auto configuration so people can easier&#010;setup this in the application properties file etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
173,174,Nicola Ferraro (JIRA),  [jira] [Resolved] (CAMEL-10650) camel-spring-boot - Allow to configure SSLContextParameters in auto configuration,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13030363.1482493557000.265779.1492005647354%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 14:00:47 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10650?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro resolved CAMEL-10650.&#010;------------------------------------&#010;    Resolution: Resolved&#010;&#010;Added docs and completing.&#010;&#010;&gt; camel-spring-boot - Allow to configure SSLContextParameters in auto configuration&#010;&gt; ---------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10650&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10650&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-spring-boot&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Camel has org.apache.camel.util.jsse.SSLContextParameters from&#010;&gt; http://camel.apache.org/camel-configuration-utilities.html&#010;&gt; We should allow to configure this from spring boot auto configuration so people can easier&#010;setup this in the application properties file etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
174,175,,[jira] [Commented] (CAMEL-10452) camel-salesforce: Add an option to simulate SELECT * from,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13030363.1482493557000.265779.1492005647354%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 14:00:47 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10650?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro resolved CAMEL-10650.&#010;------------------------------------&#010;    Resolution: Resolved&#010;&#010;Added docs and completing.&#010;&#010;&gt; camel-spring-boot - Allow to configure SSLContextParameters in auto configuration&#010;&gt; ---------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10650&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10650&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-spring-boot&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Camel has org.apache.camel.util.jsse.SSLContextParameters from&#010;&gt; http://camel.apache.org/camel-configuration-utilities.html&#010;&gt; We should allow to configure this from spring boot auto configuration so people can easier&#010;setup this in the application properties file etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
175,176,Zoran Regvart (JIRA),  [jira] [Commented] (CAMEL-10452) camel-salesforce: Add an option to simulate SELECT * from,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13019220.1478615438000.215418.1491426401788%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 21:06:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10452?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15957683#comment-15957683&#010;] &#010;&#010;Zoran Regvart commented on CAMEL-10452:&#010;---------------------------------------&#010;&#010;[~lb] do you think this is needed in 2.19 or can it wait for 2.20?&#010;&#010;&gt; camel-salesforce: Add an option to simulate SELECT * from&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10452&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10452&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-salesforce&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; As today it is not possible to run a query like SELECT * from but one is forced to list&#010;all the field he want.&#010;&gt; It would be nice to auto generate a statement using SObject meta data so one can write:&#010;&gt; from(""salesforce:stream?SObjectName=Case&amp;SObjectQueryFromName=true"")&#010;&gt; to get all the fields the SObjectName supports.&#010;&gt; [~dhirajsb] what do you think ?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
176,177,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-10452) camel-salesforce: Add an option to simulate SELECT * from,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13019220.1478615438000.220181.1491455981642%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 05:19:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10452?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10452:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; camel-salesforce: Add an option to simulate SELECT * from&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10452&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10452&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-salesforce&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; As today it is not possible to run a query like SELECT * from but one is forced to list&#010;all the field he want.&#010;&gt; It would be nice to auto generate a statement using SObject meta data so one can write:&#010;&gt; from(""salesforce:stream?SObjectName=Case&amp;SObjectQueryFromName=true"")&#010;&gt; to get all the fields the SObjectName supports.&#010;&gt; [~dhirajsb] what do you think ?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
177,178,,[jira] [Created] (CAMEL-11115) Enhance binding support in RestComponent,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13019220.1478615438000.220181.1491455981642%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 05:19:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10452?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10452:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; camel-salesforce: Add an option to simulate SELECT * from&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10452&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10452&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-salesforce&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; As today it is not possible to run a query like SELECT * from but one is forced to list&#010;all the field he want.&#010;&gt; It would be nice to auto generate a statement using SObject meta data so one can write:&#010;&gt; from(""salesforce:stream?SObjectName=Case&amp;SObjectQueryFromName=true"")&#010;&gt; to get all the fields the SObjectName supports.&#010;&gt; [~dhirajsb] what do you think ?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
178,179,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11115) Enhance binding support in RestComponent,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061869.1491427105000.215560.1491427121867%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 21:18:41 GMT","Zoran Regvart created CAMEL-11115:&#010;-------------------------------------&#010;&#010;             Summary: Enhance binding support in RestComponent&#010;                 Key: CAMEL-11115&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11115&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;&#010;&#010;The REST component has binding support could use bit more flexibility:&#010; - bindingMode should be exposed on component/endpoint, currently it's only configurable through&#010;RestConfiguration&#010; - bindingMode could be set to {{auto}} if not set and {{inType}} or {{outType}} is present&#010; - {{RestProducerBindingProcessor.type}} ({{inType}} from {{RestEndpoint}}) is not used to&#010;marshal body of the request, it probably should be removed?&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
179,180,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11115) Enhance binding support in RestComponent,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061869.1491427105000.222422.1491473141747%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 10:05:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11115?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11115.&#010;-----------------------------------&#010;       Resolution: Done&#010;    Fix Version/s: 2.19.0&#010;&#010;Done without any magic, i.e. not setting the binding mode to {{auto}} if {{inType}} or {{outType}}&#010;is set, user needs to set binding mode explicitly on the endpoint or on the {{RestConfiguration}}.&#010;&#010;&gt; Enhance binding support in RestComponent&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11115&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11115&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The REST component has binding support could use bit more flexibility:&#010;&gt;  - bindingMode should be exposed on component/endpoint, currently it's only configurable&#010;through RestConfiguration&#010;&gt;  - bindingMode could be set to {{auto}} if not set and {{inType}} or {{outType}} is present&#010;&gt;  - {{RestProducerBindingProcessor.type}} ({{inType}} from {{RestEndpoint}}) is not used&#010;to marshal body of the request, it probably should be removed?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
180,181,,[jira] [Created] (CAMEL-11116) Better handling of query parameters in RestProducer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061869.1491427105000.222422.1491473141747%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 10:05:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11115?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11115.&#010;-----------------------------------&#010;       Resolution: Done&#010;    Fix Version/s: 2.19.0&#010;&#010;Done without any magic, i.e. not setting the binding mode to {{auto}} if {{inType}} or {{outType}}&#010;is set, user needs to set binding mode explicitly on the endpoint or on the {{RestConfiguration}}.&#010;&#010;&gt; Enhance binding support in RestComponent&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11115&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11115&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The REST component has binding support could use bit more flexibility:&#010;&gt;  - bindingMode should be exposed on component/endpoint, currently it's only configurable&#010;through RestConfiguration&#010;&gt;  - bindingMode could be set to {{auto}} if not set and {{inType}} or {{outType}} is present&#010;&gt;  - {{RestProducerBindingProcessor.type}} ({{inType}} from {{RestEndpoint}}) is not used&#010;to marshal body of the request, it probably should be removed?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
181,182,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11116) Better handling of query parameters in RestProducer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061870.1491427205000.215595.1491427241913%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 21:20:41 GMT","Zoran Regvart created CAMEL-11116:&#010;-------------------------------------&#010;&#010;             Summary: Better handling of query parameters in RestProducer&#010;                 Key: CAMEL-11116&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11116&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;&#010;&#010;Currently {{RestProducer}} derives query parameters from endpoint parameters, passing all&#010;parameters of the endpoint as query parameters to the underlying component.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
182,183,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11116) Better handling of query parameters in RestProducer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061870.1491427205000.223939.1491483941718%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 13:05:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11116?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11116.&#010;-----------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.19.0&#010;&#010;{{queryParameters}} endpoint property is no longer determined from the endpoint URI by using&#010;all values from {{?}} character onwards, but from the {{properties}} parsed from the endpoint&#010;URI, these are combined with explicitly set {{queryParameters}} endpoint property.&#010;&#010;&gt; Better handling of query parameters in RestProducer&#010;&gt; ---------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11116&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11116&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Currently {{RestProducer}} derives query parameters from endpoint parameters, passing&#010;all parameters of the endpoint as query parameters to the underlying component.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
183,185,Lionel Palacin (JIRA),  [jira] [Created] (CAMEL-11117) The searchTerm subjectOrBody breaks the searchTerm unseen,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061873.1491428126000.215893.1491428143138%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 21:35:43 GMT","Lionel Palacin created CAMEL-11117:&#010;--------------------------------------&#010;&#010;             Summary: The searchTerm subjectOrBody breaks the searchTerm unseen&#010;                 Key: CAMEL-11117&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11117&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-mail&#010;    Affects Versions: 2.18.3&#010;            Reporter: Lionel Palacin&#010;            Priority: Minor&#010;&#010;&#010;When the two options searchTerm.unseen and searchTerm.subjectOrBody are together, the searchTerm&#010;generated looks like that:&#010;&#010;(Unseen AND Subject) OR Body. Which is incorrect, the right searchTerm should be: Unseen AND&#010;(Subject OR Body). &#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
184,186,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11117) The searchTerm subjectOrBody breaks the searchTerm unseen,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061873.1491428126000.215976.1491428321909%40Atlassian.JIRA%3E,issues,"Wed, 05 Apr 2017 21:38:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11117?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15957782#comment-15957782&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11117:&#010;----------------------------------------&#010;&#010;GitHub user lio-p opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1599&#010;&#010;    CAMEL-11117: Fix searchTerm error with unseen and subjectOrBody&#010;&#010;    &#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/lio-p/camel CAMEL-11117-FIX&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1599.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1599&#010;    &#010;----&#010;&#010;----&#010;&#010;&#010;&gt; The searchTerm subjectOrBody breaks the searchTerm unseen&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11117&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11117&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-mail&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Lionel Palacin&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; When the two options searchTerm.unseen and searchTerm.subjectOrBody are together, the&#010;searchTerm generated looks like that:&#010;&gt; (Unseen AND Subject) OR Body. Which is incorrect, the right searchTerm should be: Unseen&#010;AND (Subject OR Body). &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
185,187,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11117) The searchTerm subjectOrBody breaks the searchTerm unseen,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061873.1491428126000.221269.1491464441657%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 07:40:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11117?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11117:&#010;--------------------------------&#010;    Fix Version/s: 2.19.0&#010;                   2.18.4&#010;&#010;&gt; The searchTerm subjectOrBody breaks the searchTerm unseen&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11117&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11117&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-mail&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Lionel Palacin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When the two options searchTerm.unseen and searchTerm.subjectOrBody are together, the&#010;searchTerm generated looks like that:&#010;&gt; (Unseen AND Subject) OR Body. Which is incorrect, the right searchTerm should be: Unseen&#010;AND (Subject OR Body). &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
186,188,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11117) The searchTerm subjectOrBody breaks the searchTerm unseen,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061873.1491428126000.221329.1491464921694%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 07:48:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11117?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15958486#comment-15958486&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11117:&#010;----------------------------------------&#010;&#010;Github user asfgit closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1599&#010;&#010;&#010;&gt; The searchTerm subjectOrBody breaks the searchTerm unseen&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11117&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11117&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-mail&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Lionel Palacin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When the two options searchTerm.unseen and searchTerm.subjectOrBody are together, the&#010;searchTerm generated looks like that:&#010;&gt; (Unseen AND Subject) OR Body. Which is incorrect, the right searchTerm should be: Unseen&#010;AND (Subject OR Body). &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
187,189,Andrea Cosentino (JIRA),  [jira] [Resolved] (CAMEL-11117) The searchTerm subjectOrBody breaks the searchTerm unseen,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061873.1491428126000.221352.1491465221804%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 07:53:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11117?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino resolved CAMEL-11117.&#010;--------------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Andrea Cosentino&#010;&#010;&gt; The searchTerm subjectOrBody breaks the searchTerm unseen&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11117&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11117&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-mail&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Lionel Palacin&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When the two options searchTerm.unseen and searchTerm.subjectOrBody are together, the&#010;searchTerm generated looks like that:&#010;&gt; (Unseen AND Subject) OR Body. Which is incorrect, the right searchTerm should be: Unseen&#010;AND (Subject OR Body). &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
188,190,,[jira] [Resolved] (CAMEL-11054) Create SPI for Log EIP to enable other components to intercept/enrich logged messages,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13061873.1491428126000.221352.1491465221804%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 07:53:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11117?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino resolved CAMEL-11117.&#010;--------------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Andrea Cosentino&#010;&#010;&gt; The searchTerm subjectOrBody breaks the searchTerm unseen&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11117&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11117&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-mail&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Lionel Palacin&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When the two options searchTerm.unseen and searchTerm.subjectOrBody are together, the&#010;searchTerm generated looks like that:&#010;&gt; (Unseen AND Subject) OR Body. Which is incorrect, the right searchTerm should be: Unseen&#010;AND (Subject OR Body). &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
189,191,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11054) Create SPI for Log EIP to enable other components to intercept/enrich logged messages,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058529.1490261449000.221908.1491469421918%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 09:03:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11054?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11054.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Create SPI for Log EIP to enable other components to intercept/enrich logged messages&#010;&gt; -------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11054&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11054&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Gary Brown&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Related to the discussion here: https://github.com/apache/camel/pull/1559#issuecomment-288659557&#010;&gt; Provide a SPI to enable components (e.g. camel-opentracing) to be notified when a camel&#010;route uses the log EIP to record information, and potentially enrich/influence the logged&#010;information.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
190,192,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11054) Create SPI for Log EIP to enable other components to intercept/enrich logged messages,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058529.1490261449000.221917.1491469481598%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 09:04:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11054?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15958606#comment-15958606&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11054:&#010;----------------------------------------&#010;&#010;Github user igarashitm closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1585&#010;&#010;&#010;&gt; Create SPI for Log EIP to enable other components to intercept/enrich logged messages&#010;&gt; -------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11054&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11054&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Gary Brown&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Related to the discussion here: https://github.com/apache/camel/pull/1559#issuecomment-288659557&#010;&gt; Provide a SPI to enable components (e.g. camel-opentracing) to be notified when a camel&#010;route uses the log EIP to record information, and potentially enrich/influence the logged&#010;information.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
191,193,,[jira] [Commented] (CAMEL-9477) Camel test examples are not working,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058529.1490261449000.221917.1491469481598%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 09:04:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11054?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15958606#comment-15958606&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11054:&#010;----------------------------------------&#010;&#010;Github user igarashitm closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1585&#010;&#010;&#010;&gt; Create SPI for Log EIP to enable other components to intercept/enrich logged messages&#010;&gt; -------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11054&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11054&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Gary Brown&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Related to the discussion here: https://github.com/apache/camel/pull/1559#issuecomment-288659557&#010;&gt; Provide a SPI to enable components (e.g. camel-opentracing) to be notified when a camel&#010;route uses the log EIP to record information, and potentially enrich/influence the logged&#010;information.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
192,194,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-9477) Camel test examples are not working,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12927040.1451932311000.223253.1491479321602%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 11:48:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-9477?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15958784#comment-15958784&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-9477:&#010;---------------------------------------&#010;&#010;GitHub user onders86 opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1601&#010;&#010;    CAMEL-9477 - add simple lines to indicate removal of CamelSpringJUnit…&#010;&#010;    …4ClassRunnerPlainTest for deprecation and update the link with the right test case&#010;&amp; also fix some document links which are .html to .adoc&#010;    &#010;    As mentioned in the issue, I agree that there seems to be much work required to do on&#010;the documentation to keep the documents, website and code in sync. &#010;    &#010;    This PR only covers what's complained in the issue.&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/onders86/camel CAMEL-9477&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1601.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1601&#010;    &#010;----&#010;commit 7c4be2a7fa9eebd3773562611952c71646495bc2&#010;Author: onders86 &lt;ondersezgin@gmail.com&gt;&#010;Date:   2017-04-06T08:58:58Z&#010;&#010;    CAMEL-9477 - add simple lines to indicate removal of CamelSpringJUnit4ClassRunnerPlainTest&#010;for deprecation and update the link with the right test case &amp; also fix some document&#010;links which are .html to .adoc&#010;&#010;----&#010;&#010;&#010;&gt; Camel test examples are not working&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9477&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9477&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Serge Smertin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; While preparing internal demo of Camel i've tried to go over examples on test page and&#010;most of them are not actually working - http://camel.apache.org/spring-testing.html. I've&#010;seen [~davsclaus] writing about http://www.davsclaus.com/2015/12/my-thoughts-on-buying-professional.html,&#010;so i find this issue as important.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
193,195,onder sezgin (JIRA),  [jira] [Commented] (CAMEL-9477) Camel test examples are not working,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12927040.1451932311000.223270.1491479681650%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 11:54:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-9477?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15958789#comment-15958789&#010;] &#010;&#010;onder sezgin commented on CAMEL-9477:&#010;-------------------------------------&#010;&#010;The PR above only contains the changes what's complained in the issue.&#010;I agree there is much work needed on documentation to keep it sync with code and website.&#010;as the website will already be renewed, i believe keeping and fixing adocs is hopefully sufficient.&#010;and instead of doing a huge work in a single ticket, i think we need to divide and conquer&#010;the completion of documents.&#010;&#010;as a small note, maybe we need to think of a way to extract and document even the examples&#010;from the code. maybe some adocs should be created for examples as well. just a thought....&#010;&#010;&gt; Camel test examples are not working&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9477&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9477&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Serge Smertin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; While preparing internal demo of Camel i've tried to go over examples on test page and&#010;most of them are not actually working - http://camel.apache.org/spring-testing.html. I've&#010;seen [~davsclaus] writing about http://www.davsclaus.com/2015/12/my-thoughts-on-buying-professional.html,&#010;so i find this issue as important.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
194,196,onder sezgin (JIRA),  [jira] [Assigned] (CAMEL-9477) Camel test examples are not working,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12927040.1451932311000.223282.1491479741658%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 11:55:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-9477?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;onder sezgin reassigned CAMEL-9477:&#010;-----------------------------------&#010;&#010;    Assignee: onder sezgin&#010;&#010;&gt; Camel test examples are not working&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9477&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9477&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Serge Smertin&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; While preparing internal demo of Camel i've tried to go over examples on test page and&#010;most of them are not actually working - http://camel.apache.org/spring-testing.html. I've&#010;seen [~davsclaus] writing about http://www.davsclaus.com/2015/12/my-thoughts-on-buying-professional.html,&#010;so i find this issue as important.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
195,197,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-9477) Camel test examples are not working,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12927040.1451932311000.228799.1491510941921%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 20:35:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-9477?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15959707#comment-15959707&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-9477:&#010;---------------------------------------&#010;&#010;Github user onders86 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1601&#010;&#010;&#010;&gt; Camel test examples are not working&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9477&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9477&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Serge Smertin&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; While preparing internal demo of Camel i've tried to go over examples on test page and&#010;most of them are not actually working - http://camel.apache.org/spring-testing.html. I've&#010;seen [~davsclaus] writing about http://www.davsclaus.com/2015/12/my-thoughts-on-buying-professional.html,&#010;so i find this issue as important.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
196,198,onder sezgin (JIRA),  [jira] [Assigned] (CAMEL-9477) Camel test examples are not working,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12927040.1451932311000.245046.1491805661801%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 06:27:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-9477?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;onder sezgin reassigned CAMEL-9477:&#010;-----------------------------------&#010;&#010;    Assignee:     (was: onder sezgin)&#010;&#010;&gt; Camel test examples are not working&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9477&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9477&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Serge Smertin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; While preparing internal demo of Camel i've tried to go over examples on test page and&#010;most of them are not actually working - http://camel.apache.org/spring-testing.html. I've&#010;seen [~davsclaus] writing about http://www.davsclaus.com/2015/12/my-thoughts-on-buying-professional.html,&#010;so i find this issue as important.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
197,199,,[jira] [Created] (CAMEL-11118) PingCheck : validate rest component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12927040.1451932311000.245046.1491805661801%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 06:27:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-9477?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;onder sezgin reassigned CAMEL-9477:&#010;-----------------------------------&#010;&#010;    Assignee:     (was: onder sezgin)&#010;&#010;&gt; Camel test examples are not working&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9477&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9477&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Serge Smertin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; While preparing internal demo of Camel i've tried to go over examples on test page and&#010;most of them are not actually working - http://camel.apache.org/spring-testing.html. I've&#010;seen [~davsclaus] writing about http://www.davsclaus.com/2015/12/my-thoughts-on-buying-professional.html,&#010;so i find this issue as important.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
198,200,Luca Burgazzoli (JIRA),  [jira] [Created] (CAMEL-11118) PingCheck : validate rest component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062078.1491480084000.223316.1491480101605%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 12:01:41 GMT",Luca Burgazzoli created CAMEL-11118:&#010;---------------------------------------&#010;&#010;             Summary: PingCheck : validate rest component&#010;                 Key: CAMEL-11118&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11118&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;            Reporter: Luca Burgazzoli&#010;            Assignee: Luca Burgazzoli&#010;             Fix For: 2.19.0&#010;&#010;&#010;implement PingCheck validation of rest component&#010;Note: it should check also the underlying transport i.e. camel-undertow&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
199,201,Luca Burgazzoli (JIRA),  [jira] [Work started] (CAMEL-11118) PingCheck : validate rest component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062078.1491480084000.234665.1491567881675%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 12:24:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11118?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Work on CAMEL-11118 started by Luca Burgazzoli.&#010;-----------------------------------------------&#010;&gt; PingCheck : validate rest component&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11118&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11118&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; implement PingCheck validation of rest component&#010;&gt; Note: it should check also the underlying transport i.e. camel-undertow&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
200,202,Luca Burgazzoli (JIRA),  [jira] [Commented] (CAMEL-11118) PingCheck : validate rest component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062078.1491480084000.255927.1491912701624%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 12:11:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11118?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15964278#comment-15964278&#010;] &#010;&#010;Luca Burgazzoli commented on CAMEL-11118:&#010;-----------------------------------------&#010;&#010;implemented on:&#010;- camel-core&#010;- camel-undertow&#010;- camel-http4&#010;&#010;&gt; PingCheck : validate rest component&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11118&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11118&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; implement PingCheck validation of rest component&#010;&gt; Note: it should check also the underlying transport i.e. camel-undertow&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
201,203,Luca Burgazzoli (JIRA),  [jira] [Resolved] (CAMEL-11118) PingCheck : validate rest component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062078.1491480084000.255930.1491912761686%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 12:12:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11118?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-11118.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; PingCheck : validate rest component&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11118&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11118&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; implement PingCheck validation of rest component&#010;&gt; Note: it should check also the underlying transport i.e. camel-undertow&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
202,204,,[jira] [Created] (CAMEL-11119) Performance issue in Camel SFTP component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062078.1491480084000.255930.1491912761686%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 12:12:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11118?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-11118.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; PingCheck : validate rest component&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11118&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11118&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; implement PingCheck validation of rest component&#010;&gt; Note: it should check also the underlying transport i.e. camel-undertow&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
203,205,Ayush Dixit (JIRA),  [jira] [Created] (CAMEL-11119) Performance issue in Camel SFTP component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062103.1491485266000.224145.1491485321589%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 13:28:41 GMT","Ayush Dixit created CAMEL-11119:&#010;-----------------------------------&#010;&#010;             Summary: Performance issue in Camel SFTP component&#010;                 Key: CAMEL-11119&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11119&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-sftp&#010;    Affects Versions: 2.15.2&#010;            Reporter: Ayush Dixit&#010;&#010;&#010;Camel SFTP is taking long time to transfer the file to target sftp location.&#010;&#010;The file took around 3 min when target directory contain 40,000 file. I had put around 22&#010;files , So the total time it took to transfer 22 files is around 22  * 3 min = 66 min. The&#010;behaviour is exponential the number of files you increase on target directory. The camel route&#010;will take more time to transfer the file to target directory.&#010; &#010;I have enabled camel logger in DEBUG . I try to debug , what I observed is it is reading that&#010;is taking time. PFB logger.&#010;&#010;                 INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : SX30RPMAJAR1702483756.txt to ICOMS  FTP directory&#010;&#010;                 DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.&#010;190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;&#010; tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&#010;                 DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6  - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file  /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJA&#010;1702483756.txt(no charset)&#010;&#010;&#010;For more details , Refer below .&#010;http://camel.465427.n5.nabble.com/Performance-issue-in-Camel-SFTP-component-td5796893.html&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
204,206,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11119) Performance issue in Camel SFTP component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062103.1491485266000.224287.1491485861570%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 13:37:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11119?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11119.&#010;---------------------------------&#010;    Resolution: Invalid&#010;&#010;&gt; Performance issue in Camel SFTP component&#010;&gt; -----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11119&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11119&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sftp&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;            Reporter: Ayush Dixit&#010;&gt;&#010;&gt; Camel SFTP is taking long time to transfer the file to target sftp location.&#010;&gt; The file took around 3 min when target directory contain 40,000 file. I had put around&#010;22 files , So the total time it took to transfer 22 files is around 22  * 3 min = 66 min.&#010;The behaviour is exponential the number of files you increase on target directory. The camel&#010;route will take more time to transfer the file to target directory.&#010;&gt;  &#010;&gt; I have enabled camel logger in DEBUG . I try to debug , what I observed is it is reading&#010;that is taking time. PFB logger.&#010;&gt;                  INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : SX30RPMAJAR1702483756.txt to ICOMS  FTP directory&#010;&gt;                  DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.&#010;190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;&#010;&gt;  tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt;                  DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6  - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file  /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJA&#010;1702483756.txt(no charset)&#010;&gt; For more details , Refer below .&#010;&gt; http://camel.465427.n5.nabble.com/Performance-issue-in-Camel-SFTP-component-td5796893.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
205,207,,"[jira] [Reopened] (CAMEL-10287) Infinispan RoutePolicy to have one router masterfor having one route being master, and others as slaves",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062103.1491485266000.224287.1491485861570%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 13:37:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11119?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11119.&#010;---------------------------------&#010;    Resolution: Invalid&#010;&#010;&gt; Performance issue in Camel SFTP component&#010;&gt; -----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11119&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11119&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-sftp&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;            Reporter: Ayush Dixit&#010;&gt;&#010;&gt; Camel SFTP is taking long time to transfer the file to target sftp location.&#010;&gt; The file took around 3 min when target directory contain 40,000 file. I had put around&#010;22 files , So the total time it took to transfer 22 files is around 22  * 3 min = 66 min.&#010;The behaviour is exponential the number of files you increase on target directory. The camel&#010;route will take more time to transfer the file to target directory.&#010;&gt;  &#010;&gt; I have enabled camel logger in DEBUG . I try to debug , what I observed is it is reading&#010;that is taking time. PFB logger.&#010;&gt;                  INFO 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;com.sigma.samp.imp.virginmedia.bss.voice.camelroutes.iopRoute.IOPResponseFtpRouteBuilder&gt;&#010;Sending IOP response file : SX30RPMAJAR1702483756.txt to ICOMS  FTP directory&#010;&gt;                  DEBUG 07:47:23 (Camel (cfgMgrCamelContext) thread #6 - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.processor.SendProcessor&gt; &gt;&gt;&gt;&gt; Endpoint[sftp://10.100.150.&#010;190/icoms/1?download=false&amp;maxMessagesPerPoll=10&amp;password=xxxxxx&amp;&#010;&gt;  tempPrefix=Q&amp;username=sigmauser] Exchange[SX30RPMAJAR1702483756.txt]&#010;&gt;                  DEBUG 07:50:40 (Camel (cfgMgrCamelContext) thread #6  - file:///data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1)&#010;org.apache.camel.component.file.GenericFileConverter&gt; Read file  /data/users/slvm02/smp53/domains/vmb/Icoms/iop_responses/1/SX30RPMAJA&#010;1702483756.txt(no charset)&#010;&gt; For more details , Refer below .&#010;&gt; http://camel.465427.n5.nabble.com/Performance-issue-in-Camel-SFTP-component-td5796893.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
206,208,Luca Burgazzoli (JIRA),"  [jira] [Reopened] (CAMEL-10287) Infinispan RoutePolicy to have one router masterfor having one route being master, and others as slaves",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13002700.1473071067000.224991.1491491501998%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 15:11:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10287?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli reopened CAMEL-10287:&#010;-------------------------------------&#010;&#010;&gt; Infinispan RoutePolicy to have one router masterfor having one route being master, and&#010;others as slaves&#010;&gt; -------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10287&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10287&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-infinispan&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
207,209,Luca Burgazzoli (JIRA),"  [jira] [Issue Comment Deleted] (CAMEL-10287) Infinispan RoutePolicy to have one router masterfor having one route being master, and others as slaves",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13002700.1473071067000.224998.1491491502047%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 15:11:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10287?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10287:&#010;------------------------------------&#010;    Comment: was deleted&#010;&#010;(was: Infinispan does not support distributed locks or something we can leverage for a ""leader-election""&#010;policy)&#010;&#010;&gt; Infinispan RoutePolicy to have one router masterfor having one route being master, and&#010;others as slaves&#010;&gt; -------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10287&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10287&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-infinispan&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
208,210,Luca Burgazzoli (JIRA),"  [jira] [Updated] (CAMEL-10287) Infinispan RoutePolicy to have one router masterfor having one route being master, and others as slaves",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13002700.1473071067000.224996.1491491502033%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 15:11:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10287?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10287:&#010;------------------------------------&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Infinispan RoutePolicy to have one router masterfor having one route being master, and&#010;others as slaves&#010;&gt; -------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10287&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10287&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-infinispan&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
209,211,Luca Burgazzoli (JIRA),"  [jira] [Work started] (CAMEL-10287) Infinispan RoutePolicy to have one route being master, and others as slaves",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13002700.1473071067000.225018.1491491561600%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 15:12:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10287?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Work on CAMEL-10287 started by Luca Burgazzoli.&#010;-----------------------------------------------&#010;&gt; Infinispan RoutePolicy to have one route being master, and others as slaves&#010;&gt; ---------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10287&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10287&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-infinispan&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
210,212,Luca Burgazzoli (JIRA),"  [jira] [Updated] (CAMEL-10287) Infinispan RoutePolicy to have one route being master, and others as slaves",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13002700.1473071067000.225017.1491491561592%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 15:12:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10287?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10287:&#010;------------------------------------&#010;    Summary: Infinispan RoutePolicy to have one route being master, and others as slaves &#010;(was: Infinispan RoutePolicy to have one router masterfor having one route being master, and&#010;others as slaves)&#010;&#010;&gt; Infinispan RoutePolicy to have one route being master, and others as slaves&#010;&gt; ---------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10287&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10287&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-infinispan&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
211,213,ASF GitHub Bot (JIRA),"  [jira] [Commented] (CAMEL-10287) Infinispan RoutePolicy to have one route being master, and others as slaves",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13002700.1473071067000.225301.1491493301804%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 15:41:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10287?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15959120#comment-15959120&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10287:&#010;----------------------------------------&#010;&#010;GitHub user lburgazzoli opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1603&#010;&#010;    WIP - CAMEL-10287: Infinispan RoutePolicy to have one route being master, and others as&#010;slaves&#010;&#010;    @tristantarrant may you check if I missed something on infinispan side &#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/lburgazzoli/apache-camel CAMEL-10287&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1603.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1603&#010;    &#010;----&#010;commit 7f0b1ef1dc7c4fa9ee346176ba7049464a361fad&#010;Author: lburgazzoli &lt;lburgazzoli@gmail.com&gt;&#010;Date:   2017-04-05T16:37:21Z&#010;&#010;    CAMEL-10287: Infinispan RoutePolicy to have one route being master, and others as slaves&#010;&#010;----&#010;&#010;&#010;&gt; Infinispan RoutePolicy to have one route being master, and others as slaves&#010;&gt; ---------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10287&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10287&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-infinispan&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
212,214,ASF GitHub Bot (JIRA),"  [jira] [Commented] (CAMEL-10287) Infinispan RoutePolicy to have one route being master, and others as slaves",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13002700.1473071067000.236299.1491579521548%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 15:38:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10287?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960974#comment-15960974&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10287:&#010;----------------------------------------&#010;&#010;Github user lburgazzoli closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1603&#010;&#010;&#010;&gt; Infinispan RoutePolicy to have one route being master, and others as slaves&#010;&gt; ---------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10287&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10287&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-infinispan&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
213,215,Luca Burgazzoli (JIRA),"  [jira] [Resolved] (CAMEL-10287) Infinispan RoutePolicy to have one route being master, and others as slaves",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13002700.1473071067000.236303.1491579581639%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 15:39:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10287?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-10287.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Infinispan RoutePolicy to have one route being master, and others as slaves&#010;&gt; ---------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10287&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10287&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-infinispan&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
214,216,,[jira] [Created] (CAMEL-11120) Camel ZipFile does cannot move file after succesful processing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13002700.1473071067000.236303.1491579581639%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 15:39:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10287?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-10287.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Infinispan RoutePolicy to have one route being master, and others as slaves&#010;&gt; ---------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10287&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10287&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-infinispan&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
215,217,Thomas Leber (JIRA),  [jira] [Created] (CAMEL-11120) Camel ZipFile does cannot move file after succesful processing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062153.1491495743000.225865.1491495761514%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 16:22:41 GMT","Thomas Leber created CAMEL-11120:&#010;------------------------------------&#010;&#010;             Summary: Camel ZipFile does cannot move file after succesful processing&#010;                 Key: CAMEL-11120&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11120&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-zipfile&#010;    Affects Versions: 2.18.3&#010;         Environment: Windows 7 x64&#010;            Reporter: Thomas Leber&#010;&#010;&#010;When creating a route as follows:&#010;{code:xml}&#010;&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#010;&lt;beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#010;xmlns:camel=""http://camel.apache.org/schema/spring""&#010;  xmlns:context=""http://www.springframework.org/schema/context"" xmlns:util=""http://www.springframework.org/schema/util""&#010;  xsi:schemaLocation=""&#010;          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd&#010;          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd&#010;          http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd&#010;          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd""&gt;&#010;&#010;  &lt;bean id=""zipFileDataFormat"" class=""org.apache.camel.dataformat.zipfile.ZipFileDataFormat""&gt;&#010;    &lt;property name=""usingIterator"" value=""true"" /&gt;&#010;  &lt;/bean&gt;&#010;&#010;  &lt;bean id=""zipAggregationStrategy"" class=""org.apache.camel.processor.aggregate.zipfile.ZipAggregationStrategy""&gt;&#010;    &lt;constructor-arg index=""0"" value=""true"" /&gt;&#010;    &lt;constructor-arg index=""1"" value=""true"" /&gt;&#010;  &lt;/bean&gt;&#010;&#010;  &lt;camelContext xmlns=""http://camel.apache.org/schema/spring"" streamCache=""true""&gt;&#010;    &lt;route&gt;&#010;      &lt;from uri=""file:C:/camelTest/in"" /&gt;&#010;      &lt;unmarshal ref=""zipFileDataFormat"" /&gt;&#010;      &lt;split strategyRef=""zipAggregationStrategy"" streaming=""true""&gt;&#010;        &lt;simple&gt;${body}&lt;/simple&gt;&#010;        &lt;log loggingLevel=""INFO"" message=""$simple{header.zipFileName}"" /&gt;&#010;        &lt;to uri=""file:C:/camelTest/xml"" /&gt;&#010;      &lt;/split&gt;&#010;      &lt;log loggingLevel=""INFO"" message=""$simple{file:name} Succesful processed"" /&gt;&#010;    &lt;/route&gt;&#010;  &lt;/camelContext&gt;&#010;&lt;/beans&gt;&#010;{code}&#010;&#010;the renaming of the file fails with &#010;{code}&#010;Renaming file from 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' to 'C:\camelTest\in\.camel\20161201T0030Z_1D_BE00_EQ.zip'&#010;failed: Cannot delete file 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' after copy succeeded&#010;{code}&#010;The file stays in input folder and gets processed over and over again.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
216,218,Thomas Leber (JIRA),  [jira] [Updated] (CAMEL-11120) Camel ZipFile does cannot move file after succesful processing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062153.1491495743000.225875.1491495881671%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 16:24:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11120?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Thomas Leber updated CAMEL-11120:&#010;---------------------------------&#010;    Description: &#010;When creating a route as follows:&#010;{code:xml}&#010;&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#010;&lt;beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#010;xmlns:camel=""http://camel.apache.org/schema/spring""&#010;  xmlns:context=""http://www.springframework.org/schema/context"" xmlns:util=""http://www.springframework.org/schema/util""&#010;  xsi:schemaLocation=""&#010;          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd&#010;          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd&#010;          http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd&#010;          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd""&gt;&#010;&#010;  &lt;bean id=""zipFileDataFormat"" class=""org.apache.camel.dataformat.zipfile.ZipFileDataFormat""&gt;&#010;    &lt;property name=""usingIterator"" value=""true"" /&gt;&#010;  &lt;/bean&gt;&#010;&#010;  &lt;camelContext xmlns=""http://camel.apache.org/schema/spring"" streamCache=""true""&gt;&#010;    &lt;route&gt;&#010;      &lt;from uri=""file:C:/camelTest/in"" /&gt;&#010;      &lt;unmarshal ref=""zipFileDataFormat"" /&gt;&#010;      &lt;split streaming=""true""&gt;&#010;        &lt;simple&gt;${body}&lt;/simple&gt;&#010;        &lt;log loggingLevel=""INFO"" message=""$simple{header.zipFileName}"" /&gt;&#010;        &lt;to uri=""file:C:/camelTest/xml"" /&gt;&#010;      &lt;/split&gt;&#010;      &lt;log loggingLevel=""INFO"" message=""$simple{file:name} Succesful processed"" /&gt;&#010;    &lt;/route&gt;&#010;  &lt;/camelContext&gt;&#010;&lt;/beans&gt;&#010;{code}&#010;&#010;the renaming of the file fails with &#010;{code}&#010;Renaming file from 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' to 'C:\camelTest\in\.camel\20161201T0030Z_1D_BE00_EQ.zip'&#010;failed: Cannot delete file 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' after copy succeeded&#010;{code}&#010;The file stays in input folder and gets processed over and over again.&#010;&#010;  was:&#010;When creating a route as follows:&#010;{code:xml}&#010;&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#010;&lt;beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#010;xmlns:camel=""http://camel.apache.org/schema/spring""&#010;  xmlns:context=""http://www.springframework.org/schema/context"" xmlns:util=""http://www.springframework.org/schema/util""&#010;  xsi:schemaLocation=""&#010;          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd&#010;          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd&#010;          http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd&#010;          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd""&gt;&#010;&#010;  &lt;bean id=""zipFileDataFormat"" class=""org.apache.camel.dataformat.zipfile.ZipFileDataFormat""&gt;&#010;    &lt;property name=""usingIterator"" value=""true"" /&gt;&#010;  &lt;/bean&gt;&#010;&#010;  &lt;bean id=""zipAggregationStrategy"" class=""org.apache.camel.processor.aggregate.zipfile.ZipAggregationStrategy""&gt;&#010;    &lt;constructor-arg index=""0"" value=""true"" /&gt;&#010;    &lt;constructor-arg index=""1"" value=""true"" /&gt;&#010;  &lt;/bean&gt;&#010;&#010;  &lt;camelContext xmlns=""http://camel.apache.org/schema/spring"" streamCache=""true""&gt;&#010;    &lt;route&gt;&#010;      &lt;from uri=""file:C:/camelTest/in"" /&gt;&#010;      &lt;unmarshal ref=""zipFileDataFormat"" /&gt;&#010;      &lt;split strategyRef=""zipAggregationStrategy"" streaming=""true""&gt;&#010;        &lt;simple&gt;${body}&lt;/simple&gt;&#010;        &lt;log loggingLevel=""INFO"" message=""$simple{header.zipFileName}"" /&gt;&#010;        &lt;to uri=""file:C:/camelTest/xml"" /&gt;&#010;      &lt;/split&gt;&#010;      &lt;log loggingLevel=""INFO"" message=""$simple{file:name} Succesful processed"" /&gt;&#010;    &lt;/route&gt;&#010;  &lt;/camelContext&gt;&#010;&lt;/beans&gt;&#010;{code}&#010;&#010;the renaming of the file fails with &#010;{code}&#010;Renaming file from 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' to 'C:\camelTest\in\.camel\20161201T0030Z_1D_BE00_EQ.zip'&#010;failed: Cannot delete file 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' after copy succeeded&#010;{code}&#010;The file stays in input folder and gets processed over and over again.&#010;&#010;&#010;&gt; Camel ZipFile does cannot move file after succesful processing&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11120&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11120&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-zipfile&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Windows 7 x64&#010;&gt;            Reporter: Thomas Leber&#010;&gt;&#010;&gt; When creating a route as follows:&#010;&gt; {code:xml}&#010;&gt; &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#010;xmlns:camel=""http://camel.apache.org/schema/spring""&#010;&gt;   xmlns:context=""http://www.springframework.org/schema/context"" xmlns:util=""http://www.springframework.org/schema/util""&#010;&gt;   xsi:schemaLocation=""&#010;&gt;           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd&#010;&gt;           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd&#010;&gt;           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd&#010;&gt;           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd""&gt;&#010;&gt;   &lt;bean id=""zipFileDataFormat"" class=""org.apache.camel.dataformat.zipfile.ZipFileDataFormat""&gt;&#010;&gt;     &lt;property name=""usingIterator"" value=""true"" /&gt;&#010;&gt;   &lt;/bean&gt;&#010;&gt;   &lt;camelContext xmlns=""http://camel.apache.org/schema/spring"" streamCache=""true""&gt;&#010;&gt;     &lt;route&gt;&#010;&gt;       &lt;from uri=""file:C:/camelTest/in"" /&gt;&#010;&gt;       &lt;unmarshal ref=""zipFileDataFormat"" /&gt;&#010;&gt;       &lt;split streaming=""true""&gt;&#010;&gt;         &lt;simple&gt;${body}&lt;/simple&gt;&#010;&gt;         &lt;log loggingLevel=""INFO"" message=""$simple{header.zipFileName}"" /&gt;&#010;&gt;         &lt;to uri=""file:C:/camelTest/xml"" /&gt;&#010;&gt;       &lt;/split&gt;&#010;&gt;       &lt;log loggingLevel=""INFO"" message=""$simple{file:name} Succesful processed"" /&gt;&#010;&gt;     &lt;/route&gt;&#010;&gt;   &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; {code}&#010;&gt; the renaming of the file fails with &#010;&gt; {code}&#010;&gt; Renaming file from 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' to 'C:\camelTest\in\.camel\20161201T0030Z_1D_BE00_EQ.zip'&#010;failed: Cannot delete file 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' after copy succeeded&#010;&gt; {code}&#010;&gt; The file stays in input folder and gets processed over and over again.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
217,219,Thomas Leber (JIRA),  [jira] [Commented] (CAMEL-11120) Camel ZipFile does cannot move file after succesful processing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062153.1491495743000.225877.1491495941592%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 16:25:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11120?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15959224#comment-15959224&#010;] &#010;&#010;Thomas Leber commented on CAMEL-11120:&#010;--------------------------------------&#010;&#010;Removed the aggregation, fails with or without.&#010;&#010;&gt; Camel ZipFile does cannot move file after succesful processing&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11120&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11120&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-zipfile&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Windows 7 x64&#010;&gt;            Reporter: Thomas Leber&#010;&gt;&#010;&gt; When creating a route as follows:&#010;&gt; {code:xml}&#010;&gt; &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#010;xmlns:camel=""http://camel.apache.org/schema/spring""&#010;&gt;   xmlns:context=""http://www.springframework.org/schema/context"" xmlns:util=""http://www.springframework.org/schema/util""&#010;&gt;   xsi:schemaLocation=""&#010;&gt;           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd&#010;&gt;           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd&#010;&gt;           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd&#010;&gt;           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd""&gt;&#010;&gt;   &lt;bean id=""zipFileDataFormat"" class=""org.apache.camel.dataformat.zipfile.ZipFileDataFormat""&gt;&#010;&gt;     &lt;property name=""usingIterator"" value=""true"" /&gt;&#010;&gt;   &lt;/bean&gt;&#010;&gt;   &lt;camelContext xmlns=""http://camel.apache.org/schema/spring"" streamCache=""true""&gt;&#010;&gt;     &lt;route&gt;&#010;&gt;       &lt;from uri=""file:C:/camelTest/in"" /&gt;&#010;&gt;       &lt;unmarshal ref=""zipFileDataFormat"" /&gt;&#010;&gt;       &lt;split streaming=""true""&gt;&#010;&gt;         &lt;simple&gt;${body}&lt;/simple&gt;&#010;&gt;         &lt;log loggingLevel=""INFO"" message=""$simple{header.zipFileName}"" /&gt;&#010;&gt;         &lt;to uri=""file:C:/camelTest/xml"" /&gt;&#010;&gt;       &lt;/split&gt;&#010;&gt;       &lt;log loggingLevel=""INFO"" message=""$simple{file:name} Succesful processed"" /&gt;&#010;&gt;     &lt;/route&gt;&#010;&gt;   &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; {code}&#010;&gt; the renaming of the file fails with &#010;&gt; {code}&#010;&gt; Renaming file from 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' to 'C:\camelTest\in\.camel\20161201T0030Z_1D_BE00_EQ.zip'&#010;failed: Cannot delete file 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' after copy succeeded&#010;&gt; {code}&#010;&gt; The file stays in input folder and gets processed over and over again.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
218,220,onder sezgin (JIRA),  [jira] [Assigned] (CAMEL-11120) Camel ZipFile does cannot move file after succesful processing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062153.1491495743000.227403.1491502841620%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 18:20:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11120?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;onder sezgin reassigned CAMEL-11120:&#010;------------------------------------&#010;&#010;    Assignee: onder sezgin&#010;&#010;&gt; Camel ZipFile does cannot move file after succesful processing&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11120&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11120&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-zipfile&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Windows 7 x64&#010;&gt;            Reporter: Thomas Leber&#010;&gt;            Assignee: onder sezgin&#010;&gt;&#010;&gt; When creating a route as follows:&#010;&gt; {code:xml}&#010;&gt; &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#010;xmlns:camel=""http://camel.apache.org/schema/spring""&#010;&gt;   xmlns:context=""http://www.springframework.org/schema/context"" xmlns:util=""http://www.springframework.org/schema/util""&#010;&gt;   xsi:schemaLocation=""&#010;&gt;           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd&#010;&gt;           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd&#010;&gt;           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd&#010;&gt;           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd""&gt;&#010;&gt;   &lt;bean id=""zipFileDataFormat"" class=""org.apache.camel.dataformat.zipfile.ZipFileDataFormat""&gt;&#010;&gt;     &lt;property name=""usingIterator"" value=""true"" /&gt;&#010;&gt;   &lt;/bean&gt;&#010;&gt;   &lt;camelContext xmlns=""http://camel.apache.org/schema/spring"" streamCache=""true""&gt;&#010;&gt;     &lt;route&gt;&#010;&gt;       &lt;from uri=""file:C:/camelTest/in"" /&gt;&#010;&gt;       &lt;unmarshal ref=""zipFileDataFormat"" /&gt;&#010;&gt;       &lt;split streaming=""true""&gt;&#010;&gt;         &lt;simple&gt;${body}&lt;/simple&gt;&#010;&gt;         &lt;log loggingLevel=""INFO"" message=""$simple{header.zipFileName}"" /&gt;&#010;&gt;         &lt;to uri=""file:C:/camelTest/xml"" /&gt;&#010;&gt;       &lt;/split&gt;&#010;&gt;       &lt;log loggingLevel=""INFO"" message=""$simple{file:name} Succesful processed"" /&gt;&#010;&gt;     &lt;/route&gt;&#010;&gt;   &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; {code}&#010;&gt; the renaming of the file fails with &#010;&gt; {code}&#010;&gt; Renaming file from 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' to 'C:\camelTest\in\.camel\20161201T0030Z_1D_BE00_EQ.zip'&#010;failed: Cannot delete file 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' after copy succeeded&#010;&gt; {code}&#010;&gt; The file stays in input folder and gets processed over and over again.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
219,221,onder sezgin (JIRA),  [jira] [Commented] (CAMEL-11120) Camel ZipFile does cannot move file after succesful processing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062153.1491495743000.233666.1491555650459%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 09:00:50 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11120?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960518#comment-15960518&#010;] &#010;&#010;onder sezgin commented on CAMEL-11120:&#010;--------------------------------------&#010;&#010;Tested both windows and unix box. It is working.&#010;please see my UT&#010;&#010;https://github.com/onders86/camel/commit/077e5df4f6904e13d76444821737bcc0dafe23c0&#010;&#010;&#010;&#010;&gt; Camel ZipFile does cannot move file after succesful processing&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11120&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11120&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-zipfile&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Windows 7 x64&#010;&gt;            Reporter: Thomas Leber&#010;&gt;            Assignee: onder sezgin&#010;&gt;&#010;&gt; When creating a route as follows:&#010;&gt; {code:xml}&#010;&gt; &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#010;xmlns:camel=""http://camel.apache.org/schema/spring""&#010;&gt;   xmlns:context=""http://www.springframework.org/schema/context"" xmlns:util=""http://www.springframework.org/schema/util""&#010;&gt;   xsi:schemaLocation=""&#010;&gt;           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd&#010;&gt;           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd&#010;&gt;           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd&#010;&gt;           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd""&gt;&#010;&gt;   &lt;bean id=""zipFileDataFormat"" class=""org.apache.camel.dataformat.zipfile.ZipFileDataFormat""&gt;&#010;&gt;     &lt;property name=""usingIterator"" value=""true"" /&gt;&#010;&gt;   &lt;/bean&gt;&#010;&gt;   &lt;camelContext xmlns=""http://camel.apache.org/schema/spring"" streamCache=""true""&gt;&#010;&gt;     &lt;route&gt;&#010;&gt;       &lt;from uri=""file:C:/camelTest/in"" /&gt;&#010;&gt;       &lt;unmarshal ref=""zipFileDataFormat"" /&gt;&#010;&gt;       &lt;split streaming=""true""&gt;&#010;&gt;         &lt;simple&gt;${body}&lt;/simple&gt;&#010;&gt;         &lt;log loggingLevel=""INFO"" message=""$simple{header.zipFileName}"" /&gt;&#010;&gt;         &lt;to uri=""file:C:/camelTest/xml"" /&gt;&#010;&gt;       &lt;/split&gt;&#010;&gt;       &lt;log loggingLevel=""INFO"" message=""$simple{file:name} Succesful processed"" /&gt;&#010;&gt;     &lt;/route&gt;&#010;&gt;   &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; {code}&#010;&gt; the renaming of the file fails with &#010;&gt; {code}&#010;&gt; Renaming file from 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' to 'C:\camelTest\in\.camel\20161201T0030Z_1D_BE00_EQ.zip'&#010;failed: Cannot delete file 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' after copy succeeded&#010;&gt; {code}&#010;&gt; The file stays in input folder and gets processed over and over again.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
220,222,onder sezgin (JIRA),  [jira] [Commented] (CAMEL-11120) Camel ZipFile does cannot move file after succesful processing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062153.1491495743000.233681.1491555702073%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 09:01:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11120?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960519#comment-15960519&#010;] &#010;&#010;onder sezgin commented on CAMEL-11120:&#010;--------------------------------------&#010;&#010;I guess something is wrong with your filesystem. your file may be write-protected.&#010;&#010;&gt; Camel ZipFile does cannot move file after succesful processing&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11120&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11120&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-zipfile&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Windows 7 x64&#010;&gt;            Reporter: Thomas Leber&#010;&gt;            Assignee: onder sezgin&#010;&gt;&#010;&gt; When creating a route as follows:&#010;&gt; {code:xml}&#010;&gt; &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#010;xmlns:camel=""http://camel.apache.org/schema/spring""&#010;&gt;   xmlns:context=""http://www.springframework.org/schema/context"" xmlns:util=""http://www.springframework.org/schema/util""&#010;&gt;   xsi:schemaLocation=""&#010;&gt;           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd&#010;&gt;           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd&#010;&gt;           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd&#010;&gt;           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd""&gt;&#010;&gt;   &lt;bean id=""zipFileDataFormat"" class=""org.apache.camel.dataformat.zipfile.ZipFileDataFormat""&gt;&#010;&gt;     &lt;property name=""usingIterator"" value=""true"" /&gt;&#010;&gt;   &lt;/bean&gt;&#010;&gt;   &lt;camelContext xmlns=""http://camel.apache.org/schema/spring"" streamCache=""true""&gt;&#010;&gt;     &lt;route&gt;&#010;&gt;       &lt;from uri=""file:C:/camelTest/in"" /&gt;&#010;&gt;       &lt;unmarshal ref=""zipFileDataFormat"" /&gt;&#010;&gt;       &lt;split streaming=""true""&gt;&#010;&gt;         &lt;simple&gt;${body}&lt;/simple&gt;&#010;&gt;         &lt;log loggingLevel=""INFO"" message=""$simple{header.zipFileName}"" /&gt;&#010;&gt;         &lt;to uri=""file:C:/camelTest/xml"" /&gt;&#010;&gt;       &lt;/split&gt;&#010;&gt;       &lt;log loggingLevel=""INFO"" message=""$simple{file:name} Succesful processed"" /&gt;&#010;&gt;     &lt;/route&gt;&#010;&gt;   &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; {code}&#010;&gt; the renaming of the file fails with &#010;&gt; {code}&#010;&gt; Renaming file from 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' to 'C:\camelTest\in\.camel\20161201T0030Z_1D_BE00_EQ.zip'&#010;failed: Cannot delete file 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' after copy succeeded&#010;&gt; {code}&#010;&gt; The file stays in input folder and gets processed over and over again.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
221,223,onder sezgin (JIRA),  [jira] [Resolved] (CAMEL-11120) Camel ZipFile does cannot move file after succesful processing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062153.1491495743000.233686.1491555702315%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 09:01:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11120?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;onder sezgin resolved CAMEL-11120.&#010;----------------------------------&#010;    Resolution: Not A Problem&#010;&#010;&gt; Camel ZipFile does cannot move file after succesful processing&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11120&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11120&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-zipfile&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Windows 7 x64&#010;&gt;            Reporter: Thomas Leber&#010;&gt;            Assignee: onder sezgin&#010;&gt;&#010;&gt; When creating a route as follows:&#010;&gt; {code:xml}&#010;&gt; &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#010;xmlns:camel=""http://camel.apache.org/schema/spring""&#010;&gt;   xmlns:context=""http://www.springframework.org/schema/context"" xmlns:util=""http://www.springframework.org/schema/util""&#010;&gt;   xsi:schemaLocation=""&#010;&gt;           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd&#010;&gt;           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd&#010;&gt;           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd&#010;&gt;           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd""&gt;&#010;&gt;   &lt;bean id=""zipFileDataFormat"" class=""org.apache.camel.dataformat.zipfile.ZipFileDataFormat""&gt;&#010;&gt;     &lt;property name=""usingIterator"" value=""true"" /&gt;&#010;&gt;   &lt;/bean&gt;&#010;&gt;   &lt;camelContext xmlns=""http://camel.apache.org/schema/spring"" streamCache=""true""&gt;&#010;&gt;     &lt;route&gt;&#010;&gt;       &lt;from uri=""file:C:/camelTest/in"" /&gt;&#010;&gt;       &lt;unmarshal ref=""zipFileDataFormat"" /&gt;&#010;&gt;       &lt;split streaming=""true""&gt;&#010;&gt;         &lt;simple&gt;${body}&lt;/simple&gt;&#010;&gt;         &lt;log loggingLevel=""INFO"" message=""$simple{header.zipFileName}"" /&gt;&#010;&gt;         &lt;to uri=""file:C:/camelTest/xml"" /&gt;&#010;&gt;       &lt;/split&gt;&#010;&gt;       &lt;log loggingLevel=""INFO"" message=""$simple{file:name} Succesful processed"" /&gt;&#010;&gt;     &lt;/route&gt;&#010;&gt;   &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; {code}&#010;&gt; the renaming of the file fails with &#010;&gt; {code}&#010;&gt; Renaming file from 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' to 'C:\camelTest\in\.camel\20161201T0030Z_1D_BE00_EQ.zip'&#010;failed: Cannot delete file 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' after copy succeeded&#010;&gt; {code}&#010;&gt; The file stays in input folder and gets processed over and over again.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
222,224,onder sezgin (JIRA),  [jira] [Updated] (CAMEL-11120) Camel ZipFile does cannot move file after succesful processing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062153.1491495743000.234363.1491564041583%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:20:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11120?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;onder sezgin updated CAMEL-11120:&#010;---------------------------------&#010;    Priority: Minor  (was: Major)&#010;&#010;&gt; Camel ZipFile does cannot move file after succesful processing&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11120&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11120&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-zipfile&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Windows 7 x64&#010;&gt;            Reporter: Thomas Leber&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; When creating a route as follows:&#010;&gt; {code:xml}&#010;&gt; &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#010;xmlns:camel=""http://camel.apache.org/schema/spring""&#010;&gt;   xmlns:context=""http://www.springframework.org/schema/context"" xmlns:util=""http://www.springframework.org/schema/util""&#010;&gt;   xsi:schemaLocation=""&#010;&gt;           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd&#010;&gt;           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd&#010;&gt;           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd&#010;&gt;           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd""&gt;&#010;&gt;   &lt;bean id=""zipFileDataFormat"" class=""org.apache.camel.dataformat.zipfile.ZipFileDataFormat""&gt;&#010;&gt;     &lt;property name=""usingIterator"" value=""true"" /&gt;&#010;&gt;   &lt;/bean&gt;&#010;&gt;   &lt;camelContext xmlns=""http://camel.apache.org/schema/spring"" streamCache=""true""&gt;&#010;&gt;     &lt;route&gt;&#010;&gt;       &lt;from uri=""file:C:/camelTest/in"" /&gt;&#010;&gt;       &lt;unmarshal ref=""zipFileDataFormat"" /&gt;&#010;&gt;       &lt;split streaming=""true""&gt;&#010;&gt;         &lt;simple&gt;${body}&lt;/simple&gt;&#010;&gt;         &lt;log loggingLevel=""INFO"" message=""$simple{header.zipFileName}"" /&gt;&#010;&gt;         &lt;to uri=""file:C:/camelTest/xml"" /&gt;&#010;&gt;       &lt;/split&gt;&#010;&gt;       &lt;log loggingLevel=""INFO"" message=""$simple{file:name} Succesful processed"" /&gt;&#010;&gt;     &lt;/route&gt;&#010;&gt;   &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; {code}&#010;&gt; the renaming of the file fails with &#010;&gt; {code}&#010;&gt; Renaming file from 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' to 'C:\camelTest\in\.camel\20161201T0030Z_1D_BE00_EQ.zip'&#010;failed: Cannot delete file 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' after copy succeeded&#010;&gt; {code}&#010;&gt; The file stays in input folder and gets processed over and over again.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
223,225,onder sezgin (JIRA),  [jira] [Comment Edited] (CAMEL-11120) Camel ZipFile does cannot move file after succesful processing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062153.1491495743000.234365.1491564101564%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:21:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11120?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960518#comment-15960518&#010;] &#010;&#010;onder sezgin edited comment on CAMEL-11120 at 4/7/17 11:20 AM:&#010;---------------------------------------------------------------&#010;&#010;Tested both windows and unix box. It is working.&#010;please see my UT&#010;&#010;https://github.com/onders86/camel/commit/a67b49c9653c4f49f7acf4c0a88a54408e870a6b&#010;&#010;&#010;&#010;&#010;was (Author: onders):&#010;Tested both windows and unix box. It is working.&#010;please see my UT&#010;&#010;https://github.com/onders86/camel/commit/077e5df4f6904e13d76444821737bcc0dafe23c0&#010;&#010;&#010;&#010;&gt; Camel ZipFile does cannot move file after succesful processing&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11120&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11120&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-zipfile&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Windows 7 x64&#010;&gt;            Reporter: Thomas Leber&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; When creating a route as follows:&#010;&gt; {code:xml}&#010;&gt; &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#010;xmlns:camel=""http://camel.apache.org/schema/spring""&#010;&gt;   xmlns:context=""http://www.springframework.org/schema/context"" xmlns:util=""http://www.springframework.org/schema/util""&#010;&gt;   xsi:schemaLocation=""&#010;&gt;           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd&#010;&gt;           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd&#010;&gt;           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd&#010;&gt;           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd""&gt;&#010;&gt;   &lt;bean id=""zipFileDataFormat"" class=""org.apache.camel.dataformat.zipfile.ZipFileDataFormat""&gt;&#010;&gt;     &lt;property name=""usingIterator"" value=""true"" /&gt;&#010;&gt;   &lt;/bean&gt;&#010;&gt;   &lt;camelContext xmlns=""http://camel.apache.org/schema/spring"" streamCache=""true""&gt;&#010;&gt;     &lt;route&gt;&#010;&gt;       &lt;from uri=""file:C:/camelTest/in"" /&gt;&#010;&gt;       &lt;unmarshal ref=""zipFileDataFormat"" /&gt;&#010;&gt;       &lt;split streaming=""true""&gt;&#010;&gt;         &lt;simple&gt;${body}&lt;/simple&gt;&#010;&gt;         &lt;log loggingLevel=""INFO"" message=""$simple{header.zipFileName}"" /&gt;&#010;&gt;         &lt;to uri=""file:C:/camelTest/xml"" /&gt;&#010;&gt;       &lt;/split&gt;&#010;&gt;       &lt;log loggingLevel=""INFO"" message=""$simple{file:name} Succesful processed"" /&gt;&#010;&gt;     &lt;/route&gt;&#010;&gt;   &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; {code}&#010;&gt; the renaming of the file fails with &#010;&gt; {code}&#010;&gt; Renaming file from 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' to 'C:\camelTest\in\.camel\20161201T0030Z_1D_BE00_EQ.zip'&#010;failed: Cannot delete file 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' after copy succeeded&#010;&gt; {code}&#010;&gt; The file stays in input folder and gets processed over and over again.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
224,226,Thomas Leber (JIRA),  [jira] [Commented] (CAMEL-11120) Camel ZipFile does cannot move file after succesful processing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062153.1491495743000.245213.1491808361602%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 07:12:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11120?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15962520#comment-15962520&#010;] &#010;&#010;Thomas Leber commented on CAMEL-11120:&#010;--------------------------------------&#010;&#010;All other files work, also if i just move ZIP files from A to B, everything works fine...&#010;&#010;&gt; Camel ZipFile does cannot move file after succesful processing&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11120&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11120&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-zipfile&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Windows 7 x64&#010;&gt;            Reporter: Thomas Leber&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; When creating a route as follows:&#010;&gt; {code:xml}&#010;&gt; &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#010;xmlns:camel=""http://camel.apache.org/schema/spring""&#010;&gt;   xmlns:context=""http://www.springframework.org/schema/context"" xmlns:util=""http://www.springframework.org/schema/util""&#010;&gt;   xsi:schemaLocation=""&#010;&gt;           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd&#010;&gt;           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd&#010;&gt;           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd&#010;&gt;           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd""&gt;&#010;&gt;   &lt;bean id=""zipFileDataFormat"" class=""org.apache.camel.dataformat.zipfile.ZipFileDataFormat""&gt;&#010;&gt;     &lt;property name=""usingIterator"" value=""true"" /&gt;&#010;&gt;   &lt;/bean&gt;&#010;&gt;   &lt;camelContext xmlns=""http://camel.apache.org/schema/spring"" streamCache=""true""&gt;&#010;&gt;     &lt;route&gt;&#010;&gt;       &lt;from uri=""file:C:/camelTest/in"" /&gt;&#010;&gt;       &lt;unmarshal ref=""zipFileDataFormat"" /&gt;&#010;&gt;       &lt;split streaming=""true""&gt;&#010;&gt;         &lt;simple&gt;${body}&lt;/simple&gt;&#010;&gt;         &lt;log loggingLevel=""INFO"" message=""$simple{header.zipFileName}"" /&gt;&#010;&gt;         &lt;to uri=""file:C:/camelTest/xml"" /&gt;&#010;&gt;       &lt;/split&gt;&#010;&gt;       &lt;log loggingLevel=""INFO"" message=""$simple{file:name} Succesful processed"" /&gt;&#010;&gt;     &lt;/route&gt;&#010;&gt;   &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; {code}&#010;&gt; the renaming of the file fails with &#010;&gt; {code}&#010;&gt; Renaming file from 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' to 'C:\camelTest\in\.camel\20161201T0030Z_1D_BE00_EQ.zip'&#010;failed: Cannot delete file 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' after copy succeeded&#010;&gt; {code}&#010;&gt; The file stays in input folder and gets processed over and over again.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
225,227,,[jira] [Assigned] (CAMEL-11065) Cannot parse CSV record starting with separator character,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062153.1491495743000.245213.1491808361602%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 07:12:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11120?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15962520#comment-15962520&#010;] &#010;&#010;Thomas Leber commented on CAMEL-11120:&#010;--------------------------------------&#010;&#010;All other files work, also if i just move ZIP files from A to B, everything works fine...&#010;&#010;&gt; Camel ZipFile does cannot move file after succesful processing&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11120&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11120&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-zipfile&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Windows 7 x64&#010;&gt;            Reporter: Thomas Leber&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; When creating a route as follows:&#010;&gt; {code:xml}&#010;&gt; &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#010;xmlns:camel=""http://camel.apache.org/schema/spring""&#010;&gt;   xmlns:context=""http://www.springframework.org/schema/context"" xmlns:util=""http://www.springframework.org/schema/util""&#010;&gt;   xsi:schemaLocation=""&#010;&gt;           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd&#010;&gt;           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd&#010;&gt;           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd&#010;&gt;           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd""&gt;&#010;&gt;   &lt;bean id=""zipFileDataFormat"" class=""org.apache.camel.dataformat.zipfile.ZipFileDataFormat""&gt;&#010;&gt;     &lt;property name=""usingIterator"" value=""true"" /&gt;&#010;&gt;   &lt;/bean&gt;&#010;&gt;   &lt;camelContext xmlns=""http://camel.apache.org/schema/spring"" streamCache=""true""&gt;&#010;&gt;     &lt;route&gt;&#010;&gt;       &lt;from uri=""file:C:/camelTest/in"" /&gt;&#010;&gt;       &lt;unmarshal ref=""zipFileDataFormat"" /&gt;&#010;&gt;       &lt;split streaming=""true""&gt;&#010;&gt;         &lt;simple&gt;${body}&lt;/simple&gt;&#010;&gt;         &lt;log loggingLevel=""INFO"" message=""$simple{header.zipFileName}"" /&gt;&#010;&gt;         &lt;to uri=""file:C:/camelTest/xml"" /&gt;&#010;&gt;       &lt;/split&gt;&#010;&gt;       &lt;log loggingLevel=""INFO"" message=""$simple{file:name} Succesful processed"" /&gt;&#010;&gt;     &lt;/route&gt;&#010;&gt;   &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; {code}&#010;&gt; the renaming of the file fails with &#010;&gt; {code}&#010;&gt; Renaming file from 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' to 'C:\camelTest\in\.camel\20161201T0030Z_1D_BE00_EQ.zip'&#010;failed: Cannot delete file 'C:\camelTest\in\20161201T0030Z_1D_BE00_EQ.zip' after copy succeeded&#010;&gt; {code}&#010;&gt; The file stays in input folder and gets processed over and over again.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
226,228,onder sezgin (JIRA),  [jira] [Assigned] (CAMEL-11065) Cannot parse CSV record starting with separator character,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058945.1490373411000.227421.1491502961755%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 18:22:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11065?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;onder sezgin reassigned CAMEL-11065:&#010;------------------------------------&#010;&#010;    Assignee: onder sezgin&#010;&#010;&gt; Cannot parse CSV record starting with separator character&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11065&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11065&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-bindy&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Tomáš Livora&#010;&gt;            Assignee: onder sezgin&#010;&gt;&#010;&gt; Camel Bindy is not able to parse a CSV file where one value starts with a separator character.&#010;Example of such a record:&#010;&gt; {code}&#010;&gt; 'text1',',text2',3&#010;&gt; {code}&#010;&gt; And the Java class used:&#010;&gt; {code:title=Bar.java|borderStyle=solid}&#010;&gt; @CsvRecord(separator = "","", quote = ""'"")&#010;&gt; public class Record {&#010;&gt;     @DataField(pos = 1)&#010;&gt;     private String text1;&#010;&gt;     @DataField(pos = 2)&#010;&gt;     private String text2;&#010;&gt;     @DataField(pos = 3, pattern = ""########.##"")&#010;&gt;     private BigDecimal number;&#010;&gt; }&#010;&gt; {code}&#010;&gt; You will get an exception like this:&#010;&gt; {code}&#010;&gt; java.lang.IllegalArgumentException: Parsing error detected for field defined at the position:&#010;3, line: 1&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.BindyCsvFactory.bind(BindyCsvFactory.java:213)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.csv.BindyCsvDataFormat.unmarshal(BindyCsvDataFormat.java:173)&#010;&gt; &#009;at org.apache.camel.processor.UnmarshalProcessor.process(UnmarshalProcessor.java:69)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:62)&#010;&gt; &#009;at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:681)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:609)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.process(MulticastProcessor.java:238)&#010;&gt; &#009;at org.apache.camel.processor.Splitter.process(Splitter.java:108)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.processExchange(GenericFileConsumer.java:460)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.processBatch(GenericFileConsumer.java:227)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:191)&#010;&gt; &#009;at org.apache.camel.impl.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:175)&#010;&gt; &#009;at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:102)&#010;&gt; &#009;at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#010;&gt; &#009;at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)&#010;&gt; &#009;at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)&#010;&gt; &#009;at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Caused by: java.lang.NumberFormatException: null&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:494)&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:383)&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:806)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.format.factories.BigDecimalPatternFormatFactory$BigDecimalPatternFormat.parse(BigDecimalPatternFormatFactory.java:66)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.format.factories.BigDecimalPatternFormatFactory$BigDecimalPatternFormat.parse(BigDecimalPatternFormatFactory.java:49)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.BindyCsvFactory.bind(BindyCsvFactory.java:209)&#010;&gt; &#009;... 37 common frames omitted&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
227,229,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11065) Cannot parse CSV record starting with separator character,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058945.1490373411000.227866.1491505361753%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 19:02:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11065?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15959544#comment-15959544&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11065:&#010;----------------------------------------&#010;&#010;GitHub user snurmine opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1605&#010;&#010;    CAMEL-11065 Cannot parse CSV record starting with separator character&#010;&#010;    Changed Camel Bindy BindyCsvDataFormat#unquoteTokens function.&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/snurmine/camel CAMEL-11065&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1605.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1605&#010;    &#010;----&#010;commit 6fd52ca300ec041e481773d675828521ce3d21a0&#010;Author: Sami Nurminen &lt;snurmine@gmail.com&gt;&#010;Date:   2017-04-06T18:57:57Z&#010;&#010;    CAMEL-11065 Cannot parse CSV record starting with separator character&#010;    Changed Camel Bindy BindyCsvDataFormat#unquoteTokens function.&#010;&#010;----&#010;&#010;&#010;&gt; Cannot parse CSV record starting with separator character&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11065&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11065&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-bindy&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Tomáš Livora&#010;&gt;            Assignee: onder sezgin&#010;&gt;&#010;&gt; Camel Bindy is not able to parse a CSV file where one value starts with a separator character.&#010;Example of such a record:&#010;&gt; {code}&#010;&gt; 'text1',',text2',3&#010;&gt; {code}&#010;&gt; And the Java class used:&#010;&gt; {code:title=Bar.java|borderStyle=solid}&#010;&gt; @CsvRecord(separator = "","", quote = ""'"")&#010;&gt; public class Record {&#010;&gt;     @DataField(pos = 1)&#010;&gt;     private String text1;&#010;&gt;     @DataField(pos = 2)&#010;&gt;     private String text2;&#010;&gt;     @DataField(pos = 3, pattern = ""########.##"")&#010;&gt;     private BigDecimal number;&#010;&gt; }&#010;&gt; {code}&#010;&gt; You will get an exception like this:&#010;&gt; {code}&#010;&gt; java.lang.IllegalArgumentException: Parsing error detected for field defined at the position:&#010;3, line: 1&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.BindyCsvFactory.bind(BindyCsvFactory.java:213)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.csv.BindyCsvDataFormat.unmarshal(BindyCsvDataFormat.java:173)&#010;&gt; &#009;at org.apache.camel.processor.UnmarshalProcessor.process(UnmarshalProcessor.java:69)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:62)&#010;&gt; &#009;at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:681)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:609)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.process(MulticastProcessor.java:238)&#010;&gt; &#009;at org.apache.camel.processor.Splitter.process(Splitter.java:108)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.processExchange(GenericFileConsumer.java:460)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.processBatch(GenericFileConsumer.java:227)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:191)&#010;&gt; &#009;at org.apache.camel.impl.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:175)&#010;&gt; &#009;at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:102)&#010;&gt; &#009;at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#010;&gt; &#009;at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)&#010;&gt; &#009;at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)&#010;&gt; &#009;at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Caused by: java.lang.NumberFormatException: null&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:494)&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:383)&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:806)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.format.factories.BigDecimalPatternFormatFactory$BigDecimalPatternFormat.parse(BigDecimalPatternFormatFactory.java:66)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.format.factories.BigDecimalPatternFormatFactory$BigDecimalPatternFormat.parse(BigDecimalPatternFormatFactory.java:49)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.BindyCsvFactory.bind(BindyCsvFactory.java:209)&#010;&gt; &#009;... 37 common frames omitted&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
228,230,onder sezgin (JIRA),  [jira] [Assigned] (CAMEL-11065) Cannot parse CSV record starting with separator character,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058945.1490373411000.228057.1491506921816%40Atlassian.JIRA%3E,issues,"Thu, 06 Apr 2017 19:28:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11065?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;onder sezgin reassigned CAMEL-11065:&#010;------------------------------------&#010;&#010;    Assignee:     (was: onder sezgin)&#010;&#010;&gt; Cannot parse CSV record starting with separator character&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11065&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11065&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-bindy&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Tomáš Livora&#010;&gt;&#010;&gt; Camel Bindy is not able to parse a CSV file where one value starts with a separator character.&#010;Example of such a record:&#010;&gt; {code}&#010;&gt; 'text1',',text2',3&#010;&gt; {code}&#010;&gt; And the Java class used:&#010;&gt; {code:title=Bar.java|borderStyle=solid}&#010;&gt; @CsvRecord(separator = "","", quote = ""'"")&#010;&gt; public class Record {&#010;&gt;     @DataField(pos = 1)&#010;&gt;     private String text1;&#010;&gt;     @DataField(pos = 2)&#010;&gt;     private String text2;&#010;&gt;     @DataField(pos = 3, pattern = ""########.##"")&#010;&gt;     private BigDecimal number;&#010;&gt; }&#010;&gt; {code}&#010;&gt; You will get an exception like this:&#010;&gt; {code}&#010;&gt; java.lang.IllegalArgumentException: Parsing error detected for field defined at the position:&#010;3, line: 1&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.BindyCsvFactory.bind(BindyCsvFactory.java:213)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.csv.BindyCsvDataFormat.unmarshal(BindyCsvDataFormat.java:173)&#010;&gt; &#009;at org.apache.camel.processor.UnmarshalProcessor.process(UnmarshalProcessor.java:69)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:62)&#010;&gt; &#009;at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:681)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:609)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.process(MulticastProcessor.java:238)&#010;&gt; &#009;at org.apache.camel.processor.Splitter.process(Splitter.java:108)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.processExchange(GenericFileConsumer.java:460)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.processBatch(GenericFileConsumer.java:227)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:191)&#010;&gt; &#009;at org.apache.camel.impl.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:175)&#010;&gt; &#009;at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:102)&#010;&gt; &#009;at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#010;&gt; &#009;at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)&#010;&gt; &#009;at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)&#010;&gt; &#009;at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Caused by: java.lang.NumberFormatException: null&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:494)&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:383)&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:806)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.format.factories.BigDecimalPatternFormatFactory$BigDecimalPatternFormat.parse(BigDecimalPatternFormatFactory.java:66)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.format.factories.BigDecimalPatternFormatFactory$BigDecimalPatternFormat.parse(BigDecimalPatternFormatFactory.java:49)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.BindyCsvFactory.bind(BindyCsvFactory.java:209)&#010;&gt; &#009;... 37 common frames omitted&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
229,231,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11065) Cannot parse CSV record starting with separator character,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058945.1490373411000.242608.1491724721963%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 07:58:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11065?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11065.&#010;---------------------------------&#010;       Resolution: Fixed&#010;         Assignee: Claus Ibsen&#010;    Fix Version/s: 2.19.0&#010;                   2.18.4&#010;&#010;Thanks for reporting and the PR&#010;&#010;&gt; Cannot parse CSV record starting with separator character&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11065&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11065&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-bindy&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Tomáš Livora&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Camel Bindy is not able to parse a CSV file where one value starts with a separator character.&#010;Example of such a record:&#010;&gt; {code}&#010;&gt; 'text1',',text2',3&#010;&gt; {code}&#010;&gt; And the Java class used:&#010;&gt; {code:title=Bar.java|borderStyle=solid}&#010;&gt; @CsvRecord(separator = "","", quote = ""'"")&#010;&gt; public class Record {&#010;&gt;     @DataField(pos = 1)&#010;&gt;     private String text1;&#010;&gt;     @DataField(pos = 2)&#010;&gt;     private String text2;&#010;&gt;     @DataField(pos = 3, pattern = ""########.##"")&#010;&gt;     private BigDecimal number;&#010;&gt; }&#010;&gt; {code}&#010;&gt; You will get an exception like this:&#010;&gt; {code}&#010;&gt; java.lang.IllegalArgumentException: Parsing error detected for field defined at the position:&#010;3, line: 1&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.BindyCsvFactory.bind(BindyCsvFactory.java:213)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.csv.BindyCsvDataFormat.unmarshal(BindyCsvDataFormat.java:173)&#010;&gt; &#009;at org.apache.camel.processor.UnmarshalProcessor.process(UnmarshalProcessor.java:69)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:62)&#010;&gt; &#009;at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:681)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:609)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.process(MulticastProcessor.java:238)&#010;&gt; &#009;at org.apache.camel.processor.Splitter.process(Splitter.java:108)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.processExchange(GenericFileConsumer.java:460)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.processBatch(GenericFileConsumer.java:227)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:191)&#010;&gt; &#009;at org.apache.camel.impl.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:175)&#010;&gt; &#009;at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:102)&#010;&gt; &#009;at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#010;&gt; &#009;at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)&#010;&gt; &#009;at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)&#010;&gt; &#009;at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Caused by: java.lang.NumberFormatException: null&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:494)&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:383)&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:806)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.format.factories.BigDecimalPatternFormatFactory$BigDecimalPatternFormat.parse(BigDecimalPatternFormatFactory.java:66)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.format.factories.BigDecimalPatternFormatFactory$BigDecimalPatternFormat.parse(BigDecimalPatternFormatFactory.java:49)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.BindyCsvFactory.bind(BindyCsvFactory.java:209)&#010;&gt; &#009;... 37 common frames omitted&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
230,232,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11065) Cannot parse CSV record starting with separator character,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058945.1490373411000.242609.1491724721971%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 07:58:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11065?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15962064#comment-15962064&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11065:&#010;----------------------------------------&#010;&#010;Github user asfgit closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1605&#010;&#010;&#010;&gt; Cannot parse CSV record starting with separator character&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11065&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11065&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-bindy&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Tomáš Livora&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Camel Bindy is not able to parse a CSV file where one value starts with a separator character.&#010;Example of such a record:&#010;&gt; {code}&#010;&gt; 'text1',',text2',3&#010;&gt; {code}&#010;&gt; And the Java class used:&#010;&gt; {code:title=Bar.java|borderStyle=solid}&#010;&gt; @CsvRecord(separator = "","", quote = ""'"")&#010;&gt; public class Record {&#010;&gt;     @DataField(pos = 1)&#010;&gt;     private String text1;&#010;&gt;     @DataField(pos = 2)&#010;&gt;     private String text2;&#010;&gt;     @DataField(pos = 3, pattern = ""########.##"")&#010;&gt;     private BigDecimal number;&#010;&gt; }&#010;&gt; {code}&#010;&gt; You will get an exception like this:&#010;&gt; {code}&#010;&gt; java.lang.IllegalArgumentException: Parsing error detected for field defined at the position:&#010;3, line: 1&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.BindyCsvFactory.bind(BindyCsvFactory.java:213)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.csv.BindyCsvDataFormat.unmarshal(BindyCsvDataFormat.java:173)&#010;&gt; &#009;at org.apache.camel.processor.UnmarshalProcessor.process(UnmarshalProcessor.java:69)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:62)&#010;&gt; &#009;at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:681)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:609)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.process(MulticastProcessor.java:238)&#010;&gt; &#009;at org.apache.camel.processor.Splitter.process(Splitter.java:108)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.processExchange(GenericFileConsumer.java:460)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.processBatch(GenericFileConsumer.java:227)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:191)&#010;&gt; &#009;at org.apache.camel.impl.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:175)&#010;&gt; &#009;at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:102)&#010;&gt; &#009;at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#010;&gt; &#009;at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)&#010;&gt; &#009;at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)&#010;&gt; &#009;at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Caused by: java.lang.NumberFormatException: null&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:494)&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:383)&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:806)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.format.factories.BigDecimalPatternFormatFactory$BigDecimalPatternFormat.parse(BigDecimalPatternFormatFactory.java:66)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.format.factories.BigDecimalPatternFormatFactory$BigDecimalPatternFormat.parse(BigDecimalPatternFormatFactory.java:49)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.BindyCsvFactory.bind(BindyCsvFactory.java:209)&#010;&gt; &#009;... 37 common frames omitted&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
231,233,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11065) Cannot parse CSV record starting with separator character,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058945.1490373411000.242645.1491726461799%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 08:27:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11065?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11065.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;Thanks the PR has been merged&#010;&#010;&gt; Cannot parse CSV record starting with separator character&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11065&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11065&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-bindy&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Tomáš Livora&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Camel Bindy is not able to parse a CSV file where one value starts with a separator character.&#010;Example of such a record:&#010;&gt; {code}&#010;&gt; 'text1',',text2',3&#010;&gt; {code}&#010;&gt; And the Java class used:&#010;&gt; {code:title=Bar.java|borderStyle=solid}&#010;&gt; @CsvRecord(separator = "","", quote = ""'"")&#010;&gt; public class Record {&#010;&gt;     @DataField(pos = 1)&#010;&gt;     private String text1;&#010;&gt;     @DataField(pos = 2)&#010;&gt;     private String text2;&#010;&gt;     @DataField(pos = 3, pattern = ""########.##"")&#010;&gt;     private BigDecimal number;&#010;&gt; }&#010;&gt; {code}&#010;&gt; You will get an exception like this:&#010;&gt; {code}&#010;&gt; java.lang.IllegalArgumentException: Parsing error detected for field defined at the position:&#010;3, line: 1&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.BindyCsvFactory.bind(BindyCsvFactory.java:213)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.csv.BindyCsvDataFormat.unmarshal(BindyCsvDataFormat.java:173)&#010;&gt; &#009;at org.apache.camel.processor.UnmarshalProcessor.process(UnmarshalProcessor.java:69)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:62)&#010;&gt; &#009;at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:681)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:609)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.process(MulticastProcessor.java:238)&#010;&gt; &#009;at org.apache.camel.processor.Splitter.process(Splitter.java:108)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.processExchange(GenericFileConsumer.java:460)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.processBatch(GenericFileConsumer.java:227)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:191)&#010;&gt; &#009;at org.apache.camel.impl.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:175)&#010;&gt; &#009;at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:102)&#010;&gt; &#009;at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#010;&gt; &#009;at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)&#010;&gt; &#009;at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)&#010;&gt; &#009;at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Caused by: java.lang.NumberFormatException: null&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:494)&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:383)&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:806)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.format.factories.BigDecimalPatternFormatFactory$BigDecimalPatternFormat.parse(BigDecimalPatternFormatFactory.java:66)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.format.factories.BigDecimalPatternFormatFactory$BigDecimalPatternFormat.parse(BigDecimalPatternFormatFactory.java:49)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.BindyCsvFactory.bind(BindyCsvFactory.java:209)&#010;&gt; &#009;... 37 common frames omitted&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
232,234,Claus Ibsen (JIRA),  [jira] [Reopened] (CAMEL-11065) Cannot parse CSV record starting with separator character,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058945.1490373411000.242642.1491726461734%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 08:27:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11065?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reopened CAMEL-11065:&#010;---------------------------------&#010;&#010;&gt; Cannot parse CSV record starting with separator character&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11065&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11065&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-bindy&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Tomáš Livora&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Camel Bindy is not able to parse a CSV file where one value starts with a separator character.&#010;Example of such a record:&#010;&gt; {code}&#010;&gt; 'text1',',text2',3&#010;&gt; {code}&#010;&gt; And the Java class used:&#010;&gt; {code:title=Bar.java|borderStyle=solid}&#010;&gt; @CsvRecord(separator = "","", quote = ""'"")&#010;&gt; public class Record {&#010;&gt;     @DataField(pos = 1)&#010;&gt;     private String text1;&#010;&gt;     @DataField(pos = 2)&#010;&gt;     private String text2;&#010;&gt;     @DataField(pos = 3, pattern = ""########.##"")&#010;&gt;     private BigDecimal number;&#010;&gt; }&#010;&gt; {code}&#010;&gt; You will get an exception like this:&#010;&gt; {code}&#010;&gt; java.lang.IllegalArgumentException: Parsing error detected for field defined at the position:&#010;3, line: 1&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.BindyCsvFactory.bind(BindyCsvFactory.java:213)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.csv.BindyCsvDataFormat.unmarshal(BindyCsvDataFormat.java:173)&#010;&gt; &#009;at org.apache.camel.processor.UnmarshalProcessor.process(UnmarshalProcessor.java:69)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:62)&#010;&gt; &#009;at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:681)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:609)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.process(MulticastProcessor.java:238)&#010;&gt; &#009;at org.apache.camel.processor.Splitter.process(Splitter.java:108)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.processExchange(GenericFileConsumer.java:460)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.processBatch(GenericFileConsumer.java:227)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:191)&#010;&gt; &#009;at org.apache.camel.impl.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:175)&#010;&gt; &#009;at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:102)&#010;&gt; &#009;at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#010;&gt; &#009;at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)&#010;&gt; &#009;at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)&#010;&gt; &#009;at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Caused by: java.lang.NumberFormatException: null&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:494)&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:383)&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:806)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.format.factories.BigDecimalPatternFormatFactory$BigDecimalPatternFormat.parse(BigDecimalPatternFormatFactory.java:66)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.format.factories.BigDecimalPatternFormatFactory$BigDecimalPatternFormat.parse(BigDecimalPatternFormatFactory.java:49)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.BindyCsvFactory.bind(BindyCsvFactory.java:209)&#010;&gt; &#009;... 37 common frames omitted&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
233,235,,[jira] [Resolved] (CAMEL-11032) Component docs - Break long names so docs look better,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058945.1490373411000.242642.1491726461734%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 08:27:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11065?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reopened CAMEL-11065:&#010;---------------------------------&#010;&#010;&gt; Cannot parse CSV record starting with separator character&#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11065&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11065&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-bindy&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Tomáš Livora&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Camel Bindy is not able to parse a CSV file where one value starts with a separator character.&#010;Example of such a record:&#010;&gt; {code}&#010;&gt; 'text1',',text2',3&#010;&gt; {code}&#010;&gt; And the Java class used:&#010;&gt; {code:title=Bar.java|borderStyle=solid}&#010;&gt; @CsvRecord(separator = "","", quote = ""'"")&#010;&gt; public class Record {&#010;&gt;     @DataField(pos = 1)&#010;&gt;     private String text1;&#010;&gt;     @DataField(pos = 2)&#010;&gt;     private String text2;&#010;&gt;     @DataField(pos = 3, pattern = ""########.##"")&#010;&gt;     private BigDecimal number;&#010;&gt; }&#010;&gt; {code}&#010;&gt; You will get an exception like this:&#010;&gt; {code}&#010;&gt; java.lang.IllegalArgumentException: Parsing error detected for field defined at the position:&#010;3, line: 1&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.BindyCsvFactory.bind(BindyCsvFactory.java:213)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.csv.BindyCsvDataFormat.unmarshal(BindyCsvDataFormat.java:173)&#010;&gt; &#009;at org.apache.camel.processor.UnmarshalProcessor.process(UnmarshalProcessor.java:69)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:62)&#010;&gt; &#009;at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:681)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.doProcessSequential(MulticastProcessor.java:609)&#010;&gt; &#009;at org.apache.camel.processor.MulticastProcessor.process(MulticastProcessor.java:238)&#010;&gt; &#009;at org.apache.camel.processor.Splitter.process(Splitter.java:108)&#010;&gt; &#009;at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.processExchange(GenericFileConsumer.java:460)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.processBatch(GenericFileConsumer.java:227)&#010;&gt; &#009;at org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:191)&#010;&gt; &#009;at org.apache.camel.impl.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:175)&#010;&gt; &#009;at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:102)&#010;&gt; &#009;at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#010;&gt; &#009;at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)&#010;&gt; &#009;at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)&#010;&gt; &#009;at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Caused by: java.lang.NumberFormatException: null&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:494)&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:383)&#010;&gt; &#009;at java.math.BigDecimal.&lt;init&gt;(BigDecimal.java:806)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.format.factories.BigDecimalPatternFormatFactory$BigDecimalPatternFormat.parse(BigDecimalPatternFormatFactory.java:66)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.format.factories.BigDecimalPatternFormatFactory$BigDecimalPatternFormat.parse(BigDecimalPatternFormatFactory.java:49)&#010;&gt; &#009;at org.apache.camel.dataformat.bindy.BindyCsvFactory.bind(BindyCsvFactory.java:209)&#010;&gt; &#009;... 37 common frames omitted&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
234,236,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11032) Component docs - Break long names so docs look better,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13056966.1489749133000.233182.1491551261761%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 07:47:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11032?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11032.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Component docs - Break long names so docs look better&#010;&gt; -----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11032&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11032&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;         Attachments: after.png, Screen Shot 2017-03-17 at 12.10.54 PM.png&#010;&gt;&#010;&gt;&#010;&gt; If a option name is long its not wrapped when browsing the online docs. We should add&#010;logic that split up CamelCase long words so they look nicer.&#010;&gt; The Camel IDEA plugin has some logic that does this&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
235,237,,[jira] [Commented] (CAMEL-11021) Missing javadoc on rest-dsl model,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13056966.1489749133000.233182.1491551261761%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 07:47:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11032?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11032.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Component docs - Break long names so docs look better&#010;&gt; -----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11032&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11032&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;         Attachments: after.png, Screen Shot 2017-03-17 at 12.10.54 PM.png&#010;&gt;&#010;&gt;&#010;&gt; If a option name is long its not wrapped when browsing the online docs. We should add&#010;logic that split up CamelCase long words so they look nicer.&#010;&gt; The Camel IDEA plugin has some logic that does this&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
236,238,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11021) Missing javadoc on rest-dsl model,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13056572.1489650936000.233338.1491553001846%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:16:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11021?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960459#comment-15960459&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11021:&#010;-------------------------------------&#010;&#010;{code}&#010;[WARNING] &#009;Missing javadoc on models: 10&#010;[WARNING] &#009;&#009;delete&#010;[WARNING] &#009;&#009;get&#010;[WARNING] &#009;&#009;head&#010;[WARNING] &#009;&#009;options&#010;[WARNING] &#009;&#009;patch&#010;[WARNING] &#009;&#009;post&#010;[WARNING] &#009;&#009;put&#010;[WARNING] &#009;&#009;restBinding&#010;[WARNING] &#009;&#009;verb&#010;[WARNING] &#009;&#009;camelContext&#010;{code}&#010;&#010;And more details here&#010;{code}&#010;[INFO] Found 222 models to use when enriching the XSD schema&#010;[WARNING] Cannot find documentation for name: method in json schema: /Users/davsclaus/workspace/camel/components/camel-spring/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;[WARNING] Cannot find documentation for name: uri in json schema: /Users/davsclaus/workspace/camel/components/camel-spring/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;[WARNING] Cannot find documentation for name: consumes in json schema: /Users/davsclaus/workspace/camel/components/camel-spring/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;[WARNING] Cannot find documentation for name: produces in json schema: /Users/davsclaus/workspace/camel/components/camel-spring/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;[WARNING] Cannot find documentation for name: bindingMode in json schema: /Users/davsclaus/workspace/camel/components/camel-spring/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;[WARNING] Cannot find documentation for name: skipBindingOnErrorCode in json schema: /Users/davsclaus/workspace/camel/components/camel-spring/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;[WARNING] Cannot find documentation for name: enableCORS in json schema: /Users/davsclaus/workspace/camel/components/camel-spring/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;[WARNING] Cannot find documentation for name: routeId in json schema: /Users/davsclaus/workspace/camel/components/camel-spring/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;[WARNING] Cannot find documentation for name: apiDocs in json schema: /Users/davsclaus/workspace/camel/components/camel-spring/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;[WARNING] Cannot find documentation for name: consumes in json schema: /Users/davsclaus/workspace/camel/components/camel-spring/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;[WARNING] Cannot find documentation for name: produces in json schema: /Users/davsclaus/workspace/camel/components/camel-spring/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;[WARNING] Cannot find documentation for name: bindingMode in json schema: /Users/davsclaus/workspace/camel/components/camel-spring/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;[WARNING] Cannot find documentation for name: skipBindingOnErrorCode in json schema: /Users/davsclaus/workspace/camel/components/camel-spring/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;[WARNING] Cannot find documentation for name: enableCORS in json schema: /Users/davsclaus/workspace/camel/components/camel-spring/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;[WARNING] Cannot find documentation for name: component in json schema: /Users/davsclaus/workspace/camel/components/camel-spring/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;[WARNING] Cannot find documentation for name: logMask in json schema: /Users/davsclaus/workspace/camel/components/camel-spring/target/../../../camel-core/target/classes/org/apache/camel/model/route.json&#010;{code}&#010;&#010;&gt; Missing javadoc on rest-dsl model&#010;&gt; ---------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11021&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11021&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We get a warning such as&#010;&gt; {code}&#010;&gt; [INFO] --- camel-eip-documentation-enricher-maven-plugin:2.19.0-SNAPSHOT:eip-documentation-enricher&#010;(eip-documentation-enricher) @ camel-blueprint ---&#010;&gt; [INFO] Found 221 models to use when enriching the XSD schema&#010;&gt; [WARNING] Cannot find documentation for name: method in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: uri in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: consumes in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: produces in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: bindingMode in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: skipBindingOnErrorCode in json schema:&#010;/Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: enableCORS in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: routeId in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: apiDocs in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: consumes in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: produces in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: bindingMode in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: skipBindingOnErrorCode in json schema:&#010;/Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: enableCORS in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: component in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; {code}&#010;&gt; The same would building platforms/camel-catalog warn about later on.&#010;&gt; We need to ensure the model is fully documented before a release&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
237,239,Claus Ibsen (JIRA),  [jira] [Assigned] (CAMEL-11021) Missing javadoc on rest-dsl model,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13056572.1489650936000.233339.1491553001855%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:16:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11021?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reassigned CAMEL-11021:&#010;-----------------------------------&#010;&#010;    Assignee: Claus Ibsen&#010;&#010;&gt; Missing javadoc on rest-dsl model&#010;&gt; ---------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11021&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11021&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We get a warning such as&#010;&gt; {code}&#010;&gt; [INFO] --- camel-eip-documentation-enricher-maven-plugin:2.19.0-SNAPSHOT:eip-documentation-enricher&#010;(eip-documentation-enricher) @ camel-blueprint ---&#010;&gt; [INFO] Found 221 models to use when enriching the XSD schema&#010;&gt; [WARNING] Cannot find documentation for name: method in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: uri in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: consumes in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: produces in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: bindingMode in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: skipBindingOnErrorCode in json schema:&#010;/Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: enableCORS in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: routeId in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: apiDocs in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: consumes in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: produces in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: bindingMode in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: skipBindingOnErrorCode in json schema:&#010;/Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: enableCORS in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: component in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; {code}&#010;&gt; The same would building platforms/camel-catalog warn about later on.&#010;&gt; We need to ensure the model is fully documented before a release&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
238,240,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11021) Missing javadoc on rest-dsl model,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13056572.1489650936000.233565.1491554921580%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:48:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11021?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11021.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Missing javadoc on rest-dsl model&#010;&gt; ---------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11021&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11021&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We get a warning such as&#010;&gt; {code}&#010;&gt; [INFO] --- camel-eip-documentation-enricher-maven-plugin:2.19.0-SNAPSHOT:eip-documentation-enricher&#010;(eip-documentation-enricher) @ camel-blueprint ---&#010;&gt; [INFO] Found 221 models to use when enriching the XSD schema&#010;&gt; [WARNING] Cannot find documentation for name: method in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: uri in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: consumes in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: produces in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: bindingMode in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: skipBindingOnErrorCode in json schema:&#010;/Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: enableCORS in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: routeId in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: apiDocs in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: consumes in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: produces in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: bindingMode in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: skipBindingOnErrorCode in json schema:&#010;/Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: enableCORS in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: component in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; {code}&#010;&gt; The same would building platforms/camel-catalog warn about later on.&#010;&gt; We need to ensure the model is fully documented before a release&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
239,241,,[jira] [Resolved] (CAMEL-10996) camel-kafka - Upgrade to 0.10.2.0,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13056572.1489650936000.233565.1491554921580%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:48:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11021?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11021.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Missing javadoc on rest-dsl model&#010;&gt; ---------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11021&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11021&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We get a warning such as&#010;&gt; {code}&#010;&gt; [INFO] --- camel-eip-documentation-enricher-maven-plugin:2.19.0-SNAPSHOT:eip-documentation-enricher&#010;(eip-documentation-enricher) @ camel-blueprint ---&#010;&gt; [INFO] Found 221 models to use when enriching the XSD schema&#010;&gt; [WARNING] Cannot find documentation for name: method in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: uri in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: consumes in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: produces in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: bindingMode in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: skipBindingOnErrorCode in json schema:&#010;/Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: enableCORS in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: routeId in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: apiDocs in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/delete.json&#010;&gt; [WARNING] Cannot find documentation for name: consumes in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: produces in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: bindingMode in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: skipBindingOnErrorCode in json schema:&#010;/Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: enableCORS in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; [WARNING] Cannot find documentation for name: component in json schema: /Users/davsclaus/workspace/camel/components/camel-blueprint/target/../../../camel-core/target/classes/org/apache/camel/model/rest/restBinding.json&#010;&gt; {code}&#010;&gt; The same would building platforms/camel-catalog warn about later on.&#010;&gt; We need to ensure the model is fully documented before a release&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
240,242,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-10996) camel-kafka - Upgrade to 0.10.2.0,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050318.1489316504000.233567.1491554921598%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:48:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10996?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-10996.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Andrea Cosentino&#010;&#010;&gt; camel-kafka - Upgrade to 0.10.2.0&#010;&gt; ---------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10996&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10996&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-kafka&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
241,243,,[jira] [Commented] (CAMEL-10947) camel-box - Karaf and log4j2,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050318.1489316504000.233567.1491554921598%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:48:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10996?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-10996.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Andrea Cosentino&#010;&#010;&gt; camel-kafka - Upgrade to 0.10.2.0&#010;&gt; ---------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10996&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10996&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-kafka&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
242,244,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-10947) camel-box - Karaf and log4j2,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048485.1488798724000.233569.1491554981578%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:49:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10947?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960500#comment-15960500&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-10947:&#010;-------------------------------------&#010;&#010;Tada are you working on this, if not then please unassign so we can have someone else work&#010;on it as we need this for 2.19 release&#010;&#010;&gt; camel-box - Karaf and log4j2&#010;&gt; ----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10947&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10947&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-box&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The new camel-box component that is migrated to box 2 api needs to&#010;&gt; - use log4j v2 for testing (see the other components how to do that)&#010;&gt; - karaf feature to be adjusted (so it can install and work on karaf)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
243,245,Tadayoshi Sato (JIRA),  [jira] [Assigned] (CAMEL-10947) camel-box - Karaf and log4j2,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048485.1488798724000.233692.1491555761570%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 09:02:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10947?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tadayoshi Sato reassigned CAMEL-10947:&#010;--------------------------------------&#010;&#010;    Assignee:     (was: Tadayoshi Sato)&#010;&#010;&gt; camel-box - Karaf and log4j2&#010;&gt; ----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10947&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10947&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-box&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The new camel-box component that is migrated to box 2 api needs to&#010;&gt; - use log4j v2 for testing (see the other components how to do that)&#010;&gt; - karaf feature to be adjusted (so it can install and work on karaf)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
244,246,Tadayoshi Sato (JIRA),  [jira] [Assigned] (CAMEL-10947) camel-box - Karaf and log4j2,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048485.1488798724000.233724.1491556001939%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 09:06:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10947?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tadayoshi Sato reassigned CAMEL-10947:&#010;--------------------------------------&#010;&#010;    Assignee: Tadayoshi Sato&#010;&#010;&gt; camel-box - Karaf and log4j2&#010;&gt; ----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10947&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10947&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-box&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The new camel-box component that is migrated to box 2 api needs to&#010;&gt; - use log4j v2 for testing (see the other components how to do that)&#010;&gt; - karaf feature to be adjusted (so it can install and work on karaf)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
245,247,Tadayoshi Sato (JIRA),  [jira] [Commented] (CAMEL-10947) camel-box - Karaf and log4j2,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048485.1488798724000.233727.1491556061614%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 09:07:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10947?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960528#comment-15960528&#010;] &#010;&#010;Tadayoshi Sato commented on CAMEL-10947:&#010;----------------------------------------&#010;&#010;Oops, I thought to work on it but then have been away from it for other tasks. I'll work on&#010;it next week. Is that fine?&#010;&#010;&gt; camel-box - Karaf and log4j2&#010;&gt; ----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10947&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10947&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-box&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The new camel-box component that is migrated to box 2 api needs to&#010;&gt; - use log4j v2 for testing (see the other components how to do that)&#010;&gt; - karaf feature to be adjusted (so it can install and work on karaf)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
246,248,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-10947) camel-box - Karaf and log4j2,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048485.1488798724000.233946.1491558161590%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 09:42:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10947?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960553#comment-15960553&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-10947:&#010;-------------------------------------&#010;&#010;Yeah this is fine&#010;&#010;&gt; camel-box - Karaf and log4j2&#010;&gt; ----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10947&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10947&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-box&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The new camel-box component that is migrated to box 2 api needs to&#010;&gt; - use log4j v2 for testing (see the other components how to do that)&#010;&gt; - karaf feature to be adjusted (so it can install and work on karaf)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
247,249,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10947) camel-box - Karaf and log4j2,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048485.1488798724000.246646.1491823541563%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 11:25:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10947?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15962728#comment-15962728&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10947:&#010;----------------------------------------&#010;&#010;GitHub user tadayosi opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1610&#010;&#010;    CAMEL-10947: camel-box - Upgrade to log4j2 and fix Karaf feature&#010;&#010;    https://issues.apache.org/jira/browse/CAMEL-10947&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/tadayosi/camel CAMEL-10947&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1610.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1610&#010;    &#010;----&#010;commit 02202c3d34cc64988cc5b75739dd347d767f658f&#010;Author: Tadayoshi Sato &lt;sato.tadayoshi@gmail.com&gt;&#010;Date:   2017-04-10T11:21:29Z&#010;&#010;    CAMEL-10947: camel-box - Upgrade to log4j2 and fix Karaf feature&#010;&#010;----&#010;&#010;&#010;&gt; camel-box - Karaf and log4j2&#010;&gt; ----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10947&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10947&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-box&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The new camel-box component that is migrated to box 2 api needs to&#010;&gt; - use log4j v2 for testing (see the other components how to do that)&#010;&gt; - karaf feature to be adjusted (so it can install and work on karaf)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
248,250,Andrea Cosentino (JIRA),  [jira] [Resolved] (CAMEL-10947) camel-box - Karaf and log4j2,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048485.1488798724000.246846.1491825821668%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 12:03:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10947?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino resolved CAMEL-10947.&#010;--------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; camel-box - Karaf and log4j2&#010;&gt; ----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10947&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10947&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-box&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The new camel-box component that is migrated to box 2 api needs to&#010;&gt; - use log4j v2 for testing (see the other components how to do that)&#010;&gt; - karaf feature to be adjusted (so it can install and work on karaf)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
249,251,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10947) camel-box - Karaf and log4j2,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048485.1488798724000.247441.1491830081558%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 13:14:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10947?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15962829#comment-15962829&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10947:&#010;----------------------------------------&#010;&#010;Github user tadayosi closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1610&#010;&#010;&#010;&gt; camel-box - Karaf and log4j2&#010;&gt; ----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10947&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10947&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-box&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The new camel-box component that is migrated to box 2 api needs to&#010;&gt; - use log4j v2 for testing (see the other components how to do that)&#010;&gt; - karaf feature to be adjusted (so it can install and work on karaf)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
250,252,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10947) camel-box - Karaf and log4j2,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048485.1488798724000.252629.1491875141637%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 01:45:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10947?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15963734#comment-15963734&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10947:&#010;----------------------------------------&#010;&#010;GitHub user igarashitm opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1612&#010;&#010;    CAMEL-10947 Fixed missing alignment on ${htmlunit-version} property&#010;&#010;    &#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/igarashitm/camel CAMEL-10947-prop&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1612.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1612&#010;    &#010;----&#010;commit da505f984cb3cb5fcde42303277b4477f44baa71&#010;Author: Tomohisa Igarashi &lt;tm.igarashi@gmail.com&gt;&#010;Date:   2017-04-11T01:40:38Z&#010;&#010;    CAMEL-10947 Fixed missing alignment on ${htmlunit-version} property&#010;&#010;----&#010;&#010;&#010;&gt; camel-box - Karaf and log4j2&#010;&gt; ----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10947&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10947&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-box&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The new camel-box component that is migrated to box 2 api needs to&#010;&gt; - use log4j v2 for testing (see the other components how to do that)&#010;&gt; - karaf feature to be adjusted (so it can install and work on karaf)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
251,253,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10947) camel-box - Karaf and log4j2,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048485.1488798724000.253696.1491893321649%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 06:48:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10947?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15963913#comment-15963913&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10947:&#010;----------------------------------------&#010;&#010;Github user igarashitm closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1612&#010;&#010;&#010;&gt; camel-box - Karaf and log4j2&#010;&gt; ----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10947&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10947&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-box&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The new camel-box component that is migrated to box 2 api needs to&#010;&gt; - use log4j v2 for testing (see the other components how to do that)&#010;&gt; - karaf feature to be adjusted (so it can install and work on karaf)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
252,254,,[jira] [Updated] (CAMEL-10837) Migrate EIP patterns to adoc,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048485.1488798724000.253696.1491893321649%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 06:48:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10947?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15963913#comment-15963913&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10947:&#010;----------------------------------------&#010;&#010;Github user igarashitm closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1612&#010;&#010;&#010;&gt; camel-box - Karaf and log4j2&#010;&gt; ----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10947&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10947&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-box&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The new camel-box component that is migrated to box 2 api needs to&#010;&gt; - use log4j v2 for testing (see the other components how to do that)&#010;&gt; - karaf feature to be adjusted (so it can install and work on karaf)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
253,255,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-10837) Migrate EIP patterns to adoc,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043376.1487190993000.233572.1491554981600%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:49:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10837?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-10837:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Migrate EIP patterns to adoc&#010;&gt; ----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10837&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10837&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: SÃ©bastien COL&#010;&gt;            Priority: Minor&#010;&gt;              Labels: documentation&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Task 1 of the Camel 2.19 Roadmap:&#010;&gt; Finish migrating the wiki documentation to adoc files. I think its&#010;&gt; most of the EIP patterns that are missing. There is a basic list of&#010;&gt; EIPs here: https://github.com/apache/camel/blob/master/camel-core/readme-eip.adoc&#010;&gt; I create this issue so I can submit a PR of my ongoing work. Still working on it but&#010;I wanted to check that what I do is what's expected.&#010;&gt; Regards,&#010;&gt; Sebastien&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
254,256,,[jira] [Commented] (CAMEL-10612) camel-reactive-streams - New component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043376.1487190993000.233572.1491554981600%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:49:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10837?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-10837:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Migrate EIP patterns to adoc&#010;&gt; ----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10837&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10837&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: SÃ©bastien COL&#010;&gt;            Priority: Minor&#010;&gt;              Labels: documentation&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Task 1 of the Camel 2.19 Roadmap:&#010;&gt; Finish migrating the wiki documentation to adoc files. I think its&#010;&gt; most of the EIP patterns that are missing. There is a basic list of&#010;&gt; EIPs here: https://github.com/apache/camel/blob/master/camel-core/readme-eip.adoc&#010;&gt; I create this issue so I can submit a PR of my ongoing work. Still working on it but&#010;I wanted to check that what I do is what's expected.&#010;&gt; Regards,&#010;&gt; Sebastien&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
255,257,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-10612) camel-reactive-streams - New component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13028882.1481971273000.233577.1491555041610%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:50:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10612?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960501#comment-15960501&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-10612:&#010;-------------------------------------&#010;&#010;Can we resolve this ticket and if there is more work in the future open new tickets for 2.20&#010;release?&#010;&#010;&gt; camel-reactive-streams - New component&#010;&gt; --------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10612&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10612&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We have a component for rx-java v1. rx-java v2 now is out and compatible with the reactive-stream&#010;specs, like many other reactive frameworks (including vert.x). We may want to implement a&#010;new component to integrate with any framework that comply with the reactive-streams specs&#010;(Akka-Streams and Slick among the others).&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
256,258,Nicola Ferraro (JIRA),  [jira] [Resolved] (CAMEL-10612) camel-reactive-streams - New component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13028882.1481971273000.233878.1491557187215%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 09:26:27 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10612?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro resolved CAMEL-10612.&#010;------------------------------------&#010;    Resolution: Done&#010;&#010;Resolved. Other work on related components (reactor, reactive-java2) has already been scheduled.&#010;&#010;&gt; camel-reactive-streams - New component&#010;&gt; --------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10612&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10612&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We have a component for rx-java v1. rx-java v2 now is out and compatible with the reactive-stream&#010;specs, like many other reactive frameworks (including vert.x). We may want to implement a&#010;new component to integrate with any framework that comply with the reactive-streams specs&#010;(Akka-Streams and Slick among the others).&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
257,259,,[jira] [Resolved] (CAMEL-10477) [jruby] Upgrade to 1.7.26,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13028882.1481971273000.233878.1491557187215%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 09:26:27 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10612?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro resolved CAMEL-10612.&#010;------------------------------------&#010;    Resolution: Done&#010;&#010;Resolved. Other work on related components (reactor, reactive-java2) has already been scheduled.&#010;&#010;&gt; camel-reactive-streams - New component&#010;&gt; --------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10612&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10612&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We have a component for rx-java v1. rx-java v2 now is out and compatible with the reactive-stream&#010;specs, like many other reactive frameworks (including vert.x). We may want to implement a&#010;new component to integrate with any framework that comply with the reactive-streams specs&#010;(Akka-Streams and Slick among the others).&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
258,260,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-10477) [jruby] Upgrade to 1.7.26,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13020552.1479144748000.233582.1491555101698%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:51:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10477?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-10477.&#010;---------------------------------&#010;    Resolution: Unresolved&#010;&#010;jruby is deprecated so lets leave it as-is&#010;&#010;&gt; [jruby] Upgrade to 1.7.26&#010;&gt; -------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10477&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10477&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-script&#010;&gt;    Affects Versions: 2.18.0&#010;&gt;            Reporter: Paolo Antinori&#010;&gt;            Assignee: Paolo Antinori&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Upgrade {{jruby}} to {{v1.7.26}}&#010;&gt; Note: this requires to explicitly set in test, while in used in multithread envs.&#010;&gt; {code}&#010;&gt; System.setProperty(""org.jruby.embed.localcontext.scope"", ""threadsafe"")&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
259,261,,[jira] [Updated] (CAMEL-10324) Create camel-cbor data format,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13020552.1479144748000.233582.1491555101698%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:51:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10477?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-10477.&#010;---------------------------------&#010;    Resolution: Unresolved&#010;&#010;jruby is deprecated so lets leave it as-is&#010;&#010;&gt; [jruby] Upgrade to 1.7.26&#010;&gt; -------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10477&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10477&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-script&#010;&gt;    Affects Versions: 2.18.0&#010;&gt;            Reporter: Paolo Antinori&#010;&gt;            Assignee: Paolo Antinori&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Upgrade {{jruby}} to {{v1.7.26}}&#010;&gt; Note: this requires to explicitly set in test, while in used in multithread envs.&#010;&gt; {code}&#010;&gt; System.setProperty(""org.jruby.embed.localcontext.scope"", ""threadsafe"")&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
260,262,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-10324) Create camel-cbor data format,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13005341.1474004072000.233587.1491555101736%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:51:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10324?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-10324:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Create camel-cbor data format&#010;&gt; -----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10324&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10324&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Data format for CBOR&#010;&gt; See http://cbor.io/&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
261,263,,[jira] [Updated] (CAMEL-9170) SimpleCxfRsBinding improvements,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13005341.1474004072000.233587.1491555101736%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:51:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10324?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-10324:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Create camel-cbor data format&#010;&gt; -----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10324&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10324&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Data format for CBOR&#010;&gt; See http://cbor.io/&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
262,264,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-9170) SimpleCxfRsBinding improvements,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12896411.1443194721000.233592.1491555161762%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:52:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-9170?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-9170:&#010;-------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   Future&#010;&#010;&gt; SimpleCxfRsBinding improvements&#010;&gt; -------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9170&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9170&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-cxfrs&#010;&gt;            Reporter: Sergey Beryozkin&#010;&gt;            Priority: Minor&#010;&gt;              Labels: PatchAvailable&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;         Attachments: camel9170.txt&#010;&gt;&#010;&gt;&#010;&gt; SimpleCxfRsBinding should:&#010;&gt; - ensure the Camel In Message body is null when the body index is -1 and it is not multipart&#010;- the default binding which SimpleCxfRsBinding extends still sets the body to a CXF specific&#010;response even if no body is available - which causes side-effects when a RestDsl binding is&#010;enabled.&#010;&gt; - should work if a CXF RS model is used as opposed to the interface&#010;&gt;  &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
263,265,,[jira] [Updated] (CAMEL-9682) camel-rx module should extend Bean Binding to support methods returning Observable<T>,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12896411.1443194721000.233592.1491555161762%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:52:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-9170?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-9170:&#010;-------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   Future&#010;&#010;&gt; SimpleCxfRsBinding improvements&#010;&gt; -------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9170&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9170&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-cxfrs&#010;&gt;            Reporter: Sergey Beryozkin&#010;&gt;            Priority: Minor&#010;&gt;              Labels: PatchAvailable&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;         Attachments: camel9170.txt&#010;&gt;&#010;&gt;&#010;&gt; SimpleCxfRsBinding should:&#010;&gt; - ensure the Camel In Message body is null when the body index is -1 and it is not multipart&#010;- the default binding which SimpleCxfRsBinding extends still sets the body to a CXF specific&#010;response even if no body is available - which causes side-effects when a RestDsl binding is&#010;enabled.&#010;&gt; - should work if a CXF RS model is used as opposed to the interface&#010;&gt;  &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
264,266,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-9682) camel-rx module should extend Bean Binding to support methods returning Observable<T>,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12948086.1457458822000.233590.1491555161710%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:52:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-9682?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-9682:&#010;-------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; camel-rx module should extend Bean Binding to support methods returning Observable&lt;T&gt;&#010;&gt; -------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9682&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9682&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-rx&#010;&gt;            Reporter: james strachan&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; when making asynchronous InOut requests it'd be nice if methods could return Observable&lt;T&gt;&#010;so that we could use the RxJava async programming model to process async requests &amp; responses.&#010;&gt; e.g. kinda like how folks can use Retrofit for HTTP: http://joluet.github.io/blog/2014/07/07/rxjava-retrofit/&#010;&gt; {code}&#010;&gt; public interface MyThing {&#010;&gt; @GET(""/session.json"")&#010;&gt; Observable&lt;LoginResponse&gt; login();&#010;&gt; @GET(""/user.json"")&#010;&gt; Observable&lt;UserState&gt; getUserState();&#010;&gt; }&#010;&gt; {code}&#010;&gt; to then let you use the normal composition / join / flatMap stuff in RxJava to compose&#010;multiple requests across different microservice invocations together with timeouts etc e.g.&#010;to compose the latest from 2 calls:&#010;&gt; {code}&#010;&gt; Observable.combineLatest(api.fetchUserProfile(), api.getUserState(),&#010;&gt; (user, userStatus) -&gt; new Pair&lt;&gt;(user, userStatus));&#010;&gt; {code}&#010;&gt; Where we'd replace the @GET annotation with a bean binding annotation and a URI parameter&#010;to switch to using ActiveMQ or Twitter or whatever&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
265,267,,[jira] [Updated] (CAMEL-6132) camel-test-karaf - To allow end users more easily do Camel and Karaf integration test,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12948086.1457458822000.233590.1491555161710%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:52:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-9682?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-9682:&#010;-------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; camel-rx module should extend Bean Binding to support methods returning Observable&lt;T&gt;&#010;&gt; -------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9682&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9682&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-rx&#010;&gt;            Reporter: james strachan&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; when making asynchronous InOut requests it'd be nice if methods could return Observable&lt;T&gt;&#010;so that we could use the RxJava async programming model to process async requests &amp; responses.&#010;&gt; e.g. kinda like how folks can use Retrofit for HTTP: http://joluet.github.io/blog/2014/07/07/rxjava-retrofit/&#010;&gt; {code}&#010;&gt; public interface MyThing {&#010;&gt; @GET(""/session.json"")&#010;&gt; Observable&lt;LoginResponse&gt; login();&#010;&gt; @GET(""/user.json"")&#010;&gt; Observable&lt;UserState&gt; getUserState();&#010;&gt; }&#010;&gt; {code}&#010;&gt; to then let you use the normal composition / join / flatMap stuff in RxJava to compose&#010;multiple requests across different microservice invocations together with timeouts etc e.g.&#010;to compose the latest from 2 calls:&#010;&gt; {code}&#010;&gt; Observable.combineLatest(api.fetchUserProfile(), api.getUserState(),&#010;&gt; (user, userStatus) -&gt; new Pair&lt;&gt;(user, userStatus));&#010;&gt; {code}&#010;&gt; Where we'd replace the @GET annotation with a bean binding annotation and a URI parameter&#010;to switch to using ActiveMQ or Twitter or whatever&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
266,268,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-6132) camel-test-karaf - To allow end users more easily do Camel and Karaf integration test,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12635511.1362556003000.233600.1491555161828%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:52:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-6132?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-6132:&#010;-------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; camel-test-karaf - To allow end users more easily do Camel and Karaf integration test&#010;&gt; -------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-6132&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-6132&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: karaf&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Quinn Stevenson&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; We should introduce a proper camel-test-karaf component that *end users* can use to do&#010;Camel and Karaf integration tests.&#010;&gt; The code we have in tests/camel-itest-karaf is for internal usage and testing of Camel.&#010;The code is not polished and intended for end users.&#010;&gt; We should create a new module for that, and take the good parts of camel-itest-karaf&#010;and make it user friendly etc. And of course have docs to go with as well.&#010;&gt; And when its good, we can use that in camel-itest-karaf also (eat our own dog food)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
267,269,A. Soroka (JIRA),  [jira] [Commented] (CAMEL-6132) camel-test-karaf - To allow end users more easily do Camel and Karaf integration test,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12635511.1362556003000.235437.1491573342689%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 13:55:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-6132?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960829#comment-15960829&#010;] &#010;&#010;A. Soroka commented on CAMEL-6132:&#010;----------------------------------&#010;&#010;Just wanted to note that I haven't lost sight of this ticket and I will be bringing in a PR&#010;soon for the few small improvements I was able to make the Camel code to get my tests to run.&#010;&#010;&#010;&gt; camel-test-karaf - To allow end users more easily do Camel and Karaf integration test&#010;&gt; -------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-6132&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-6132&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: karaf&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Quinn Stevenson&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; We should introduce a proper camel-test-karaf component that *end users* can use to do&#010;Camel and Karaf integration tests.&#010;&gt; The code we have in tests/camel-itest-karaf is for internal usage and testing of Camel.&#010;The code is not polished and intended for end users.&#010;&gt; We should create a new module for that, and take the good parts of camel-itest-karaf&#010;and make it user friendly etc. And of course have docs to go with as well.&#010;&gt; And when its good, we can use that in camel-itest-karaf also (eat our own dog food)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
268,270,,[jira] [Resolved] (CAMEL-8208) ZooKeeperRoutePolicy is not able to recover after session expiration,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12635511.1362556003000.235437.1491573342689%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 13:55:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-6132?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960829#comment-15960829&#010;] &#010;&#010;A. Soroka commented on CAMEL-6132:&#010;----------------------------------&#010;&#010;Just wanted to note that I haven't lost sight of this ticket and I will be bringing in a PR&#010;soon for the few small improvements I was able to make the Camel code to get my tests to run.&#010;&#010;&#010;&gt; camel-test-karaf - To allow end users more easily do Camel and Karaf integration test&#010;&gt; -------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-6132&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-6132&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: karaf&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Quinn Stevenson&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; We should introduce a proper camel-test-karaf component that *end users* can use to do&#010;Camel and Karaf integration tests.&#010;&gt; The code we have in tests/camel-itest-karaf is for internal usage and testing of Camel.&#010;The code is not polished and intended for end users.&#010;&gt; We should create a new module for that, and take the good parts of camel-itest-karaf&#010;and make it user friendly etc. And of course have docs to go with as well.&#010;&gt; And when its good, we can use that in camel-itest-karaf also (eat our own dog food)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
269,271,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-8208) ZooKeeperRoutePolicy is not able to recover after session expiration,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12765092.1420542463000.233611.1491555221713%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:53:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-8208?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-8208.&#010;--------------------------------&#010;    Resolution: Later&#010;&#010;There is a new zookeeper-master component that works better&#010;&#010;&gt; ZooKeeperRoutePolicy is not able to recover after session expiration&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-8208&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-8208&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-zookeeper&#010;&gt;    Affects Versions: 2.13.2&#010;&gt;            Reporter: Leo Wang&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; My company is using ZooKeeperRoutePolicy to maintain a Master/Slaver cluster. Sometimes&#010;the cluster got network problem which make the app server disconnect from remote ZooKeeper&#010;server. The disconnection usually don't last long but still long enough to expire the zookeeper&#010;session of ZooKeeperRoutePolicy. By our observation, it seems ZooKeeperRoutePolicy would not&#010;recovery and do re-election after session expiration which lead to multiple master situation.&#010;&gt; Is it possible to do enhancement or bug fixing on this?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
270,272,,[jira] [Updated] (CAMEL-8306) rest-dsl - Add support for wildcards to match on prefix,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12765092.1420542463000.233611.1491555221713%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 08:53:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-8208?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-8208.&#010;--------------------------------&#010;    Resolution: Later&#010;&#010;There is a new zookeeper-master component that works better&#010;&#010;&gt; ZooKeeperRoutePolicy is not able to recover after session expiration&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-8208&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-8208&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-zookeeper&#010;&gt;    Affects Versions: 2.13.2&#010;&gt;            Reporter: Leo Wang&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; My company is using ZooKeeperRoutePolicy to maintain a Master/Slaver cluster. Sometimes&#010;the cluster got network problem which make the app server disconnect from remote ZooKeeper&#010;server. The disconnection usually don't last long but still long enough to expire the zookeeper&#010;session of ZooKeeperRoutePolicy. By our observation, it seems ZooKeeperRoutePolicy would not&#010;recovery and do re-election after session expiration which lead to multiple master situation.&#010;&gt; Is it possible to do enhancement or bug fixing on this?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
271,273,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-8306) rest-dsl - Add support for wildcards to match on prefix,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12771712.1422878431000.234287.1491563081639%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:04:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-8306?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-8306:&#010;-------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   Future&#010;&#010;&gt; rest-dsl - Add support for wildcards to match on prefix&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-8306&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-8306&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, rest&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; See SO&#010;&gt; http://stackoverflow.com/questions/28264748/regex-on-camel-rest-component&#010;&gt; eg if we add support for using * as a wildcard then people can do rest paths with * as&#010;suffix, to indicate that it should match by wildcard&#010;&gt; eg&#010;&gt;  rest(""/api/user/*"") &#010;&gt; To match&#010;&gt; - /api/user&#010;&gt; - /api/user/foo&#010;&gt; -/api/user/foo/bar&#010;&gt; As * requires support from the underlying component, but most of them support that too,&#010;eg servlet / jetty / netty-http etc so likely we should be able to do this&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
272,274,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-8306) rest-dsl - Add support for wildcards to match on prefix,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12771712.1422878431000.234284.1491563081610%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:04:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-8306?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960607#comment-15960607&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-8306:&#010;------------------------------------&#010;&#010;Not as sure if this is so good, are uri templates in spring-boot etc support wildcards like&#010;this?&#010;&#010;[~zregvart] you have been in rest land recently, and thoughts? &#010;&#010;&gt; rest-dsl - Add support for wildcards to match on prefix&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-8306&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-8306&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, rest&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; See SO&#010;&gt; http://stackoverflow.com/questions/28264748/regex-on-camel-rest-component&#010;&gt; eg if we add support for using * as a wildcard then people can do rest paths with * as&#010;suffix, to indicate that it should match by wildcard&#010;&gt; eg&#010;&gt;  rest(""/api/user/*"") &#010;&gt; To match&#010;&gt; - /api/user&#010;&gt; - /api/user/foo&#010;&gt; -/api/user/foo/bar&#010;&gt; As * requires support from the underlying component, but most of them support that too,&#010;eg servlet / jetty / netty-http etc so likely we should be able to do this&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
273,275,Zoran Regvart (JIRA),  [jira] [Commented] (CAMEL-8306) rest-dsl - Add support for wildcards to match on prefix,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12771712.1422878431000.234482.1491565961935%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:52:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-8306?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960649#comment-15960649&#010;] &#010;&#010;Zoran Regvart commented on CAMEL-8306:&#010;--------------------------------------&#010;&#010;I don't think that we should build another router, I think that we could have an API contract&#010;between the REST DSL and the implementing HTTP transport component that can percolate this&#010;information to it. This can be as simple as passing {{matchOnUriPrefix}} to the HTTP transport&#010;component in this case. With Spring Web MVC you have a lot of options to map requests to handlers,&#010;and one of the option is Ant style globs like {{/path/**}} that matches all nested paths within&#010;{{/path}}, but you also have regex support and you can implement custom {{HandlerMapping}}&#010;that maps in whatever way you feel is needed.&#010;I don't see the need for Camel to match competencies of other Web frameworks, that is not&#010;it's core strength, but detecting {{*}} or {{**}} and passing that on to the HTTP transport&#010;as {{matchOnUriPrefix}} property should suffice.&#010;&#010;&gt; rest-dsl - Add support for wildcards to match on prefix&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-8306&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-8306&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, rest&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; See SO&#010;&gt; http://stackoverflow.com/questions/28264748/regex-on-camel-rest-component&#010;&gt; eg if we add support for using * as a wildcard then people can do rest paths with * as&#010;suffix, to indicate that it should match by wildcard&#010;&gt; eg&#010;&gt;  rest(""/api/user/*"") &#010;&gt; To match&#010;&gt; - /api/user&#010;&gt; - /api/user/foo&#010;&gt; -/api/user/foo/bar&#010;&gt; As * requires support from the underlying component, but most of them support that too,&#010;eg servlet / jetty / netty-http etc so likely we should be able to do this&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
274,276,Zoran Regvart (JIRA),  [jira] [Comment Edited] (CAMEL-8306) rest-dsl - Add support for wildcards to match on prefix,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12771712.1422878431000.234651.1491567701569%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 12:21:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-8306?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960649#comment-15960649&#010;] &#010;&#010;Zoran Regvart edited comment on CAMEL-8306 at 4/7/17 12:21 PM:&#010;---------------------------------------------------------------&#010;&#010;I don't think that we should build another router, I think that we could have an API contract&#010;between the REST DSL and the implementing HTTP transport component that can percolate this&#010;information to it. This can be as simple as passing {{matchOnUriPrefix}} to the HTTP transport&#010;component in this case. With Spring Web MVC you have a lot of options to map requests to handlers,&#010;and one of the option is Ant style globs like {{/path/**}} that matches all nested paths within&#010;{{/path}}, but you also have regex support and you can implement custom {{HandlerMapping}}&#010;that maps in whatever way you feel is needed.&#010;I don't see the need for Camel to match competencies of other Web frameworks, that is not&#010;it's core strength, but detecting {{&amp;#42;}} or {{&amp;#42;&amp;#42;}} and passing that&#010;on to the HTTP transport as {{matchOnUriPrefix}} property should suffice.&#010;&#010;&#010;was (Author: zregvart):&#010;I don't think that we should build another router, I think that we could have an API contract&#010;between the REST DSL and the implementing HTTP transport component that can percolate this&#010;information to it. This can be as simple as passing {{matchOnUriPrefix}} to the HTTP transport&#010;component in this case. With Spring Web MVC you have a lot of options to map requests to handlers,&#010;and one of the option is Ant style globs like {{/path/**}} that matches all nested paths within&#010;{{/path}}, but you also have regex support and you can implement custom {{HandlerMapping}}&#010;that maps in whatever way you feel is needed.&#010;I don't see the need for Camel to match competencies of other Web frameworks, that is not&#010;it's core strength, but detecting {{*}} or {{**}} and passing that on to the HTTP transport&#010;as {{matchOnUriPrefix}} property should suffice.&#010;&#010;&gt; rest-dsl - Add support for wildcards to match on prefix&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-8306&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-8306&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, rest&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; See SO&#010;&gt; http://stackoverflow.com/questions/28264748/regex-on-camel-rest-component&#010;&gt; eg if we add support for using * as a wildcard then people can do rest paths with * as&#010;suffix, to indicate that it should match by wildcard&#010;&gt; eg&#010;&gt;  rest(""/api/user/*"") &#010;&gt; To match&#010;&gt; - /api/user&#010;&gt; - /api/user/foo&#010;&gt; -/api/user/foo/bar&#010;&gt; As * requires support from the underlying component, but most of them support that too,&#010;eg servlet / jetty / netty-http etc so likely we should be able to do this&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
275,277,,[jira] [Updated] (CAMEL-9751) Add support for security requirements to swagger java component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12771712.1422878431000.234651.1491567701569%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 12:21:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-8306?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960649#comment-15960649&#010;] &#010;&#010;Zoran Regvart edited comment on CAMEL-8306 at 4/7/17 12:21 PM:&#010;---------------------------------------------------------------&#010;&#010;I don't think that we should build another router, I think that we could have an API contract&#010;between the REST DSL and the implementing HTTP transport component that can percolate this&#010;information to it. This can be as simple as passing {{matchOnUriPrefix}} to the HTTP transport&#010;component in this case. With Spring Web MVC you have a lot of options to map requests to handlers,&#010;and one of the option is Ant style globs like {{/path/**}} that matches all nested paths within&#010;{{/path}}, but you also have regex support and you can implement custom {{HandlerMapping}}&#010;that maps in whatever way you feel is needed.&#010;I don't see the need for Camel to match competencies of other Web frameworks, that is not&#010;it's core strength, but detecting {{&amp;#42;}} or {{&amp;#42;&amp;#42;}} and passing that&#010;on to the HTTP transport as {{matchOnUriPrefix}} property should suffice.&#010;&#010;&#010;was (Author: zregvart):&#010;I don't think that we should build another router, I think that we could have an API contract&#010;between the REST DSL and the implementing HTTP transport component that can percolate this&#010;information to it. This can be as simple as passing {{matchOnUriPrefix}} to the HTTP transport&#010;component in this case. With Spring Web MVC you have a lot of options to map requests to handlers,&#010;and one of the option is Ant style globs like {{/path/**}} that matches all nested paths within&#010;{{/path}}, but you also have regex support and you can implement custom {{HandlerMapping}}&#010;that maps in whatever way you feel is needed.&#010;I don't see the need for Camel to match competencies of other Web frameworks, that is not&#010;it's core strength, but detecting {{*}} or {{**}} and passing that on to the HTTP transport&#010;as {{matchOnUriPrefix}} property should suffice.&#010;&#010;&gt; rest-dsl - Add support for wildcards to match on prefix&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-8306&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-8306&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, rest&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; See SO&#010;&gt; http://stackoverflow.com/questions/28264748/regex-on-camel-rest-component&#010;&gt; eg if we add support for using * as a wildcard then people can do rest paths with * as&#010;suffix, to indicate that it should match by wildcard&#010;&gt; eg&#010;&gt;  rest(""/api/user/*"") &#010;&gt; To match&#010;&gt; - /api/user&#010;&gt; - /api/user/foo&#010;&gt; -/api/user/foo/bar&#010;&gt; As * requires support from the underlying component, but most of them support that too,&#010;eg servlet / jetty / netty-http etc so likely we should be able to do this&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
276,278,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-9751) Add support for security requirements to swagger java component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12953128.1458807266000.234290.1491563142597%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:05:42 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-9751?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-9751:&#010;-------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Add support for security requirements to swagger java component&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9751&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9751&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-swagger&#010;&gt;            Reporter: Tim Dudgeon&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Swagger Java component does not currently allow security requirements to be specified.&#010;Would be useful to be able to do so.&#010;&gt; But as security is usually applied at the container level its not clear what the best&#010;approach would be. &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
277,279,,[jira] [Updated] (CAMEL-9516) DynamodbStreamConsumer should provide for a callback once the stream is being read,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12953128.1458807266000.234290.1491563142597%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:05:42 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-9751?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-9751:&#010;-------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Add support for security requirements to swagger java component&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9751&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9751&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-swagger&#010;&gt;            Reporter: Tim Dudgeon&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Swagger Java component does not currently allow security requirements to be specified.&#010;Would be useful to be able to do so.&#010;&gt; But as security is usually applied at the container level its not clear what the best&#010;approach would be. &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
278,280,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-9516) DynamodbStreamConsumer should provide for a callback once the stream is being read,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12930114.1452771009000.234292.1491563142612%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:05:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-9516?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-9516:&#010;-------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   Future&#010;&#010;&gt; DynamodbStreamConsumer should provide for a callback once the stream is being read&#010;&gt; ----------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9516&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9516&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-aws&#010;&gt;            Reporter: Rachel Evans&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; Use case: I want to read and keep up-to-date with the contents of a table.&#010;&gt; Approach: start reading the stream (using DdbStreamConsumer), then _once the consumer&#010;has definitely started reading the stream_, i.e. is guaranteed not to miss any future updates,&#010;_then_ I scan the table.&#010;&gt; In order to achieve this I need to know when the consumer has started reading the stream.&#010; Specifically, when the first successful call to GetRecords has occurred.&#010;&gt; Possible approach: on the endpoint URI, define a ddbStreamStartupListener bean parameter.&#010;&gt; Given I have a DdbStreamEndpoint with a ddbStreamStartupListener&#010;&gt; When the first call to GetRecords success&#010;&gt; Then the bean should be called synchronously (*before* the consumer proceeds with processing&#010;any records that GetRecords returned).&#010;&gt; Of course it is up to the user providing that bean what it does â€“ for example, whether&#010;it does something blocking and therefore potentially long, or whether it triggers something&#010;async.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
279,281,,[jira] [Updated] (CAMEL-10301) NullPointerException in Netty4 component's ClientChannelHandler causes async processor to wait forever,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12930114.1452771009000.234292.1491563142612%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:05:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-9516?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-9516:&#010;-------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   Future&#010;&#010;&gt; DynamodbStreamConsumer should provide for a callback once the stream is being read&#010;&gt; ----------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9516&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9516&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-aws&#010;&gt;            Reporter: Rachel Evans&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; Use case: I want to read and keep up-to-date with the contents of a table.&#010;&gt; Approach: start reading the stream (using DdbStreamConsumer), then _once the consumer&#010;has definitely started reading the stream_, i.e. is guaranteed not to miss any future updates,&#010;_then_ I scan the table.&#010;&gt; In order to achieve this I need to know when the consumer has started reading the stream.&#010; Specifically, when the first successful call to GetRecords has occurred.&#010;&gt; Possible approach: on the endpoint URI, define a ddbStreamStartupListener bean parameter.&#010;&gt; Given I have a DdbStreamEndpoint with a ddbStreamStartupListener&#010;&gt; When the first call to GetRecords success&#010;&gt; Then the bean should be called synchronously (*before* the consumer proceeds with processing&#010;any records that GetRecords returned).&#010;&gt; Of course it is up to the user providing that bean what it does â€“ for example, whether&#010;it does something blocking and therefore potentially long, or whether it triggers something&#010;async.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
280,282,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-10301) NullPointerException in Netty4 component's ClientChannelHandler causes async processor to wait forever,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13003693.1473369613000.234294.1491563142627%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:05:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10301?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-10301:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   Future&#010;&#010;&gt; NullPointerException in Netty4 component's ClientChannelHandler causes async processor&#010;to wait forever&#010;&gt; ------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10301&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10301&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-netty4&#010;&gt;    Affects Versions: 2.17.2&#010;&gt;            Reporter: Alex Cheng&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; When sending messages using camel netty4 component, in a rare case, a NullPointerException&#010;thrown in {{ClientChannelHandler}} caused {{org.apache.camel.impl.DefaultAsyncProcessorAwaitManager}}&#010;to wait forever. &#010;&gt; From the stacktrace, the NPE occurred in line 116 of {{channelInactive}} method and the&#010;{{exchange}} is null.&#010;&gt; {code}&#010;&gt; boolean doneUoW = exchange.getUnitOfWork() == null;&#010;&gt; {code}&#010;&gt; From {{getExchange}} method, it looks like it cannot get {{NettyCamelState}} from {{NettyProducer}}.&#010;In {{NettyProducer}}'s {{process}} method, it's possible that a Netty channel is closed before&#010;line &#010;&gt; {code}&#010;&gt; putState(channel, new NettyCamelState(producerCallback, exchange));&#010;&gt; {code}&#010;&gt;  is executed, which triggers {{channelInactive}} and causes the NPE.&#010;&gt; So the flow looks like below:&#010;&gt; 1) Netty channel opened in {{NettyProducer}}&#010;&gt; 2) Before {{putState}} is invoked, the channel is closed&#010;&gt; 3) {{channelInactive}} method in {{ClientChannelHandler}} is called and throws NPE, the&#010;worker thread dies&#010;&gt; 4) {{NettyProducer}} not mark the async processor as done&#010;&gt; In line 303 of {{NettyProducer}}, it simply returns if the channel future is not success,&#010;but the {{ClientChannelHandler#exceptionCaught}} won't do any thing if {{exchange}} is null&#010;and will never run again as the worker thread already died.&#010;&gt; {code}&#010;&gt; if (!channelFuture.isSuccess()) {&#010;&gt;                     // no success then exit, (any exception has been handled by ClientChannelHandler#exceptionCaught)&#010;&gt;                     return;&#010;&gt;                 }&#010;&gt; {code}&#010;&gt; The potential fix would be:&#010;&gt; 1) Add null check in {{ClientChannelHandler}}'s {{channelInactive}} method&#010;&gt; 2) Call {{producerCallback.done(false)}} in {{NettyProducer}}'s {{process}} method when&#010;channel future is not success. This should be safe as {{AsyncCallback}}'s {{done}} method&#010;can be called multiple times.&#010;&gt; Note, 2.18.0 version changed some implementation details of {{NettyProducer}} but still&#010;has the same issue.&#010;&gt; Stacktrace:&#010;&gt; {code}&#010;&gt; 2016-09-08 00:26:11,843 | TRACE [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: Pool[active=0, idle=0]&#010;&gt; 2016-09-08 00:26:11,843 | DEBUG [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: Created new TCP client bootstrap connecting to 172.25.0.100:15050 with options: Bootstrap(BootstrapConfig(group:&#010;NioEventLoopGroup, channelFactory: NioSocketChannel.class, options: {SO_KEEPALIVE=true, TCP_NODELAY=true,&#010;SO_REUSEADDR=true, CONNECT_TIMEOUT_MILLIS=10000}, handler: org.apache.camel.component.netty4.DefaultClientInitializerFactory@297c237,&#010;resolver: io.netty.resolver.DefaultAddressResolverGroup@6eb474f1))&#010;&gt; 2016-09-08 00:26:11,843 | TRACE [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: Waiting for operation to complete AbstractBootstrap$PendingRegistrationPromise@637319e7(incomplete)&#010;for 10000 millis&#010;&gt; 2016-09-08 00:26:11,844 | TRACE [NettyClientTCPWorker]     o.a.c.c.netty4.DefaultClientInitializerFactory&#010;: Using request timeout 5000 millis&#010;&gt; 2016-09-08 00:26:11,844 | TRACE [NettyClientTCPWorker]     o.a.c.c.netty4.DefaultClientInitializerFactory&#010;: Created ChannelPipeline: DefaultChannelPipeline{(DefaultClientInitializerFactory#0 = org.apache.camel.component.netty4.DefaultClientInitializerFactory),&#010;(decoder-0 = xxx), (encoder-0 = org.apache.camel.component.hl7.HL7MLLPNettyEncoder), (timeout&#010;= io.netty.handler.timeout.ReadTimeoutHandler), (handler = org.apache.camel.component.netty4.handlers.ClientChannelHandler)}&#010;&gt; 2016-09-08 00:26:11,845 | DEBUG [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: Creating connector to address: 172.25.0.100:15050&#010;&gt; 2016-09-08 00:26:11,845 | TRACE [NettyClientTCPWorker]    org.apache.camel.component.netty4.NettyProducer&#010;: Channel open: [id: 0x40064baa, L:/172.25.0.103:55662 - R:/172.25.0.100:15050]&#010;&gt; 2016-09-08 00:26:11,845 | TRACE [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: Created channel: [id: 0x40064baa, L:/172.25.0.103:55662 - R:/172.25.0.100:15050]&#010;&gt; 2016-09-08 00:26:11,845 | TRACE [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: activateObject channel: [id: 0x40064baa, L:/172.25.0.103:55662 - R:/172.25.0.100:15050]&#010;-&gt; {}&#010;&gt; 2016-09-08 00:26:11,845 | TRACE [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: Validating channel: [id: 0x40064baa, L:/172.25.0.103:55662 - R:/172.25.0.100:15050] -&gt;&#010;true&#010;&gt; 2016-09-08 00:26:11,845 | TRACE [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: Got channel from pool [id: 0x40064baa, L:/172.25.0.103:55662 ! R:/172.25.0.100:15050]&#010;&gt; 2016-09-08 00:26:11,847 | TRACE [NettyClientTCPWorker]    org.apache.camel.component.netty4.NettyProducer&#010;: Channel closed: [id: 0x40064baa, L:/172.25.0.103:55662 ! R:/172.25.0.100:15050]&#010;&gt; 2016-09-08 00:26:11,848 | TRACE [NettyClientTCPWorker]    org.apache.camel.component.netty4.NettyProducer&#010;: Exception caught at Channel: [id: 0x40064baa, L:/172.25.0.103:55662 ! R:/172.25.0.100:15050]&#010;&gt; java.lang.NullPointerException: null&#010;&gt; &#009;at org.apache.camel.component.netty4.handlers.ClientChannelHandler.channelInactive(ClientChannelHandler.java:116)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:223)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:216)&#010;&gt; &#009;at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:75)&#010;&gt; &#009;at io.netty.handler.timeout.ReadTimeoutHandler.channelInactive(ReadTimeoutHandler.java:146)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:223)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:216)&#010;&gt; &#009;at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:360)&#010;&gt; &#009;at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:325)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:223)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:216)&#010;&gt; &#009;at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1314)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:223)&#010;&gt; &#009;at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:886)&#010;&gt; &#009;at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:735)&#010;&gt; &#009;at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:400)&#010;&gt; &#009;at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:401)&#010;&gt; &#009;at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:805)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; 2016-09-08 00:26:11,848 | DEBUG [NettyClientTCPWorker]    org.apache.camel.component.netty4.NettyProducer&#010;: Closing channel as an exception was thrown from Netty&#010;&gt; java.lang.NullPointerException: null&#010;&gt; &#009;at org.apache.camel.component.netty4.handlers.ClientChannelHandler.channelInactive(ClientChannelHandler.java:116)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:223)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:216)&#010;&gt; &#009;at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:75)&#010;&gt; &#009;at io.netty.handler.timeout.ReadTimeoutHandler.channelInactive(ReadTimeoutHandler.java:146)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:223)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:216)&#010;&gt; &#009;at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:360)&#010;&gt; &#009;at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:325)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:223)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:216)&#010;&gt; &#009;at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1314)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:223)&#010;&gt; &#009;at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:886)&#010;&gt; &#009;at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:735)&#010;&gt; &#009;at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:400)&#010;&gt; &#009;at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:401)&#010;&gt; &#009;at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:805)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; 2016-09-08 00:26:11,850 | DEBUG [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: Channel: [id: 0x40064baa, L:/172.25.0.103:55662 ! R:/172.25.0.100:15050] writing body: [77,&#010;..., 13]&#010;&gt; 2016-09-08 00:26:11,850 | TRACE [-threads-1855599236)]   o.a.camel.impl.DefaultAsyncProcessorAwaitManager&#010;: Waiting for asynchronous callback before continuing for exchangeId: ID-5533912dbb9f-37752-1473294183111-0-2373&#010;-&gt; Exchange[ID-5533912dbb9f-37752-1473294183111-0-2373]&#010;&gt; 2016-09-08 00:26:11,850 | TRACE [NettyClientTCPWorker]    org.apache.camel.component.netty4.NettyProducer&#010;: Operation complete DefaultChannelPromise@7395de5d(failure: java.nio.channels.ClosedChannelException)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
281,283,,[jira] [Updated] (CAMEL-10587) Extending SQS message invisibility timeout not working in some cases,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13003693.1473369613000.234294.1491563142627%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:05:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10301?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-10301:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   Future&#010;&#010;&gt; NullPointerException in Netty4 component's ClientChannelHandler causes async processor&#010;to wait forever&#010;&gt; ------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10301&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10301&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-netty4&#010;&gt;    Affects Versions: 2.17.2&#010;&gt;            Reporter: Alex Cheng&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; When sending messages using camel netty4 component, in a rare case, a NullPointerException&#010;thrown in {{ClientChannelHandler}} caused {{org.apache.camel.impl.DefaultAsyncProcessorAwaitManager}}&#010;to wait forever. &#010;&gt; From the stacktrace, the NPE occurred in line 116 of {{channelInactive}} method and the&#010;{{exchange}} is null.&#010;&gt; {code}&#010;&gt; boolean doneUoW = exchange.getUnitOfWork() == null;&#010;&gt; {code}&#010;&gt; From {{getExchange}} method, it looks like it cannot get {{NettyCamelState}} from {{NettyProducer}}.&#010;In {{NettyProducer}}'s {{process}} method, it's possible that a Netty channel is closed before&#010;line &#010;&gt; {code}&#010;&gt; putState(channel, new NettyCamelState(producerCallback, exchange));&#010;&gt; {code}&#010;&gt;  is executed, which triggers {{channelInactive}} and causes the NPE.&#010;&gt; So the flow looks like below:&#010;&gt; 1) Netty channel opened in {{NettyProducer}}&#010;&gt; 2) Before {{putState}} is invoked, the channel is closed&#010;&gt; 3) {{channelInactive}} method in {{ClientChannelHandler}} is called and throws NPE, the&#010;worker thread dies&#010;&gt; 4) {{NettyProducer}} not mark the async processor as done&#010;&gt; In line 303 of {{NettyProducer}}, it simply returns if the channel future is not success,&#010;but the {{ClientChannelHandler#exceptionCaught}} won't do any thing if {{exchange}} is null&#010;and will never run again as the worker thread already died.&#010;&gt; {code}&#010;&gt; if (!channelFuture.isSuccess()) {&#010;&gt;                     // no success then exit, (any exception has been handled by ClientChannelHandler#exceptionCaught)&#010;&gt;                     return;&#010;&gt;                 }&#010;&gt; {code}&#010;&gt; The potential fix would be:&#010;&gt; 1) Add null check in {{ClientChannelHandler}}'s {{channelInactive}} method&#010;&gt; 2) Call {{producerCallback.done(false)}} in {{NettyProducer}}'s {{process}} method when&#010;channel future is not success. This should be safe as {{AsyncCallback}}'s {{done}} method&#010;can be called multiple times.&#010;&gt; Note, 2.18.0 version changed some implementation details of {{NettyProducer}} but still&#010;has the same issue.&#010;&gt; Stacktrace:&#010;&gt; {code}&#010;&gt; 2016-09-08 00:26:11,843 | TRACE [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: Pool[active=0, idle=0]&#010;&gt; 2016-09-08 00:26:11,843 | DEBUG [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: Created new TCP client bootstrap connecting to 172.25.0.100:15050 with options: Bootstrap(BootstrapConfig(group:&#010;NioEventLoopGroup, channelFactory: NioSocketChannel.class, options: {SO_KEEPALIVE=true, TCP_NODELAY=true,&#010;SO_REUSEADDR=true, CONNECT_TIMEOUT_MILLIS=10000}, handler: org.apache.camel.component.netty4.DefaultClientInitializerFactory@297c237,&#010;resolver: io.netty.resolver.DefaultAddressResolverGroup@6eb474f1))&#010;&gt; 2016-09-08 00:26:11,843 | TRACE [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: Waiting for operation to complete AbstractBootstrap$PendingRegistrationPromise@637319e7(incomplete)&#010;for 10000 millis&#010;&gt; 2016-09-08 00:26:11,844 | TRACE [NettyClientTCPWorker]     o.a.c.c.netty4.DefaultClientInitializerFactory&#010;: Using request timeout 5000 millis&#010;&gt; 2016-09-08 00:26:11,844 | TRACE [NettyClientTCPWorker]     o.a.c.c.netty4.DefaultClientInitializerFactory&#010;: Created ChannelPipeline: DefaultChannelPipeline{(DefaultClientInitializerFactory#0 = org.apache.camel.component.netty4.DefaultClientInitializerFactory),&#010;(decoder-0 = xxx), (encoder-0 = org.apache.camel.component.hl7.HL7MLLPNettyEncoder), (timeout&#010;= io.netty.handler.timeout.ReadTimeoutHandler), (handler = org.apache.camel.component.netty4.handlers.ClientChannelHandler)}&#010;&gt; 2016-09-08 00:26:11,845 | DEBUG [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: Creating connector to address: 172.25.0.100:15050&#010;&gt; 2016-09-08 00:26:11,845 | TRACE [NettyClientTCPWorker]    org.apache.camel.component.netty4.NettyProducer&#010;: Channel open: [id: 0x40064baa, L:/172.25.0.103:55662 - R:/172.25.0.100:15050]&#010;&gt; 2016-09-08 00:26:11,845 | TRACE [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: Created channel: [id: 0x40064baa, L:/172.25.0.103:55662 - R:/172.25.0.100:15050]&#010;&gt; 2016-09-08 00:26:11,845 | TRACE [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: activateObject channel: [id: 0x40064baa, L:/172.25.0.103:55662 - R:/172.25.0.100:15050]&#010;-&gt; {}&#010;&gt; 2016-09-08 00:26:11,845 | TRACE [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: Validating channel: [id: 0x40064baa, L:/172.25.0.103:55662 - R:/172.25.0.100:15050] -&gt;&#010;true&#010;&gt; 2016-09-08 00:26:11,845 | TRACE [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: Got channel from pool [id: 0x40064baa, L:/172.25.0.103:55662 ! R:/172.25.0.100:15050]&#010;&gt; 2016-09-08 00:26:11,847 | TRACE [NettyClientTCPWorker]    org.apache.camel.component.netty4.NettyProducer&#010;: Channel closed: [id: 0x40064baa, L:/172.25.0.103:55662 ! R:/172.25.0.100:15050]&#010;&gt; 2016-09-08 00:26:11,848 | TRACE [NettyClientTCPWorker]    org.apache.camel.component.netty4.NettyProducer&#010;: Exception caught at Channel: [id: 0x40064baa, L:/172.25.0.103:55662 ! R:/172.25.0.100:15050]&#010;&gt; java.lang.NullPointerException: null&#010;&gt; &#009;at org.apache.camel.component.netty4.handlers.ClientChannelHandler.channelInactive(ClientChannelHandler.java:116)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:223)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:216)&#010;&gt; &#009;at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:75)&#010;&gt; &#009;at io.netty.handler.timeout.ReadTimeoutHandler.channelInactive(ReadTimeoutHandler.java:146)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:223)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:216)&#010;&gt; &#009;at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:360)&#010;&gt; &#009;at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:325)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:223)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:216)&#010;&gt; &#009;at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1314)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:223)&#010;&gt; &#009;at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:886)&#010;&gt; &#009;at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:735)&#010;&gt; &#009;at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:400)&#010;&gt; &#009;at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:401)&#010;&gt; &#009;at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:805)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; 2016-09-08 00:26:11,848 | DEBUG [NettyClientTCPWorker]    org.apache.camel.component.netty4.NettyProducer&#010;: Closing channel as an exception was thrown from Netty&#010;&gt; java.lang.NullPointerException: null&#010;&gt; &#009;at org.apache.camel.component.netty4.handlers.ClientChannelHandler.channelInactive(ClientChannelHandler.java:116)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:223)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:216)&#010;&gt; &#009;at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:75)&#010;&gt; &#009;at io.netty.handler.timeout.ReadTimeoutHandler.channelInactive(ReadTimeoutHandler.java:146)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:223)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:216)&#010;&gt; &#009;at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:360)&#010;&gt; &#009;at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:325)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:223)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:216)&#010;&gt; &#009;at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1314)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237)&#010;&gt; &#009;at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:223)&#010;&gt; &#009;at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:886)&#010;&gt; &#009;at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:735)&#010;&gt; &#009;at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:400)&#010;&gt; &#009;at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:401)&#010;&gt; &#009;at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:805)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; 2016-09-08 00:26:11,850 | DEBUG [-threads-1855599236)]    org.apache.camel.component.netty4.NettyProducer&#010;: Channel: [id: 0x40064baa, L:/172.25.0.103:55662 ! R:/172.25.0.100:15050] writing body: [77,&#010;..., 13]&#010;&gt; 2016-09-08 00:26:11,850 | TRACE [-threads-1855599236)]   o.a.camel.impl.DefaultAsyncProcessorAwaitManager&#010;: Waiting for asynchronous callback before continuing for exchangeId: ID-5533912dbb9f-37752-1473294183111-0-2373&#010;-&gt; Exchange[ID-5533912dbb9f-37752-1473294183111-0-2373]&#010;&gt; 2016-09-08 00:26:11,850 | TRACE [NettyClientTCPWorker]    org.apache.camel.component.netty4.NettyProducer&#010;: Operation complete DefaultChannelPromise@7395de5d(failure: java.nio.channels.ClosedChannelException)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
282,284,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-10587) Extending SQS message invisibility timeout not working in some cases,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13027409.1481536111000.234307.1491563201698%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:06:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10587?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-10587:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.18.4)&#010;                       (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Extending SQS message invisibility timeout not working in some cases&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10587&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10587&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-aws&#010;&gt;    Affects Versions: 2.18.0&#010;&gt;            Reporter: Sindre Mehus&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; org.apache.camel.component.aws.sqs.SqsConsumer creates a TimeoutExtender task for each&#010;message received in a batch, but these tasks should be started *before* processing the messages.&#010;&gt; Error can be reproduced as follows:&#010;&gt; 1. Create an SQS-consuming route using maxMessagesPerPoll=10, extendMessageVisibility=true,&#010;visibilityTimeout=30, waitTimeSeconds=20.&#010;&gt; 2. Add a process step in the route which just sleeps for a long time.&#010;&gt; 3. Put 20-30 messages on the SQS queue.&#010;&gt; 4. Start the route.&#010;&gt; 5. Let's say the SQS consumer reads off 10 messages.&#010;&gt; 6. Observe in the AWS SQS console that 10 messages are in-flight.&#010;&gt; 7. After 30 seconds you can observe that only 1 message is in-flight. This is incorrect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
283,285,,[jira] [Updated] (CAMEL-10474) Aggregator - Allow aggregate/preAggregate to force complete group,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13027409.1481536111000.234307.1491563201698%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:06:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10587?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-10587:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.18.4)&#010;                       (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Extending SQS message invisibility timeout not working in some cases&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10587&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10587&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-aws&#010;&gt;    Affects Versions: 2.18.0&#010;&gt;            Reporter: Sindre Mehus&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; org.apache.camel.component.aws.sqs.SqsConsumer creates a TimeoutExtender task for each&#010;message received in a batch, but these tasks should be started *before* processing the messages.&#010;&gt; Error can be reproduced as follows:&#010;&gt; 1. Create an SQS-consuming route using maxMessagesPerPoll=10, extendMessageVisibility=true,&#010;visibilityTimeout=30, waitTimeSeconds=20.&#010;&gt; 2. Add a process step in the route which just sleeps for a long time.&#010;&gt; 3. Put 20-30 messages on the SQS queue.&#010;&gt; 4. Start the route.&#010;&gt; 5. Let's say the SQS consumer reads off 10 messages.&#010;&gt; 6. Observe in the AWS SQS console that 10 messages are in-flight.&#010;&gt; 7. After 30 seconds you can observe that only 1 message is in-flight. This is incorrect.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
284,286,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-10474) Aggregator - Allow aggregate/preAggregate to force complete group,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13020253.1478939201000.234302.1491563201657%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:06:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10474?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-10474:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Aggregator - Allow aggregate/preAggregate to force complete group&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10474&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10474&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; We should add support for end users to specify a special header in the returned message&#010;that will force the group to be complete, such as&#010;&gt; Exchange.AGGREGATE_FORCE_COMPLETE, true&#010;&gt; This can help the use case as described here&#010;&gt; http://stackoverflow.com/questions/40546189/aggregate-only-consecutive-exchanges-with-same-correlation-key&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
285,287,,[jira] [Resolved] (CAMEL-10786) Create camel-azure component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13020253.1478939201000.234302.1491563201657%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:06:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10474?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-10474:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Aggregator - Allow aggregate/preAggregate to force complete group&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10474&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10474&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; We should add support for end users to specify a special header in the returned message&#010;that will force the group to be complete, such as&#010;&gt; Exchange.AGGREGATE_FORCE_COMPLETE, true&#010;&gt; This can help the use case as described here&#010;&gt; http://stackoverflow.com/questions/40546189/aggregate-only-consecutive-exchanges-with-same-correlation-key&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
286,288,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-10786) Create camel-azure component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13040135.1486132569000.234309.1491563201714%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:06:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10786?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-10786.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Create camel-azure component&#010;&gt; ----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10786&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10786&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Sergey Beryozkin&#010;&gt;            Assignee: Sergey Beryozkin&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;         Attachments: camel10786.txt&#010;&gt;&#010;&gt;&#010;&gt; This component will provide a support for communicating with Microsoft Azure services.&#010;Blob service will be supported first.&#010;&gt; Support for Queue service will come next&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
287,289,Sergey Beryozkin (JIRA),  [jira] [Commented] (CAMEL-10786) Create camel-azure component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13040135.1486132569000.234328.1491563442150%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:10:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10786?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960612#comment-15960612&#010;] &#010;&#010;Sergey Beryozkin commented on CAMEL-10786:&#010;------------------------------------------&#010;&#010;Hi Claus, thanks, I've been keeping this JIRA open till a possible 3rd party PR synchronization&#010;against the new component, but it will be indeed better to open new issues related to this&#010;component going forward, cheers &#010;&#010;&gt; Create camel-azure component&#010;&gt; ----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10786&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10786&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Sergey Beryozkin&#010;&gt;            Assignee: Sergey Beryozkin&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;         Attachments: camel10786.txt&#010;&gt;&#010;&gt;&#010;&gt; This component will provide a support for communicating with Microsoft Azure services.&#010;Blob service will be supported first.&#010;&gt; Support for Queue service will come next&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
288,290,,[jira] [Updated] (CAMEL-10816) Figure out how to enable the Camel Azure component tests,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13040135.1486132569000.234328.1491563442150%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:10:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10786?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15960612#comment-15960612&#010;] &#010;&#010;Sergey Beryozkin commented on CAMEL-10786:&#010;------------------------------------------&#010;&#010;Hi Claus, thanks, I've been keeping this JIRA open till a possible 3rd party PR synchronization&#010;against the new component, but it will be indeed better to open new issues related to this&#010;component going forward, cheers &#010;&#010;&gt; Create camel-azure component&#010;&gt; ----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10786&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10786&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Sergey Beryozkin&#010;&gt;            Assignee: Sergey Beryozkin&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;         Attachments: camel10786.txt&#010;&gt;&#010;&gt;&#010;&gt; This component will provide a support for communicating with Microsoft Azure services.&#010;Blob service will be supported first.&#010;&gt; Support for Queue service will come next&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
289,291,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-10816) Figure out how to enable the Camel Azure component tests,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13042080.1486737114000.234312.1491563261693%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:07:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10816?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-10816:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Figure out how to enable the Camel Azure component tests&#010;&gt; --------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10816&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10816&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;            Reporter: Sergey Beryozkin&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; So far the possible options include:&#010;&gt; - requesting from the Azure team to release the Azure emulator for Linux&#010;&gt;   (and asking them to make sure it can be started not only manually - even if the emulator&#010;runs on Windows only to at least consider doing the Windows integration tests)&#010;&gt; - seeking the test account sponsorship options, ex, ask the Azure team to create some&#010;test playground for Blob/Queue/etc which can be invoked remotely  &#010;&gt;  &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
290,292,,[jira] [Created] (CAMEL-11121) Create a Camel-gRPC karaf feature,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13042080.1486737114000.234312.1491563261693%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:07:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10816?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-10816:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Figure out how to enable the Camel Azure component tests&#010;&gt; --------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10816&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10816&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;            Reporter: Sergey Beryozkin&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; So far the possible options include:&#010;&gt; - requesting from the Azure team to release the Azure emulator for Linux&#010;&gt;   (and asking them to make sure it can be started not only manually - even if the emulator&#010;runs on Windows only to at least consider doing the Windows integration tests)&#010;&gt; - seeking the test account sponsorship options, ex, ask the Azure team to create some&#010;test playground for Blob/Queue/etc which can be invoked remotely  &#010;&gt;  &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
291,293,Andrea Cosentino (JIRA),  [jira] [Created] (CAMEL-11121) Create a Camel-gRPC karaf feature,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062399.1491565824000.234474.1491565841611%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:50:41 GMT",Andrea Cosentino created CAMEL-11121:&#010;----------------------------------------&#010;&#010;             Summary: Create a Camel-gRPC karaf feature&#010;                 Key: CAMEL-11121&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11121&#010;             Project: Camel&#010;          Issue Type: Task&#010;          Components: camel-grpc&#010;            Reporter: Andrea Cosentino&#010;            Assignee: Andrea Cosentino&#010;            Priority: Minor&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
292,294,,[jira] [Updated] (CAMEL-10807) Create camel-reactor component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062399.1491565824000.234474.1491565841611%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 11:50:41 GMT",Andrea Cosentino created CAMEL-11121:&#010;----------------------------------------&#010;&#010;             Summary: Create a Camel-gRPC karaf feature&#010;                 Key: CAMEL-11121&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11121&#010;             Project: Camel&#010;          Issue Type: Task&#010;          Components: camel-grpc&#010;            Reporter: Andrea Cosentino&#010;            Assignee: Andrea Cosentino&#010;            Priority: Minor&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
293,295,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-10807) Create camel-reactor component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13041419.1486569983000.234698.1491568001601%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 12:26:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10807?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10807:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Create camel-reactor component&#010;&gt; ------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10807&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10807&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; A we have now camel-reactive-streams it would be nice to have a Reactor Core implementation&#010;of the camel-reactive-streams API&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
294,296,Luca Burgazzoli (JIRA),  [jira] [Work started] (CAMEL-10807) Create camel-reactor component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13041419.1486569983000.234695.1491568001576%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 12:26:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10807?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Work on CAMEL-10807 started by Luca Burgazzoli.&#010;-----------------------------------------------&#010;&gt; Create camel-reactor component&#010;&gt; ------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10807&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10807&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; A we have now camel-reactive-streams it would be nice to have a Reactor Core implementation&#010;of the camel-reactive-streams API&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
295,297,,[jira] [Created] (CAMEL-11122) camel-reactive-streams - Add more JMX information,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13041419.1486569983000.234695.1491568001576%40Atlassian.JIRA%3E,issues,"Fri, 07 Apr 2017 12:26:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10807?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Work on CAMEL-10807 started by Luca Burgazzoli.&#010;-----------------------------------------------&#010;&gt; Create camel-reactor component&#010;&gt; ------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10807&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10807&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; A we have now camel-reactive-streams it would be nice to have a Reactor Core implementation&#010;of the camel-reactive-streams API&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
296,298,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11122) camel-reactive-streams - Add more JMX information,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062631.1491645235000.240860.1491645281557%40Atlassian.JIRA%3E,issues,"Sat, 08 Apr 2017 09:54:41 GMT","Claus Ibsen created CAMEL-11122:&#010;-----------------------------------&#010;&#010;             Summary: camel-reactive-streams - Add more JMX information&#010;                 Key: CAMEL-11122&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11122&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-reactive-streams&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.20.0&#010;&#010;&#010;It would be good to have more runtime statistics in JMX for example&#010;&#010;the endpoint should show its configured options as attributes such as concurrent consumers,&#010;max inflight etc.&#010;&#010;the consumer should show the number of pending messages in the internal buffer, etc. The latter&#010;can help find out if your back pressure strategy is correct, to see if the consumer can keep&#010;up with incoming messages or not.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
297,299,Claus Ibsen (JIRA),  [jira] [Assigned] (CAMEL-11122) camel-reactive-streams - Add more JMX information,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062631.1491645235000.241255.1491655961524%40Atlassian.JIRA%3E,issues,"Sat, 08 Apr 2017 12:52:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11122?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reassigned CAMEL-11122:&#010;-----------------------------------&#010;&#010;    Assignee: Claus Ibsen&#010;&#010;&gt; camel-reactive-streams - Add more JMX information&#010;&gt; -------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11122&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11122&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-reactive-streams&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; It would be good to have more runtime statistics in JMX for example&#010;&gt; the endpoint should show its configured options as attributes such as concurrent consumers,&#010;max inflight etc.&#010;&gt; the consumer should show the number of pending messages in the internal buffer, etc.&#010;The latter can help find out if your back pressure strategy is correct, to see if the consumer&#010;can keep up with incoming messages or not.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
298,300,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11122) camel-reactive-streams - Add more JMX information,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062631.1491645235000.241378.1491658902110%40Atlassian.JIRA%3E,issues,"Sat, 08 Apr 2017 13:41:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11122?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11122:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.20.0)&#010;                   2.19.0&#010;&#010;&gt; camel-reactive-streams - Add more JMX information&#010;&gt; -------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11122&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11122&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-reactive-streams&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; It would be good to have more runtime statistics in JMX for example&#010;&gt; the endpoint should show its configured options as attributes such as concurrent consumers,&#010;max inflight etc.&#010;&gt; the consumer should show the number of pending messages in the internal buffer, etc.&#010;The latter can help find out if your back pressure strategy is correct, to see if the consumer&#010;can keep up with incoming messages or not.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
299,301,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11122) camel-reactive-streams - Add more JMX information,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062631.1491645235000.241379.1491658961523%40Atlassian.JIRA%3E,issues,"Sat, 08 Apr 2017 13:42:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11122?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15961839#comment-15961839&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11122:&#010;-------------------------------------&#010;&#010;Under services the mbean for CamelReactiveStreamsServiceImpl now has tabular details.&#010;&#010;&#010;&gt; camel-reactive-streams - Add more JMX information&#010;&gt; -------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11122&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11122&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-reactive-streams&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; It would be good to have more runtime statistics in JMX for example&#010;&gt; the endpoint should show its configured options as attributes such as concurrent consumers,&#010;max inflight etc.&#010;&gt; the consumer should show the number of pending messages in the internal buffer, etc.&#010;The latter can help find out if your back pressure strategy is correct, to see if the consumer&#010;can keep up with incoming messages or not.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
300,302,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11122) camel-reactive-streams - Add more JMX information,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062631.1491645235000.242588.1491724361606%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 07:52:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11122?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15962060#comment-15962060&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11122:&#010;-------------------------------------&#010;&#010;The camel publisher mbean information should be improved to list its subscribers and their&#010;details as well. That is like a nested table unless we flattern the table if we can have some&#010;kind of subscriber id to use as key&#010;&#010;&gt; camel-reactive-streams - Add more JMX information&#010;&gt; -------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11122&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11122&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-reactive-streams&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; It would be good to have more runtime statistics in JMX for example&#010;&gt; the endpoint should show its configured options as attributes such as concurrent consumers,&#010;max inflight etc.&#010;&gt; the consumer should show the number of pending messages in the internal buffer, etc.&#010;The latter can help find out if your back pressure strategy is correct, to see if the consumer&#010;can keep up with incoming messages or not.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
301,303,Claus Ibsen (JIRA),  [jira] [Assigned] (CAMEL-11122) camel-reactive-streams - Add more JMX information,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062631.1491645235000.265399.1492003541753%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 13:25:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11122?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reassigned CAMEL-11122:&#010;-----------------------------------&#010;&#010;    Assignee:     (was: Claus Ibsen)&#010;&#010;&gt; camel-reactive-streams - Add more JMX information&#010;&gt; -------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11122&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11122&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-reactive-streams&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; It would be good to have more runtime statistics in JMX for example&#010;&gt; the endpoint should show its configured options as attributes such as concurrent consumers,&#010;max inflight etc.&#010;&gt; the consumer should show the number of pending messages in the internal buffer, etc.&#010;The latter can help find out if your back pressure strategy is correct, to see if the consumer&#010;can keep up with incoming messages or not.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
302,304,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11122) camel-reactive-streams - Add more JMX information,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062631.1491645235000.265392.1492003541694%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 13:25:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11122?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11122:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; camel-reactive-streams - Add more JMX information&#010;&gt; -------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11122&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11122&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-reactive-streams&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; It would be good to have more runtime statistics in JMX for example&#010;&gt; the endpoint should show its configured options as attributes such as concurrent consumers,&#010;max inflight etc.&#010;&gt; the consumer should show the number of pending messages in the internal buffer, etc.&#010;The latter can help find out if your back pressure strategy is correct, to see if the consumer&#010;can keep up with incoming messages or not.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
303,305,,[jira] [Created] (CAMEL-11123) Rename CamelReactiveStreamsServiceImpl to DefaultCamelReactiveStreamsService,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062631.1491645235000.265392.1492003541694%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 13:25:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11122?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11122:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; camel-reactive-streams - Add more JMX information&#010;&gt; -------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11122&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11122&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-reactive-streams&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; It would be good to have more runtime statistics in JMX for example&#010;&gt; the endpoint should show its configured options as attributes such as concurrent consumers,&#010;max inflight etc.&#010;&gt; the consumer should show the number of pending messages in the internal buffer, etc.&#010;The latter can help find out if your back pressure strategy is correct, to see if the consumer&#010;can keep up with incoming messages or not.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
304,306,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11123) Rename CamelReactiveStreamsServiceImpl to DefaultCamelReactiveStreamsService,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062636.1491655637000.241251.1491655661522%40Atlassian.JIRA%3E,issues,"Sat, 08 Apr 2017 12:47:41 GMT","Claus Ibsen created CAMEL-11123:&#010;-----------------------------------&#010;&#010;             Summary: Rename CamelReactiveStreamsServiceImpl to DefaultCamelReactiveStreamsService&#010;                 Key: CAMEL-11123&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11123&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-reactive-streams&#010;    Affects Versions: 2.19.0&#010;            Reporter: Claus Ibsen&#010;            Priority: Minor&#010;             Fix For: 2.19.0&#010;&#010;&#010;This is the naming convention we use in camel, and also the name it will be registered in&#010;JMX etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
305,307,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11123) Rename CamelReactiveStreamsServiceImpl to DefaultCamelReactiveStreamsService,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062636.1491655637000.242639.1491726401539%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 08:26:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11123?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11123.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;&gt; Rename CamelReactiveStreamsServiceImpl to DefaultCamelReactiveStreamsService&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11123&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11123&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-reactive-streams&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; This is the naming convention we use in camel, and also the name it will be registered&#010;in JMX etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
306,308,,[jira] [Created] (CAMEL-11124) camel-reactive-streams - Allow to silently ignore discarded messages,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062636.1491655637000.242639.1491726401539%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 08:26:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11123?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11123.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;&gt; Rename CamelReactiveStreamsServiceImpl to DefaultCamelReactiveStreamsService&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11123&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11123&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-reactive-streams&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; This is the naming convention we use in camel, and also the name it will be registered&#010;in JMX etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
307,309,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11124) camel-reactive-streams - Allow to silently ignore discarded messages,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062712.1491737380000.242905.1491737381523%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 11:29:41 GMT","Claus Ibsen created CAMEL-11124:&#010;-----------------------------------&#010;&#010;             Summary: camel-reactive-streams - Allow to silently ignore discarded messages&#010;                 Key: CAMEL-11124&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11124&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-reactive-streams&#010;    Affects Versions: 2.19.0&#010;            Reporter: Claus Ibsen&#010;&#010;&#010;If you want to discard messages and use a policy of&#010;{code}&#010;.to(""reactive-streams:inbox?backpressureStrategy=LATEST"");&#010;{code}&#010;&#010;Then Camel will thrown an exception if its discarded&#010;{code}&#010;java.lang.IllegalStateException: Exchange Exchange[ID-davsclaus-air-52789-1491737146614-0-450]&#010;discarded by backpressure strategy LATEST&#010;&#009;at org.apache.camel.component.reactive.streams.engine.CamelSubscription.publish(CamelSubscription.java:235)&#010;&#009;at org.apache.camel.component.reactive.streams.engine.CamelPublisher.publish(CamelPublisher.java:98)&#010;&#009;at org.apache.camel.component.reactive.streams.engine.DefaultCamelReactiveStreamsService.sendCamelExchange(DefaultCamelReactiveStreamsService.java:123)&#010;&#009;at org.apache.camel.component.reactive.streams.ReactiveStreamsProducer.process(ReactiveStreamsProducer.java:44)&#010;&#009;at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;&#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:541)&#010;&#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198)&#010;&#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&#009;at org.apache.camel.processor.DelayProcessorSupport.processDelay(DelayProcessorSupport.java:100)&#010;&#009;at org.apache.camel.processor.DelayProcessorSupport.process(DelayProcessorSupport.java:168)&#010;&#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:541)&#010;&#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198)&#010;&#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198)&#010;&#009;at org.apache.camel.component.seda.SedaConsumer.sendToConsumers(SedaConsumer.java:298)&#010;&#009;at org.apache.camel.component.seda.SedaConsumer.doRun(SedaConsumer.java:207)&#010;&#009;at org.apache.camel.component.seda.SedaConsumer.run(SedaConsumer.java:154)&#010;&#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&#009;at java.lang.Thread.run(Thread.java:745)&#010;{code}&#010;&#010;Which is likely not something you want as you told it to just keep latest.&#010;&#010;We should allow the user to deal with the discarded messages if he/she needs to in some other&#010;way.&#010;&#010;And we should maybe also keep runtime statistics of the number of discarded messages so this&#010;can be used for monitoring.&#010;&#010;Also we should introduce a specific CamelReactiveException so you can configure Camels error&#010;handler to react on it.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
308,310,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11124) camel-reactive-streams - Allow to silently ignore discarded messages,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062712.1491737380000.242982.1491739301520%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 12:01:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11124?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15962120#comment-15962120&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11124:&#010;-------------------------------------&#010;&#010;Added new exception ReactiveStreamsDiscardedException which you can then ignore by&#010;{code}&#010;                // just ignore discarded streams by marking them as handled&#010;                onException(ReactiveStreamsDiscardedException.class).handled(true);&#010;{code}&#010;&#010;&gt; camel-reactive-streams - Allow to silently ignore discarded messages&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11124&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11124&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-reactive-streams&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;&#010;&gt; If you want to discard messages and use a policy of&#010;&gt; {code}&#010;&gt; .to(""reactive-streams:inbox?backpressureStrategy=LATEST"");&#010;&gt; {code}&#010;&gt; Then Camel will thrown an exception if its discarded&#010;&gt; {code}&#010;&gt; java.lang.IllegalStateException: Exchange Exchange[ID-davsclaus-air-52789-1491737146614-0-450]&#010;discarded by backpressure strategy LATEST&#010;&gt; &#009;at org.apache.camel.component.reactive.streams.engine.CamelSubscription.publish(CamelSubscription.java:235)&#010;&gt; &#009;at org.apache.camel.component.reactive.streams.engine.CamelPublisher.publish(CamelPublisher.java:98)&#010;&gt; &#009;at org.apache.camel.component.reactive.streams.engine.DefaultCamelReactiveStreamsService.sendCamelExchange(DefaultCamelReactiveStreamsService.java:123)&#010;&gt; &#009;at org.apache.camel.component.reactive.streams.ReactiveStreamsProducer.process(ReactiveStreamsProducer.java:44)&#010;&gt; &#009;at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:541)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.DelayProcessorSupport.processDelay(DelayProcessorSupport.java:100)&#010;&gt; &#009;at org.apache.camel.processor.DelayProcessorSupport.process(DelayProcessorSupport.java:168)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:541)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198)&#010;&gt; &#009;at org.apache.camel.component.seda.SedaConsumer.sendToConsumers(SedaConsumer.java:298)&#010;&gt; &#009;at org.apache.camel.component.seda.SedaConsumer.doRun(SedaConsumer.java:207)&#010;&gt; &#009;at org.apache.camel.component.seda.SedaConsumer.run(SedaConsumer.java:154)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; {code}&#010;&gt; Which is likely not something you want as you told it to just keep latest.&#010;&gt; We should allow the user to deal with the discarded messages if he/she needs to in some&#010;other way.&#010;&gt; And we should maybe also keep runtime statistics of the number of discarded messages&#010;so this can be used for monitoring.&#010;&gt; Also we should introduce a specific CamelReactiveException so you can configure Camels&#010;error handler to react on it.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
309,311,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11124) camel-reactive-streams - Allow to silently ignore discarded messages,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062712.1491737380000.242983.1491739361539%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 12:02:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11124?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11124.&#010;---------------------------------&#010;       Resolution: Fixed&#010;         Assignee: Claus Ibsen&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; camel-reactive-streams - Allow to silently ignore discarded messages&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11124&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11124&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-reactive-streams&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; If you want to discard messages and use a policy of&#010;&gt; {code}&#010;&gt; .to(""reactive-streams:inbox?backpressureStrategy=LATEST"");&#010;&gt; {code}&#010;&gt; Then Camel will thrown an exception if its discarded&#010;&gt; {code}&#010;&gt; java.lang.IllegalStateException: Exchange Exchange[ID-davsclaus-air-52789-1491737146614-0-450]&#010;discarded by backpressure strategy LATEST&#010;&gt; &#009;at org.apache.camel.component.reactive.streams.engine.CamelSubscription.publish(CamelSubscription.java:235)&#010;&gt; &#009;at org.apache.camel.component.reactive.streams.engine.CamelPublisher.publish(CamelPublisher.java:98)&#010;&gt; &#009;at org.apache.camel.component.reactive.streams.engine.DefaultCamelReactiveStreamsService.sendCamelExchange(DefaultCamelReactiveStreamsService.java:123)&#010;&gt; &#009;at org.apache.camel.component.reactive.streams.ReactiveStreamsProducer.process(ReactiveStreamsProducer.java:44)&#010;&gt; &#009;at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:541)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.DelayProcessorSupport.processDelay(DelayProcessorSupport.java:100)&#010;&gt; &#009;at org.apache.camel.processor.DelayProcessorSupport.process(DelayProcessorSupport.java:168)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:541)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198)&#010;&gt; &#009;at org.apache.camel.component.seda.SedaConsumer.sendToConsumers(SedaConsumer.java:298)&#010;&gt; &#009;at org.apache.camel.component.seda.SedaConsumer.doRun(SedaConsumer.java:207)&#010;&gt; &#009;at org.apache.camel.component.seda.SedaConsumer.run(SedaConsumer.java:154)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; {code}&#010;&gt; Which is likely not something you want as you told it to just keep latest.&#010;&gt; We should allow the user to deal with the discarded messages if he/she needs to in some&#010;other way.&#010;&gt; And we should maybe also keep runtime statistics of the number of discarded messages&#010;so this can be used for monitoring.&#010;&gt; Also we should introduce a specific CamelReactiveException so you can configure Camels&#010;error handler to react on it.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
310,312,,[jira] [Created] (CAMEL-11125) camel-reactive-streams - Consumer should allow to not refill so frequently,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062712.1491737380000.242983.1491739361539%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 12:02:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11124?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11124.&#010;---------------------------------&#010;       Resolution: Fixed&#010;         Assignee: Claus Ibsen&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; camel-reactive-streams - Allow to silently ignore discarded messages&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11124&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11124&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-reactive-streams&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; If you want to discard messages and use a policy of&#010;&gt; {code}&#010;&gt; .to(""reactive-streams:inbox?backpressureStrategy=LATEST"");&#010;&gt; {code}&#010;&gt; Then Camel will thrown an exception if its discarded&#010;&gt; {code}&#010;&gt; java.lang.IllegalStateException: Exchange Exchange[ID-davsclaus-air-52789-1491737146614-0-450]&#010;discarded by backpressure strategy LATEST&#010;&gt; &#009;at org.apache.camel.component.reactive.streams.engine.CamelSubscription.publish(CamelSubscription.java:235)&#010;&gt; &#009;at org.apache.camel.component.reactive.streams.engine.CamelPublisher.publish(CamelPublisher.java:98)&#010;&gt; &#009;at org.apache.camel.component.reactive.streams.engine.DefaultCamelReactiveStreamsService.sendCamelExchange(DefaultCamelReactiveStreamsService.java:123)&#010;&gt; &#009;at org.apache.camel.component.reactive.streams.ReactiveStreamsProducer.process(ReactiveStreamsProducer.java:44)&#010;&gt; &#009;at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:541)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt; &#009;at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt; &#009;at org.apache.camel.processor.DelayProcessorSupport.processDelay(DelayProcessorSupport.java:100)&#010;&gt; &#009;at org.apache.camel.processor.DelayProcessorSupport.process(DelayProcessorSupport.java:168)&#010;&gt; &#009;at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:541)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198)&#010;&gt; &#009;at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198)&#010;&gt; &#009;at org.apache.camel.component.seda.SedaConsumer.sendToConsumers(SedaConsumer.java:298)&#010;&gt; &#009;at org.apache.camel.component.seda.SedaConsumer.doRun(SedaConsumer.java:207)&#010;&gt; &#009;at org.apache.camel.component.seda.SedaConsumer.run(SedaConsumer.java:154)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; {code}&#010;&gt; Which is likely not something you want as you told it to just keep latest.&#010;&gt; We should allow the user to deal with the discarded messages if he/she needs to in some&#010;other way.&#010;&gt; And we should maybe also keep runtime statistics of the number of discarded messages&#010;so this can be used for monitoring.&#010;&gt; Also we should introduce a specific CamelReactiveException so you can configure Camels&#010;error handler to react on it.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
311,313,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11125) camel-reactive-streams - Consumer should allow to not refill so frequently,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062715.1491744525000.243095.1491744581559%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 13:29:41 GMT","Claus Ibsen created CAMEL-11125:&#010;-----------------------------------&#010;&#010;             Summary: camel-reactive-streams - Consumer should allow to not refill so frequently&#010;                 Key: CAMEL-11125&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11125&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-reactive-streams&#010;            Reporter: Claus Ibsen&#010;&#010;&#010;Every time a consumer has completed onNext it calculates a refill, and because it has completed&#010;1 message, it will always ask for at least 1 message. &#010;&#010;This happens even if there is 127 messages already in the buffer. &#010;&#010;We should probably have some way of having a low/high watermark so if the buffer has many&#010;messages already we dont need to refill so frequently.&#010;&#010;This happens in the code: org.apache.camel.component.reactive.streams.engine.CamelSubscriber#onNext&#010;&#010;By having those watermark threshold we allow to not be so chatty and request data all the&#010;time, but instead request data in more bulks. Otherwise chances are that we just keep requesting&#010;= 1 all the time.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
312,314,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11125) camel-reactive-streams - Consumer should allow to not refill so frequently,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062715.1491744525000.243099.1491744582003%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 13:29:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11125?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11125:&#010;--------------------------------&#010;    Affects Version/s: 2.19.0&#010;&#010;&gt; camel-reactive-streams - Consumer should allow to not refill so frequently&#010;&gt; --------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11125&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11125&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-reactive-streams&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;&#010;&gt; Every time a consumer has completed onNext it calculates a refill, and because it has&#010;completed 1 message, it will always ask for at least 1 message. &#010;&gt; This happens even if there is 127 messages already in the buffer. &#010;&gt; We should probably have some way of having a low/high watermark so if the buffer has&#010;many messages already we dont need to refill so frequently.&#010;&gt; This happens in the code: org.apache.camel.component.reactive.streams.engine.CamelSubscriber#onNext&#010;&gt; By having those watermark threshold we allow to not be so chatty and request data all&#010;the time, but instead request data in more bulks. Otherwise chances are that we just keep&#010;requesting = 1 all the time.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
313,315,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11125) camel-reactive-streams - Consumer should allow to not refill so frequently,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062715.1491744525000.243100.1491744641589%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 13:30:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11125?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11125:&#010;--------------------------------&#010;    Priority: Minor  (was: Major)&#010;&#010;&gt; camel-reactive-streams - Consumer should allow to not refill so frequently&#010;&gt; --------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11125&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11125&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-reactive-streams&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; Every time a consumer has completed onNext it calculates a refill, and because it has&#010;completed 1 message, it will always ask for at least 1 message. &#010;&gt; This happens even if there is 127 messages already in the buffer. &#010;&gt; We should probably have some way of having a low/high watermark so if the buffer has&#010;many messages already we dont need to refill so frequently.&#010;&gt; This happens in the code: org.apache.camel.component.reactive.streams.engine.CamelSubscriber#onNext&#010;&gt; By having those watermark threshold we allow to not be so chatty and request data all&#010;the time, but instead request data in more bulks. Otherwise chances are that we just keep&#010;requesting = 1 all the time.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
314,316,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11125) camel-reactive-streams - Consumer should allow to not refill so frequently,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062715.1491744525000.243101.1491744761568%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 13:32:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11125?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15962138#comment-15962138&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11125:&#010;-------------------------------------&#010;&#010;An example with 1000 messages then notice how we receive 128 from the start, and then almost&#010;all the time request 1 message. This is when using 10 concurrent consumers&#010;{code}&#010;2017-04-09 15:30:50,149 [main           ] INFO  nsumerInflightBackPressureTest - Requesting&#010;128 messages&#010;2017-04-09 15:30:50,189 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;2 messages&#010;2017-04-09 15:30:50,189 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;1 messages&#010;2017-04-09 15:30:50,189 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;1 messages&#010;2017-04-09 15:30:50,189 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;1 messages&#010;2017-04-09 15:30:50,189 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;1 messages&#010;2017-04-09 15:30:50,189 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;1 messages&#010;2017-04-09 15:30:50,190 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;1 messages&#010;2017-04-09 15:30:50,190 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;1 messages&#010;2017-04-09 15:30:50,190 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;1 messages&#010;2017-04-09 15:30:50,200 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;1 messages&#010;2017-04-09 15:30:50,201 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;1 messages&#010;2017-04-09 15:30:50,201 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;1 messages&#010;2017-04-09 15:30:50,200 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;1 messages&#010;2017-04-09 15:30:50,201 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;1 messages&#010;2017-04-09 15:30:50,201 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;1 messages&#010;2017-04-09 15:30:50,201 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;1 messages&#010;2017-04-09 15:30:50,201 [streams://inbox] INFO  nsumerInflightBackPressureTest - Requesting&#010;1 messages&#010;{code}&#010;&#010;&gt; camel-reactive-streams - Consumer should allow to not refill so frequently&#010;&gt; --------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11125&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11125&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-reactive-streams&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; Every time a consumer has completed onNext it calculates a refill, and because it has&#010;completed 1 message, it will always ask for at least 1 message. &#010;&gt; This happens even if there is 127 messages already in the buffer. &#010;&gt; We should probably have some way of having a low/high watermark so if the buffer has&#010;many messages already we dont need to refill so frequently.&#010;&gt; This happens in the code: org.apache.camel.component.reactive.streams.engine.CamelSubscriber#onNext&#010;&gt; By having those watermark threshold we allow to not be so chatty and request data all&#010;the time, but instead request data in more bulks. Otherwise chances are that we just keep&#010;requesting = 1 all the time.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
315,317,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11125) camel-reactive-streams - Consumer should allow to not refill so frequently,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062715.1491744525000.243106.1491745001527%40Atlassian.JIRA%3E,issues,"Sun, 09 Apr 2017 13:36:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11125?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15962140#comment-15962140&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11125:&#010;-------------------------------------&#010;&#010;You can find an example here&#010;https://github.com/camelinaction/camelinaction2/blob/master/chapter21/rx-java2/src/test/java/camelinaction/CamelConsumerBackPressureTest.java&#010;&#010;Ideally we should have it to request when watermarks are &lt; X %, such as 25% etc (round&#010;up). So with 10 max inflight it would be &lt;= 3. So it would often request 7 new messages&#010;instead of 1 every time.&#010;&#010;&gt; camel-reactive-streams - Consumer should allow to not refill so frequently&#010;&gt; --------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11125&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11125&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-reactive-streams&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; Every time a consumer has completed onNext it calculates a refill, and because it has&#010;completed 1 message, it will always ask for at least 1 message. &#010;&gt; This happens even if there is 127 messages already in the buffer. &#010;&gt; We should probably have some way of having a low/high watermark so if the buffer has&#010;many messages already we dont need to refill so frequently.&#010;&gt; This happens in the code: org.apache.camel.component.reactive.streams.engine.CamelSubscriber#onNext&#010;&gt; By having those watermark threshold we allow to not be so chatty and request data all&#010;the time, but instead request data in more bulks. Otherwise chances are that we just keep&#010;requesting = 1 all the time.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
316,318,Nicola Ferraro (JIRA),  [jira] [Assigned] (CAMEL-11125) camel-reactive-streams - Consumer should allow to not refill so frequently,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062715.1491744525000.276113.1492093601563%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 14:26:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11125?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro reassigned CAMEL-11125:&#010;--------------------------------------&#010;&#010;    Assignee: Nicola Ferraro&#010;&#010;&gt; camel-reactive-streams - Consumer should allow to not refill so frequently&#010;&gt; --------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11125&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11125&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-reactive-streams&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; Every time a consumer has completed onNext it calculates a refill, and because it has&#010;completed 1 message, it will always ask for at least 1 message. &#010;&gt; This happens even if there is 127 messages already in the buffer. &#010;&gt; We should probably have some way of having a low/high watermark so if the buffer has&#010;many messages already we dont need to refill so frequently.&#010;&gt; This happens in the code: org.apache.camel.component.reactive.streams.engine.CamelSubscriber#onNext&#010;&gt; By having those watermark threshold we allow to not be so chatty and request data all&#010;the time, but instead request data in more bulks. Otherwise chances are that we just keep&#010;requesting = 1 all the time.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
317,319,,"[jira] [Updated] (CAMEL-11017) if empty directory exists in source directory, file consumer does not pass directory structure to destination",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062715.1491744525000.276113.1492093601563%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 14:26:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11125?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro reassigned CAMEL-11125:&#010;--------------------------------------&#010;&#010;    Assignee: Nicola Ferraro&#010;&#010;&gt; camel-reactive-streams - Consumer should allow to not refill so frequently&#010;&gt; --------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11125&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11125&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-reactive-streams&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; Every time a consumer has completed onNext it calculates a refill, and because it has&#010;completed 1 message, it will always ask for at least 1 message. &#010;&gt; This happens even if there is 127 messages already in the buffer. &#010;&gt; We should probably have some way of having a low/high watermark so if the buffer has&#010;many messages already we dont need to refill so frequently.&#010;&gt; This happens in the code: org.apache.camel.component.reactive.streams.engine.CamelSubscriber#onNext&#010;&gt; By having those watermark threshold we allow to not be so chatty and request data all&#010;the time, but instead request data in more bulks. Otherwise chances are that we just keep&#010;requesting = 1 all the time.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
318,320,onder sezgin (JIRA),"  [jira] [Updated] (CAMEL-11017) if empty directory exists in source directory, file consumer does not pass directory structure to destination",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13056278.1489581828000.245030.1491805481602%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 06:24:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11017?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;onder sezgin updated CAMEL-11017:&#010;---------------------------------&#010;    Patch Info: Patch Available&#010;&#010;&gt; if empty directory exists in source directory, file consumer does not pass directory&#010;structure to destination&#010;&gt; -------------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11017&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11017&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: onder sezgin&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;         Attachments: FileConsumerEmptyDirectoryTest.java&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
319,321,,[jira] [Created] (CAMEL-11126) camel-connector - Make it easy to schedule a connector,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13056278.1489581828000.245030.1491805481602%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 06:24:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11017?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;onder sezgin updated CAMEL-11017:&#010;---------------------------------&#010;    Patch Info: Patch Available&#010;&#010;&gt; if empty directory exists in source directory, file consumer does not pass directory&#010;structure to destination&#010;&gt; -------------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11017&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11017&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: onder sezgin&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;         Attachments: FileConsumerEmptyDirectoryTest.java&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
320,322,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11126) camel-connector - Make it easy to schedule a connector,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062816.1491813112000.245698.1491813161572%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 08:32:41 GMT","Claus Ibsen created CAMEL-11126:&#010;-----------------------------------&#010;&#010;             Summary: camel-connector - Make it easy to schedule a connector&#010;                 Key: CAMEL-11126&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11126&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-connector&#010;            Reporter: Claus Ibsen&#010;            Assignee: Claus Ibsen&#010;             Fix For: 2.19.0&#010;&#010;&#010;You may want to take a connector and make it scheduled so its trigger X interval.&#010;&#010;In other words take a ""to X"" and turn that into ""from timer to X"" where the user just configure&#010;a period = 5000 to say every 5th second etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
321,323,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11126) camel-connector - Make it easy to schedule a connector,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062816.1491813112000.254515.1491900461705%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 08:47:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11126?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11126.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; camel-connector - Make it easy to schedule a connector&#010;&gt; ------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11126&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11126&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-connector&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; You may want to take a connector and make it scheduled so its trigger X interval.&#010;&gt; In other words take a ""to X"" and turn that into ""from timer to X"" where the user just&#010;configure a period = 5000 to say every 5th second etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
322,324,,[jira] [Created] (CAMEL-11127) ComponentVerifier : add support for producer/consumer options validation,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062816.1491813112000.254515.1491900461705%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 08:47:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11126?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11126.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; camel-connector - Make it easy to schedule a connector&#010;&gt; ------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11126&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11126&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-connector&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; You may want to take a connector and make it scheduled so its trigger X interval.&#010;&gt; In other words take a ""to X"" and turn that into ""from timer to X"" where the user just&#010;configure a period = 5000 to say every 5th second etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
323,325,Luca Burgazzoli (JIRA),  [jira] [Created] (CAMEL-11127) ComponentVerifier : add support for producer/consumer options validation,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062819.1491814460000.245821.1491814481969%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 08:54:41 GMT",Luca Burgazzoli created CAMEL-11127:&#010;---------------------------------------&#010;&#010;             Summary: ComponentVerifier : add support for producer/consumer options validation&#010;                 Key: CAMEL-11127&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11127&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;            Reporter: Luca Burgazzoli&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;As today the ComponentVerifier (Ping Check) perform a global validation i.e. it does not check&#010;if an option is consumer or producer only which is fine but there are cases where it could&#010;make sense to perform a validation for a specific side.&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
324,326,,[jira] [Created] (CAMEL-11128) camel-rest,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062819.1491814460000.245821.1491814481969%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 08:54:41 GMT",Luca Burgazzoli created CAMEL-11127:&#010;---------------------------------------&#010;&#010;             Summary: ComponentVerifier : add support for producer/consumer options validation&#010;                 Key: CAMEL-11127&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11127&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;            Reporter: Luca Burgazzoli&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;As today the ComponentVerifier (Ping Check) perform a global validation i.e. it does not check&#010;if an option is consumer or producer only which is fine but there are cases where it could&#010;make sense to perform a validation for a specific side.&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
325,327,Luca Burgazzoli (JIRA),  [jira] [Created] (CAMEL-11128) camel-rest,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062831.1491816149000.245946.1491816161535%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 09:22:41 GMT","Luca Burgazzoli created CAMEL-11128:&#010;---------------------------------------&#010;&#010;             Summary: camel-rest&#010;                 Key: CAMEL-11128&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11128&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;            Reporter: Luca Burgazzoli&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;camel-rest creates producer and consumer using a factory which signatures look like:&#010;&#010;{code:java}&#010;Producer createProducer(&#010;    CamelContext camelContext, &#010;    String host,&#010;    String verb, &#010;    String basePath, &#010;    String uriTemplate, &#010;    String queryParameters,&#010;    String consumes, &#010;    String produces, &#010;    Map&lt;String, Object&gt; parameters) throws Exception;&#010;{code}&#010;&#010;The factory method are a mix of specific parameters like host, basePath, etc. and something&#010;more open like parameters. It would be nice to explore the possibility to bring some http-commons&#010;standardization here so we can put more stuffs in the generic ""parameters"" options which would&#010;reduce the difference to setup and validate rest components.&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
326,328,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-11128) camel-rest : rest factories should leverage http-commons,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062831.1491816149000.245963.1491816461666%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 09:27:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11128?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-11128:&#010;------------------------------------&#010;    Issue Type: Wish  (was: Improvement)&#010;&#010;&gt; camel-rest : rest factories should leverage http-commons&#010;&gt; --------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11128&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11128&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Wish&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; camel-rest creates producer and consumer using a factory which signatures look like:&#010;&gt; {code:java}&#010;&gt; Producer createProducer(&#010;&gt;     CamelContext camelContext, &#010;&gt;     String host,&#010;&gt;     String verb, &#010;&gt;     String basePath, &#010;&gt;     String uriTemplate, &#010;&gt;     String queryParameters,&#010;&gt;     String consumes, &#010;&gt;     String produces, &#010;&gt;     Map&lt;String, Object&gt; parameters) throws Exception;&#010;&gt; {code}&#010;&gt; The factory method are a mix of specific parameters like host, basePath, etc. and something&#010;more open like parameters. It would be nice to explore the possibility to bring some http-commons&#010;standardization here so we can put more stuffs in the generic ""parameters"" options which would&#010;reduce the difference to setup and validate rest components.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
327,329,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-11128) camel-rest : rest factories should leverage http-commons,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062831.1491816149000.245961.1491816461650%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 09:27:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11128?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-11128:&#010;------------------------------------&#010;    Summary: camel-rest : rest factories should leverage http-commons  (was: camel-rest)&#010;&#010;&gt; camel-rest : rest factories should leverage http-commons&#010;&gt; --------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11128&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11128&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; camel-rest creates producer and consumer using a factory which signatures look like:&#010;&gt; {code:java}&#010;&gt; Producer createProducer(&#010;&gt;     CamelContext camelContext, &#010;&gt;     String host,&#010;&gt;     String verb, &#010;&gt;     String basePath, &#010;&gt;     String uriTemplate, &#010;&gt;     String queryParameters,&#010;&gt;     String consumes, &#010;&gt;     String produces, &#010;&gt;     Map&lt;String, Object&gt; parameters) throws Exception;&#010;&gt; {code}&#010;&gt; The factory method are a mix of specific parameters like host, basePath, etc. and something&#010;more open like parameters. It would be nice to explore the possibility to bring some http-commons&#010;standardization here so we can put more stuffs in the generic ""parameters"" options which would&#010;reduce the difference to setup and validate rest components.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
328,330,,[jira] [Created] (CAMEL-11129) Capture fork/join pattern in OpenTracing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062831.1491816149000.245961.1491816461650%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 09:27:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11128?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-11128:&#010;------------------------------------&#010;    Summary: camel-rest : rest factories should leverage http-commons  (was: camel-rest)&#010;&#010;&gt; camel-rest : rest factories should leverage http-commons&#010;&gt; --------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11128&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11128&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; camel-rest creates producer and consumer using a factory which signatures look like:&#010;&gt; {code:java}&#010;&gt; Producer createProducer(&#010;&gt;     CamelContext camelContext, &#010;&gt;     String host,&#010;&gt;     String verb, &#010;&gt;     String basePath, &#010;&gt;     String uriTemplate, &#010;&gt;     String queryParameters,&#010;&gt;     String consumes, &#010;&gt;     String produces, &#010;&gt;     Map&lt;String, Object&gt; parameters) throws Exception;&#010;&gt; {code}&#010;&gt; The factory method are a mix of specific parameters like host, basePath, etc. and something&#010;more open like parameters. It would be nice to explore the possibility to bring some http-commons&#010;standardization here so we can put more stuffs in the generic ""parameters"" options which would&#010;reduce the difference to setup and validate rest components.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
329,331,Gary Brown (JIRA),  [jira] [Created] (CAMEL-11129) Capture fork/join pattern in OpenTracing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062865.1491822985000.246619.1491823001618%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 11:16:41 GMT","Gary Brown created CAMEL-11129:&#010;----------------------------------&#010;&#010;             Summary: Capture fork/join pattern in OpenTracing&#010;                 Key: CAMEL-11129&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11129&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;            Reporter: Gary Brown&#010;&#010;&#010;In the blog post http://www.hawkular.org/blog/2017/03/24/distributed-tracing-with-camel.html&#010;I instrumented the Loan Broker JMS example, which has a multicast/parallel and aggregation&#010;- but currently only the inbound/outbound endpoints create spans, so the opentracing data&#010;does not capture the fork/join structure.&#010;&#010;Therefore I wanted to explore ideas for how these control structures could be instrumented&#010;by the camel-opentracing component.&#010;&#010;As an initial spec, ideally what is required for the fork is a point where a 'fork' span could&#010;be created to act as the parent for a child span per concurrent path. This also means needing&#010;to be able to detect the start and end of the exchange for each path.&#010;&#010;Finally - when the join has been performed, need to gain access to the exchanges representing&#010;the concurrent paths, and associate the span context for each path with a new span representing&#010;the join point. Although haven't investigated in depth, potentially a proxy around the aggregation&#010;strategy might work - but not sure how this could be installed.&#010;&#010;This jira is just intended to investigate options, as currently the OpenTracing spec does&#010;not clearly define how this pattern would be represented, and would probably need additional&#010;reference types to be defined.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
330,332,,[jira] [Created] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062865.1491822985000.246619.1491823001618%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 11:16:41 GMT","Gary Brown created CAMEL-11129:&#010;----------------------------------&#010;&#010;             Summary: Capture fork/join pattern in OpenTracing&#010;                 Key: CAMEL-11129&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11129&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;            Reporter: Gary Brown&#010;&#010;&#010;In the blog post http://www.hawkular.org/blog/2017/03/24/distributed-tracing-with-camel.html&#010;I instrumented the Loan Broker JMS example, which has a multicast/parallel and aggregation&#010;- but currently only the inbound/outbound endpoints create spans, so the opentracing data&#010;does not capture the fork/join structure.&#010;&#010;Therefore I wanted to explore ideas for how these control structures could be instrumented&#010;by the camel-opentracing component.&#010;&#010;As an initial spec, ideally what is required for the fork is a point where a 'fork' span could&#010;be created to act as the parent for a child span per concurrent path. This also means needing&#010;to be able to detect the start and end of the exchange for each path.&#010;&#010;Finally - when the join has been performed, need to gain access to the exchanges representing&#010;the concurrent paths, and associate the span context for each path with a new span representing&#010;the join point. Although haven't investigated in depth, potentially a proxy around the aggregation&#010;strategy might work - but not sure how this could be installed.&#010;&#010;This jira is just intended to investigate options, as currently the OpenTracing spec does&#010;not clearly define how this pattern would be represented, and would probably need additional&#010;reference types to be defined.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
331,333,Tadayoshi Sato (JIRA),  [jira] [Created] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062874.1491825057000.246767.1491825102081%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 11:51:42 GMT","Tadayoshi Sato created CAMEL-11130:&#010;--------------------------------------&#010;&#010;             Summary: Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;                 Key: CAMEL-11130&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11130&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: karaf, tests&#010;    Affects Versions: 2.19.0&#010;            Reporter: Tadayoshi Sato&#010;&#010;&#010;Jenkins job Camel.trunk.itest.karaf https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.karaf/&#010;at first seems to pass green, but in reality it silently fails earlier and doesn't complete&#010;all the tests. It's because of phantom Karaf instances spawned in each test but somehow not&#010;being terminated normally.&#010;&#010;The consequence of this job not working is constant creeping in of dependency upgrades that&#010;break component features, thus jeopardising the reliability of using components on Karaf through&#010;features.&#010;&#010;Locally, instead of {{mvn test}} running {{./run-tests.sh}} can complete the test suite, so&#010;it is great if in some way we can use the script in the Jenkins job.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
332,334,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062874.1491825057000.253930.1491895182227%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 07:19:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11130?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11130:&#010;--------------------------------&#010;    Issue Type: Test  (was: Bug)&#010;&#010;&gt; Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11130&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11130&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: karaf, tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;&#010;&gt; Jenkins job Camel.trunk.itest.karaf https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.karaf/&#010;at first seems to pass green, but in reality it silently fails earlier and doesn't complete&#010;all the tests. It's because of phantom Karaf instances spawned in each test but somehow not&#010;being terminated normally.&#010;&gt; The consequence of this job not working is constant creeping in of dependency upgrades&#010;that break component features, thus jeopardising the reliability of using components on Karaf&#010;through features.&#010;&gt; Locally, instead of {{mvn test}} running {{./run-tests.sh}} can complete the test suite,&#010;so it is great if in some way we can use the script in the Jenkins job.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
333,335,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062874.1491825057000.255961.1491913061575%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 12:17:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11130?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15964286#comment-15964286&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11130:&#010;-------------------------------------&#010;&#010;Ah yeah lets see if we can do by running a shell script&#010;{code}&#010;#!/bin/bash&#010;cd tests/camel-itest-osgi&#010;./run-tests.sh&#010;{code}&#010;&#010;&#010;&gt; Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11130&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11130&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: karaf, tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;&#010;&gt; Jenkins job Camel.trunk.itest.karaf https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.karaf/&#010;at first seems to pass green, but in reality it silently fails earlier and doesn't complete&#010;all the tests. It's because of phantom Karaf instances spawned in each test but somehow not&#010;being terminated normally.&#010;&gt; The consequence of this job not working is constant creeping in of dependency upgrades&#010;that break component features, thus jeopardising the reliability of using components on Karaf&#010;through features.&#010;&gt; Locally, instead of {{mvn test}} running {{./run-tests.sh}} can complete the test suite,&#010;so it is great if in some way we can use the script in the Jenkins job.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
334,336,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062874.1491825057000.255963.1491913121541%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 12:18:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11130?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15964287#comment-15964287&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11130:&#010;-------------------------------------&#010;&#010;Running a job now. Not sure if I did the job configuration correct&#010;https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.osgi/1686/console&#010;&#010;&gt; Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11130&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11130&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: karaf, tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;&#010;&gt; Jenkins job Camel.trunk.itest.karaf https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.karaf/&#010;at first seems to pass green, but in reality it silently fails earlier and doesn't complete&#010;all the tests. It's because of phantom Karaf instances spawned in each test but somehow not&#010;being terminated normally.&#010;&gt; The consequence of this job not working is constant creeping in of dependency upgrades&#010;that break component features, thus jeopardising the reliability of using components on Karaf&#010;through features.&#010;&gt; Locally, instead of {{mvn test}} running {{./run-tests.sh}} can complete the test suite,&#010;so it is great if in some way we can use the script in the Jenkins job.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
335,337,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062874.1491825057000.255982.1491913541588%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 12:25:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11130?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15964291#comment-15964291&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11130:&#010;-------------------------------------&#010;&#010;Ah it seems to run it, but the script needs to be adjusted since the kill command is different&#010;{code}&#010;Killing Karaf to ensure no dangling karaf running&#010;kill: invalid argument k&#010;&#010;Usage:&#010; kill [options] &lt;pid&gt; [...]&#010;&#010;Options:&#010; &lt;pid&gt; [...]            send signal to every &lt;pid&gt; listed&#010; -&lt;signal&gt;, -s, --signal &lt;signal&gt;&#010;                        specify the &lt;signal&gt; to be sent&#010; -l, --list=[&lt;signal&gt;]  list all signal names, or convert one to a name&#010; -L, --table            list all signal names in a nice table&#010;&#010; -h, --help     display this help and exit&#010; -V, --version  output version information and exit&#010;&#010;For more details see kill(1).&#010;{code}&#010;&#010;And the first CXF test failed with connection not allowed&#010;&#010;&gt; Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11130&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11130&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: karaf, tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;&#010;&gt; Jenkins job Camel.trunk.itest.karaf https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.karaf/&#010;at first seems to pass green, but in reality it silently fails earlier and doesn't complete&#010;all the tests. It's because of phantom Karaf instances spawned in each test but somehow not&#010;being terminated normally.&#010;&gt; The consequence of this job not working is constant creeping in of dependency upgrades&#010;that break component features, thus jeopardising the reliability of using components on Karaf&#010;through features.&#010;&gt; Locally, instead of {{mvn test}} running {{./run-tests.sh}} can complete the test suite,&#010;so it is great if in some way we can use the script in the Jenkins job.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
336,338,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062874.1491825057000.255986.1491913601587%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 12:26:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11130?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15964293#comment-15964293&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11130:&#010;-------------------------------------&#010;&#010;Also the run tests script should skip non Test java files as it seems to try to run tests&#010;for route builder classes etc&#010;&#010;&gt; Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11130&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11130&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: karaf, tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;&#010;&gt; Jenkins job Camel.trunk.itest.karaf https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.karaf/&#010;at first seems to pass green, but in reality it silently fails earlier and doesn't complete&#010;all the tests. It's because of phantom Karaf instances spawned in each test but somehow not&#010;being terminated normally.&#010;&gt; The consequence of this job not working is constant creeping in of dependency upgrades&#010;that break component features, thus jeopardising the reliability of using components on Karaf&#010;through features.&#010;&gt; Locally, instead of {{mvn test}} running {{./run-tests.sh}} can complete the test suite,&#010;so it is great if in some way we can use the script in the Jenkins job.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
337,339,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062874.1491825057000.256987.1491922422124%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 14:53:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11130?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11130:&#010;--------------------------------&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11130&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11130&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: karaf, tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Jenkins job Camel.trunk.itest.karaf https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.karaf/&#010;at first seems to pass green, but in reality it silently fails earlier and doesn't complete&#010;all the tests. It's because of phantom Karaf instances spawned in each test but somehow not&#010;being terminated normally.&#010;&gt; The consequence of this job not working is constant creeping in of dependency upgrades&#010;that break component features, thus jeopardising the reliability of using components on Karaf&#010;through features.&#010;&gt; Locally, instead of {{mvn test}} running {{./run-tests.sh}} can complete the test suite,&#010;so it is great if in some way we can use the script in the Jenkins job.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
338,340,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062874.1491825057000.256985.1491922422108%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 14:53:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11130?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15964472#comment-15964472&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11130:&#010;-------------------------------------&#010;&#010;It looks a bit better now the osgi tests now passes&#010;https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.osgi/&#010;&#010;And it runs using that run-karaf-tests script.&#010;&#010;The karaf tests fails with camel-box which has been fixed on master branch but we need a new&#010;SNAPSHOT, eg build over night&#010;&#010;&gt; Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11130&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11130&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: karaf, tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Jenkins job Camel.trunk.itest.karaf https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.karaf/&#010;at first seems to pass green, but in reality it silently fails earlier and doesn't complete&#010;all the tests. It's because of phantom Karaf instances spawned in each test but somehow not&#010;being terminated normally.&#010;&gt; The consequence of this job not working is constant creeping in of dependency upgrades&#010;that break component features, thus jeopardising the reliability of using components on Karaf&#010;through features.&#010;&gt; Locally, instead of {{mvn test}} running {{./run-tests.sh}} can complete the test suite,&#010;so it is great if in some way we can use the script in the Jenkins job.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
339,341,Tadayoshi Sato (JIRA),  [jira] [Commented] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062874.1491825057000.272463.1492050401594%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 02:26:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11130?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967019#comment-15967019&#010;] &#010;&#010;Tadayoshi Sato commented on CAMEL-11130:&#010;----------------------------------------&#010;&#010;Thanks [~davsclaus]. Let me take care of the rest.&#010;&#010;&gt; Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11130&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11130&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: karaf, tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Jenkins job Camel.trunk.itest.karaf https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.karaf/&#010;at first seems to pass green, but in reality it silently fails earlier and doesn't complete&#010;all the tests. It's because of phantom Karaf instances spawned in each test but somehow not&#010;being terminated normally.&#010;&gt; The consequence of this job not working is constant creeping in of dependency upgrades&#010;that break component features, thus jeopardising the reliability of using components on Karaf&#010;through features.&#010;&gt; Locally, instead of {{mvn test}} running {{./run-tests.sh}} can complete the test suite,&#010;so it is great if in some way we can use the script in the Jenkins job.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
340,342,Tadayoshi Sato (JIRA),  [jira] [Assigned] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062874.1491825057000.272462.1492050401587%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 02:26:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11130?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tadayoshi Sato reassigned CAMEL-11130:&#010;--------------------------------------&#010;&#010;    Assignee: Tadayoshi Sato&#010;&#010;&gt; Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11130&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11130&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: karaf, tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Jenkins job Camel.trunk.itest.karaf https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.karaf/&#010;at first seems to pass green, but in reality it silently fails earlier and doesn't complete&#010;all the tests. It's because of phantom Karaf instances spawned in each test but somehow not&#010;being terminated normally.&#010;&gt; The consequence of this job not working is constant creeping in of dependency upgrades&#010;that break component features, thus jeopardising the reliability of using components on Karaf&#010;through features.&#010;&gt; Locally, instead of {{mvn test}} running {{./run-tests.sh}} can complete the test suite,&#010;so it is great if in some way we can use the script in the Jenkins job.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
341,343,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062874.1491825057000.273108.1492059761994%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 05:02:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11130?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967141#comment-15967141&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11130:&#010;----------------------------------------&#010;&#010;GitHub user tadayosi opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1624&#010;&#010;    CAMEL-11130 Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;&#010;    `camel-itest-karaf` should be all back to normal again.&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/tadayosi/camel CAMEL-11130&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1624.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1624&#010;    &#010;----&#010;commit 00f09ac22cc8a8fcdd78bed6a011a05b41f5afc0&#010;Author: Tadayoshi Sato &lt;sato.tadayoshi@gmail.com&gt;&#010;Date:   2017-04-13T02:30:56Z&#010;&#010;    CAMEL-11130: Make run-tests.sh also use kill-karaf.sh&#010;&#010;commit 958e0889cb83bb6d205fcd97c3fcca2950156e13&#010;Author: Tadayoshi Sato &lt;sato.tadayoshi@gmail.com&gt;&#010;Date:   2017-04-13T03:04:57Z&#010;&#010;    CAMEL-11130: camel-juel - Fix itest in camel-itest-karaf&#010;&#010;commit 399bfc73ab977cca43d3431b538d25c4e69345a3&#010;Author: Tadayoshi Sato &lt;sato.tadayoshi@gmail.com&gt;&#010;Date:   2017-04-13T03:08:44Z&#010;&#010;    CAMEL-11130: camel-linkedin - Fix itest in camel-itest-karaf&#010;&#010;commit 7652c050f1612c6d88b31b5b540707877676a577&#010;Author: Tadayoshi Sato &lt;sato.tadayoshi@gmail.com&gt;&#010;Date:   2017-04-13T03:33:35Z&#010;&#010;    CAMEL-11130: camel-protobuf - Fix itest in camel-itest-karaf&#010;&#010;commit 1e39c3329e0899f659ab1f4fdb86c57169e15b67&#010;Author: Tadayoshi Sato &lt;sato.tadayoshi@gmail.com&gt;&#010;Date:   2017-04-13T04:17:50Z&#010;&#010;    CAMEL-11130: camel-websocket - Fix itest in camel-itest-karaf&#010;&#010;----&#010;&#010;&#010;&gt; Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11130&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11130&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: karaf, tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Jenkins job Camel.trunk.itest.karaf https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.karaf/&#010;at first seems to pass green, but in reality it silently fails earlier and doesn't complete&#010;all the tests. It's because of phantom Karaf instances spawned in each test but somehow not&#010;being terminated normally.&#010;&gt; The consequence of this job not working is constant creeping in of dependency upgrades&#010;that break component features, thus jeopardising the reliability of using components on Karaf&#010;through features.&#010;&gt; Locally, instead of {{mvn test}} running {{./run-tests.sh}} can complete the test suite,&#010;so it is great if in some way we can use the script in the Jenkins job.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
342,344,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062874.1491825057000.273772.1492070021825%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 07:53:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11130?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11130.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11130&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11130&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: karaf, tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Jenkins job Camel.trunk.itest.karaf https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.karaf/&#010;at first seems to pass green, but in reality it silently fails earlier and doesn't complete&#010;all the tests. It's because of phantom Karaf instances spawned in each test but somehow not&#010;being terminated normally.&#010;&gt; The consequence of this job not working is constant creeping in of dependency upgrades&#010;that break component features, thus jeopardising the reliability of using components on Karaf&#010;through features.&#010;&gt; Locally, instead of {{mvn test}} running {{./run-tests.sh}} can complete the test suite,&#010;so it is great if in some way we can use the script in the Jenkins job.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
343,345,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062874.1491825057000.273763.1492070021712%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 07:53:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11130?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967255#comment-15967255&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11130:&#010;-------------------------------------&#010;&#010;Thanks a lot Tada.&#010;&#010;&#010;&#010;&gt; Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11130&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11130&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: karaf, tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Jenkins job Camel.trunk.itest.karaf https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.karaf/&#010;at first seems to pass green, but in reality it silently fails earlier and doesn't complete&#010;all the tests. It's because of phantom Karaf instances spawned in each test but somehow not&#010;being terminated normally.&#010;&gt; The consequence of this job not working is constant creeping in of dependency upgrades&#010;that break component features, thus jeopardising the reliability of using components on Karaf&#010;through features.&#010;&gt; Locally, instead of {{mvn test}} running {{./run-tests.sh}} can complete the test suite,&#010;so it is great if in some way we can use the script in the Jenkins job.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
344,346,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062874.1491825057000.273831.1492071101896%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 08:11:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11130?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967270#comment-15967270&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11130:&#010;----------------------------------------&#010;&#010;Github user tadayosi closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1624&#010;&#010;&#010;&gt; Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11130&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11130&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: karaf, tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Jenkins job Camel.trunk.itest.karaf https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.karaf/&#010;at first seems to pass green, but in reality it silently fails earlier and doesn't complete&#010;all the tests. It's because of phantom Karaf instances spawned in each test but somehow not&#010;being terminated normally.&#010;&gt; The consequence of this job not working is constant creeping in of dependency upgrades&#010;that break component features, thus jeopardising the reliability of using components on Karaf&#010;through features.&#010;&gt; Locally, instead of {{mvn test}} running {{./run-tests.sh}} can complete the test suite,&#010;so it is great if in some way we can use the script in the Jenkins job.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
345,347,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062874.1491825057000.274483.1492078361610%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 10:12:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11130?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967372#comment-15967372&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11130:&#010;----------------------------------------&#010;&#010;GitHub user tadayosi opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1625&#010;&#010;    CAMEL-11130: Improve kill-karaf.sh so it doesn't fail even if there is no Karaf process&#010;on CI server&#010;&#010;    &#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/tadayosi/camel CAMEL-11130_2&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1625.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1625&#010;    &#010;----&#010;commit f4fc2a4364a6f02c21e8867b0780a738e7fbf86f&#010;Author: Tadayoshi Sato &lt;sato.tadayoshi@gmail.com&gt;&#010;Date:   2017-04-13T10:09:53Z&#010;&#010;    CAMEL-11130: Improve kill-karaf.sh so it doesn't fail even if there is no Karaf process&#010;on CI server&#010;&#010;----&#010;&#010;&#010;&gt; Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11130&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11130&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: karaf, tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Jenkins job Camel.trunk.itest.karaf https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.karaf/&#010;at first seems to pass green, but in reality it silently fails earlier and doesn't complete&#010;all the tests. It's because of phantom Karaf instances spawned in each test but somehow not&#010;being terminated normally.&#010;&gt; The consequence of this job not working is constant creeping in of dependency upgrades&#010;that break component features, thus jeopardising the reliability of using components on Karaf&#010;through features.&#010;&gt; Locally, instead of {{mvn test}} running {{./run-tests.sh}} can complete the test suite,&#010;so it is great if in some way we can use the script in the Jenkins job.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
346,348,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11130) Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062874.1491825057000.274575.1492080041728%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 10:40:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11130?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967389#comment-15967389&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11130:&#010;----------------------------------------&#010;&#010;Github user asfgit closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1625&#010;&#010;&#010;&gt; Jenkins - Camel.trunk.itest.karaf doesn't run all tests in camel-itest-karaf&#010;&gt; ----------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11130&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11130&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: karaf, tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Jenkins job Camel.trunk.itest.karaf https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.itest.karaf/&#010;at first seems to pass green, but in reality it silently fails earlier and doesn't complete&#010;all the tests. It's because of phantom Karaf instances spawned in each test but somehow not&#010;being terminated normally.&#010;&gt; The consequence of this job not working is constant creeping in of dependency upgrades&#010;that break component features, thus jeopardising the reliability of using components on Karaf&#010;through features.&#010;&gt; Locally, instead of {{mvn test}} running {{./run-tests.sh}} can complete the test suite,&#010;so it is great if in some way we can use the script in the Jenkins job.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
347,350,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11131) Timer consumer - Should call start/stop of the processor,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062884.1491828564000.247175.1491828582657%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 12:49:42 GMT","Claus Ibsen created CAMEL-11131:&#010;-----------------------------------&#010;&#010;             Summary: Timer consumer - Should call start/stop of the processor&#010;                 Key: CAMEL-11131&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11131&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-core&#010;    Affects Versions: 2.18.3, 2.17.6&#010;            Reporter: Claus Ibsen&#010;            Assignee: Claus Ibsen&#010;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&#010;&#010;Because it does some special logic as part of start/stop it forgets to do a super call so&#010;the processor lifecycle is called as well.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
348,351,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11131) Timer consumer - Should call start/stop of the processor,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062884.1491828564000.247728.1491832421728%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 13:53:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11131?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11131.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Timer consumer - Should call start/stop of the processor&#010;&gt; --------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11131&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11131&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.17.6, 2.18.3&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Because it does some special logic as part of start/stop it forgets to do a super call&#010;so the processor lifecycle is called as well.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
349,352,,[jira] [Created] (CAMEL-11132) Provide type metadata for each Components/DataFormats,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062884.1491828564000.247728.1491832421728%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 13:53:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11131?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11131.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Timer consumer - Should call start/stop of the processor&#010;&gt; --------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11131&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11131&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.17.6, 2.18.3&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Because it does some special logic as part of start/stop it forgets to do a super call&#010;so the processor lifecycle is called as well.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
350,353,Tomohisa Igarashi (JIRA),  [jira] [Created] (CAMEL-11132) Provide type metadata for each Components/DataFormats,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062909.1491833476000.247899.1491833502018%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 14:11:42 GMT","Tomohisa Igarashi created CAMEL-11132:&#010;-----------------------------------------&#010;&#010;             Summary: Provide type metadata for each Components/DataFormats&#010;                 Key: CAMEL-11132&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11132&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;            Reporter: Tomohisa Igarashi&#010;            Assignee: Tomohisa Igarashi&#010;             Fix For: 2.20.0&#010;&#010;&#010;CAMEL-10447 has introduced InputType/OutputType declaration and declarative Transformer/Validator&#010;based on those types declared on a route.&#010;&#010;Next step is to provide type metadata for each Components/DataFormats:&#010;* Let components/DataFormats provide metadata about what data types are supported so that&#010;app developer can see&#010;* Narrow down the possible data types (i.e. exclude unsupported types) and transformers when&#010;writing a route in IDE, allow IDE to show those candidates as a hint so that app developer&#010;can choose from&#010;* Provide such facility from camel side so that the maven plugin and/or IDE can leverage it&#010;&#010;Annotation would be an option, but it only provides static types. For example xslt component&#010;only consumes/produces XML so ""XML"" could be provided via annotation. But dozer component&#010;consumes/produces arbitrary data formats and the actual type to be used is determined via&#010;configuration, so it cannot be provided via annotation. It would need a common way to calculate&#010;possible input types and output types on a component/endpoint and dataformat from its configuration.&#010;&#010;Sometimes even body of the input message would affect the possible output types. To visualize&#010;this we'll need some kind of simulation with a test message.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
351,354,Tomohisa Igarashi (JIRA),  [jira] [Updated] (CAMEL-11132) Provide type metadata for each Components/DataFormats,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062909.1491833476000.247933.1491833681923%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 14:14:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11132?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tomohisa Igarashi updated CAMEL-11132:&#010;--------------------------------------&#010;    Description: &#010;CAMEL-10447 has introduced InputType/OutputType declaration and declarative Transformer/Validator&#010;based on those types declared on a route.&#010;&#010;Next step is to provide type metadata for each Components/DataFormats:&#010;* Let components/DataFormats provide metadata about what data types are supported so that&#010;app developer can see&#010;* Narrow down the possible data types (i.e. exclude unsupported types) and transformers when&#010;writing a route in IDE, allow IDE to show those candidates as a hint so that app developer&#010;can choose from. Also maven plugin could leverage those metadata&#010;* Provide such facility from camel side so that the maven plugin and/or IDE can leverage it&#010;&#010;Annotation would be an option, but it only provides static types. For example xslt component&#010;only consumes/produces XML so ""XML"" could be provided via annotation. But dozer component&#010;consumes/produces arbitrary data formats and the actual type to be used is determined via&#010;configuration, so it cannot be provided via annotation. It would need a common way to calculate&#010;possible input types and output types on a component/endpoint and dataformat from its configuration.&#010;&#010;Sometimes even body of the input message would affect the possible output types. To visualize&#010;this we'll need some kind of simulation with a test message.&#010;&#010;  was:&#010;CAMEL-10447 has introduced InputType/OutputType declaration and declarative Transformer/Validator&#010;based on those types declared on a route.&#010;&#010;Next step is to provide type metadata for each Components/DataFormats:&#010;* Let components/DataFormats provide metadata about what data types are supported so that&#010;app developer can see&#010;* Narrow down the possible data types (i.e. exclude unsupported types) and transformers when&#010;writing a route in IDE, allow IDE to show those candidates as a hint so that app developer&#010;can choose from&#010;* Provide such facility from camel side so that the maven plugin and/or IDE can leverage it&#010;&#010;Annotation would be an option, but it only provides static types. For example xslt component&#010;only consumes/produces XML so ""XML"" could be provided via annotation. But dozer component&#010;consumes/produces arbitrary data formats and the actual type to be used is determined via&#010;configuration, so it cannot be provided via annotation. It would need a common way to calculate&#010;possible input types and output types on a component/endpoint and dataformat from its configuration.&#010;&#010;Sometimes even body of the input message would affect the possible output types. To visualize&#010;this we'll need some kind of simulation with a test message.&#010;&#010;&#010;&gt; Provide type metadata for each Components/DataFormats&#010;&gt; -----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11132&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11132&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; CAMEL-10447 has introduced InputType/OutputType declaration and declarative Transformer/Validator&#010;based on those types declared on a route.&#010;&gt; Next step is to provide type metadata for each Components/DataFormats:&#010;&gt; * Let components/DataFormats provide metadata about what data types are supported so&#010;that app developer can see&#010;&gt; * Narrow down the possible data types (i.e. exclude unsupported types) and transformers&#010;when writing a route in IDE, allow IDE to show those candidates as a hint so that app developer&#010;can choose from. Also maven plugin could leverage those metadata&#010;&gt; * Provide such facility from camel side so that the maven plugin and/or IDE can leverage&#010;it&#010;&gt; Annotation would be an option, but it only provides static types. For example xslt component&#010;only consumes/produces XML so ""XML"" could be provided via annotation. But dozer component&#010;consumes/produces arbitrary data formats and the actual type to be used is determined via&#010;configuration, so it cannot be provided via annotation. It would need a common way to calculate&#010;possible input types and output types on a component/endpoint and dataformat from its configuration.&#010;&gt; Sometimes even body of the input message would affect the possible output types. To visualize&#010;this we'll need some kind of simulation with a test message.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
352,355,,[jira] [Created] (CAMEL-11133) Data format - Marshal and unmarshal should eager start their data formats,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13062909.1491833476000.247933.1491833681923%40Atlassian.JIRA%3E,issues,"Mon, 10 Apr 2017 14:14:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11132?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tomohisa Igarashi updated CAMEL-11132:&#010;--------------------------------------&#010;    Description: &#010;CAMEL-10447 has introduced InputType/OutputType declaration and declarative Transformer/Validator&#010;based on those types declared on a route.&#010;&#010;Next step is to provide type metadata for each Components/DataFormats:&#010;* Let components/DataFormats provide metadata about what data types are supported so that&#010;app developer can see&#010;* Narrow down the possible data types (i.e. exclude unsupported types) and transformers when&#010;writing a route in IDE, allow IDE to show those candidates as a hint so that app developer&#010;can choose from. Also maven plugin could leverage those metadata&#010;* Provide such facility from camel side so that the maven plugin and/or IDE can leverage it&#010;&#010;Annotation would be an option, but it only provides static types. For example xslt component&#010;only consumes/produces XML so ""XML"" could be provided via annotation. But dozer component&#010;consumes/produces arbitrary data formats and the actual type to be used is determined via&#010;configuration, so it cannot be provided via annotation. It would need a common way to calculate&#010;possible input types and output types on a component/endpoint and dataformat from its configuration.&#010;&#010;Sometimes even body of the input message would affect the possible output types. To visualize&#010;this we'll need some kind of simulation with a test message.&#010;&#010;  was:&#010;CAMEL-10447 has introduced InputType/OutputType declaration and declarative Transformer/Validator&#010;based on those types declared on a route.&#010;&#010;Next step is to provide type metadata for each Components/DataFormats:&#010;* Let components/DataFormats provide metadata about what data types are supported so that&#010;app developer can see&#010;* Narrow down the possible data types (i.e. exclude unsupported types) and transformers when&#010;writing a route in IDE, allow IDE to show those candidates as a hint so that app developer&#010;can choose from&#010;* Provide such facility from camel side so that the maven plugin and/or IDE can leverage it&#010;&#010;Annotation would be an option, but it only provides static types. For example xslt component&#010;only consumes/produces XML so ""XML"" could be provided via annotation. But dozer component&#010;consumes/produces arbitrary data formats and the actual type to be used is determined via&#010;configuration, so it cannot be provided via annotation. It would need a common way to calculate&#010;possible input types and output types on a component/endpoint and dataformat from its configuration.&#010;&#010;Sometimes even body of the input message would affect the possible output types. To visualize&#010;this we'll need some kind of simulation with a test message.&#010;&#010;&#010;&gt; Provide type metadata for each Components/DataFormats&#010;&gt; -----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11132&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11132&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; CAMEL-10447 has introduced InputType/OutputType declaration and declarative Transformer/Validator&#010;based on those types declared on a route.&#010;&gt; Next step is to provide type metadata for each Components/DataFormats:&#010;&gt; * Let components/DataFormats provide metadata about what data types are supported so&#010;that app developer can see&#010;&gt; * Narrow down the possible data types (i.e. exclude unsupported types) and transformers&#010;when writing a route in IDE, allow IDE to show those candidates as a hint so that app developer&#010;can choose from. Also maven plugin could leverage those metadata&#010;&gt; * Provide such facility from camel side so that the maven plugin and/or IDE can leverage&#010;it&#010;&gt; Annotation would be an option, but it only provides static types. For example xslt component&#010;only consumes/produces XML so ""XML"" could be provided via annotation. But dozer component&#010;consumes/produces arbitrary data formats and the actual type to be used is determined via&#010;configuration, so it cannot be provided via annotation. It would need a common way to calculate&#010;possible input types and output types on a component/endpoint and dataformat from its configuration.&#010;&gt; Sometimes even body of the input message would affect the possible output types. To visualize&#010;this we'll need some kind of simulation with a test message.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
353,356,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11133) Data format - Marshal and unmarshal should eager start their data formats,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063135.1491903096000.254832.1491903101955%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 09:31:41 GMT","Claus Ibsen created CAMEL-11133:&#010;-----------------------------------&#010;&#010;             Summary: Data format - Marshal and unmarshal should eager start their data formats&#010;                 Key: CAMEL-11133&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11133&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;            Reporter: Claus Ibsen&#010;            Assignee: Claus Ibsen&#010;            Priority: Minor&#010;             Fix For: 2.19.0&#010;&#010;&#010;They are handling the lifecycle of the data format in the marshal and unmarshal processor,&#010;but they dont enforce starting the service when it starts itself. We should make this happen&#010;so they are started together&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
354,357,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11133) Data format - Marshal and unmarshal should eager start their data formats,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063135.1491903096000.255615.1491909941560%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 11:25:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11133?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11133.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Data format - Marshal and unmarshal should eager start their data formats&#010;&gt; -------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11133&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11133&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; They are handling the lifecycle of the data format in the marshal and unmarshal processor,&#010;but they dont enforce starting the service when it starts itself. We should make this happen&#010;so they are started together&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
355,358,,[jira] [Resolved] (CAMEL-10724) Improve Java DSL support for Java 8,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063135.1491903096000.255615.1491909941560%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 11:25:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11133?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11133.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Data format - Marshal and unmarshal should eager start their data formats&#010;&gt; -------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11133&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11133&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; They are handling the lifecycle of the data format in the marshal and unmarshal processor,&#010;but they dont enforce starting the service when it starts itself. We should make this happen&#010;so they are started together&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
356,359,Luca Burgazzoli (JIRA),  [jira] [Resolved] (CAMEL-10724) Improve Java DSL support for Java 8,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13035926.1484758643000.255926.1491912701603%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 12:11:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10724?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-10724.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Improve Java DSL support for Java 8&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10724&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10724&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; - loopDoWhile&#010;&gt; - multicast&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
357,360,,[jira] [Created] (CAMEL-11134) camel-http4 - Unable to configure https4 properties in spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13035926.1484758643000.255926.1491912701603%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 12:11:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10724?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-10724.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Improve Java DSL support for Java 8&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10724&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10724&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; - loopDoWhile&#010;&gt; - multicast&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
358,361,Nicola Ferraro (JIRA),  [jira] [Created] (CAMEL-11134) camel-http4 - Unable to configure https4 properties in spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063208.1491920153000.256704.1491920201732%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 14:16:41 GMT","Nicola Ferraro created CAMEL-11134:&#010;--------------------------------------&#010;&#010;             Summary: camel-http4 - Unable to configure https4 properties in spring-boot&#010;                 Key: CAMEL-11134&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11134&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-http4&#010;            Reporter: Nicola Ferraro&#010;            Assignee: Nicola Ferraro&#010;             Fix For: 2.19.0&#010;&#010;&#010;The https4 component is not published in the registry, so the configuration added through&#010;application.properties does not change the component behavior.&#010;&#010;There are two tests in camel-jetty9-starter and camel-netty4-http-starter currently @Ignored&#010;because of this issue.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
359,362,Nicola Ferraro (JIRA),  [jira] [Resolved] (CAMEL-11134) camel-http4 - Unable to configure https4 properties in spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063208.1491920153000.257763.1491927521773%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 16:18:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11134?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro resolved CAMEL-11134.&#010;------------------------------------&#010;    Resolution: Fixed&#010;&#010;There was a issue in the mojo and also the metadata were reporting the schema being ""http4s"".&#010;The correct schema is ""https4"".&#010;&#010;&gt; camel-http4 - Unable to configure https4 properties in spring-boot&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11134&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11134&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-http4&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The https4 component is not published in the registry, so the configuration added through&#010;application.properties does not change the component behavior.&#010;&gt; There are two tests in camel-jetty9-starter and camel-netty4-http-starter currently @Ignored&#010;because of this issue.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
360,363,,[jira] [Created] (CAMEL-11135) camel-protobuf component imrovements,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063208.1491920153000.257763.1491927521773%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 16:18:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11134?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro resolved CAMEL-11134.&#010;------------------------------------&#010;    Resolution: Fixed&#010;&#010;There was a issue in the mojo and also the metadata were reporting the schema being ""http4s"".&#010;The correct schema is ""https4"".&#010;&#010;&gt; camel-http4 - Unable to configure https4 properties in spring-boot&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11134&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11134&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-http4&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The https4 component is not published in the registry, so the configuration added through&#010;application.properties does not change the component behavior.&#010;&gt; There are two tests in camel-jetty9-starter and camel-netty4-http-starter currently @Ignored&#010;because of this issue.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
361,364,Dmitry Volodin (JIRA),  [jira] [Created] (CAMEL-11135) camel-protobuf component imrovements,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063216.1491922084000.256962.1491922121807%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 14:48:41 GMT",Dmitry Volodin created CAMEL-11135:&#010;--------------------------------------&#010;&#010;             Summary: camel-protobuf component imrovements&#010;                 Key: CAMEL-11135&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11135&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;    Affects Versions: 2.19.0&#010;            Reporter: Dmitry Volodin&#010;             Fix For: 2.19.0&#010;&#010;&#010;The following camel-protobuf component improvements are require:&#010;1. Automatic .proto file processing and Java stubs generation (no manual steps requires if&#010;library version or .proto file were changed)&#010;2. Ability to serialize/deserialize prorbuf message from JSON format in addition to native&#010;message format using embedded protobuf-java-util library. This feature could help in conjunction&#010;with camel-grpc component&#010;3. Documentation improvements and test files misprintings and formatting correction&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
362,365,Dmitry Volodin (JIRA),  [jira] [Updated] (CAMEL-11135) camel-protobuf component improvements,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063216.1491922084000.256967.1491922181583%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 14:49:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11135?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Dmitry Volodin updated CAMEL-11135:&#010;-----------------------------------&#010;    Summary: camel-protobuf component improvements  (was: camel-protobuf component imrovements)&#010;&#010;&gt; camel-protobuf component improvements&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11135&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11135&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;              Labels: grpc, protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The following camel-protobuf component improvements are require:&#010;&gt; 1. Automatic .proto file processing and Java stubs generation (no manual steps requires&#010;if library version or .proto file were changed)&#010;&gt; 2. Ability to serialize/deserialize prorbuf message from JSON format in addition to native&#010;message format using embedded protobuf-java-util library. This feature could help in conjunction&#010;with camel-grpc component&#010;&gt; 3. Documentation improvements and test files misprintings and formatting correction&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
363,366,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11135) camel-protobuf component improvements,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063216.1491922084000.257031.1491923021907%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 15:03:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11135?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15964482#comment-15964482&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11135:&#010;----------------------------------------&#010;&#010;GitHub user dmvolod opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1614&#010;&#010;    CAMEL-11135: camel-protobuf component improvements&#010;&#010;    Some sorts of the camel-protobuf component improvements:&#010;    1. Automatic .proto file processing and Java stubs generation (no manual steps requires&#010;if library version or .proto file were changed)&#010;    2. Ability to serialize/deserialize prorbuf message from JSON format in addition to native&#010;message format using embedded protobuf-java-util library. This feature could help in conjunction&#010;with camel-grpc component&#010;    3. Documentation improvements and test files misprintings and formatting correction&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/dmvolod/camel protobuf-improvements&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1614.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1614&#010;    &#010;----&#010;commit b4d37fabb74d371a26174a5f7eb25aa8dba2108a&#010;Author: Dmitry Volodin &lt;dmvolod@gmail.com&gt;&#010;Date:   2017-04-11T14:49:27Z&#010;&#010;    CAMEL-11135: camel-protobuf component improvements&#010;&#010;commit 0bded946602f4c2b7913231f5b62a9a9e32ffd9e&#010;Author: Dmitry Volodin &lt;dmvolod@gmail.com&gt;&#010;Date:   2017-04-11T14:59:38Z&#010;&#010;    CAMEL-11135: fixing sourcecheck issues&#010;&#010;----&#010;&#010;&#010;&gt; camel-protobuf component improvements&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11135&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11135&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;              Labels: grpc, protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The following camel-protobuf component improvements are require:&#010;&gt; 1. Automatic .proto file processing and Java stubs generation (no manual steps requires&#010;if library version or .proto file were changed)&#010;&gt; 2. Ability to serialize/deserialize prorbuf message from JSON format in addition to native&#010;message format using embedded protobuf-java-util library. This feature could help in conjunction&#010;with camel-grpc component&#010;&gt; 3. Documentation improvements and test files misprintings and formatting correction&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
364,367,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11135) camel-protobuf component improvements,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063216.1491922084000.258653.1491933941756%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 18:05:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11135?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15964736#comment-15964736&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11135:&#010;----------------------------------------&#010;&#010;Github user asfgit closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1614&#010;&#010;&#010;&gt; camel-protobuf component improvements&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11135&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11135&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;              Labels: grpc, protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The following camel-protobuf component improvements are require:&#010;&gt; 1. Automatic .proto file processing and Java stubs generation (no manual steps requires&#010;if library version or .proto file were changed)&#010;&gt; 2. Ability to serialize/deserialize prorbuf message from JSON format in addition to native&#010;message format using embedded protobuf-java-util library. This feature could help in conjunction&#010;with camel-grpc component&#010;&gt; 3. Documentation improvements and test files misprintings and formatting correction&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
365,368,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11135) camel-protobuf component improvements,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063216.1491922084000.258665.1491934001831%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 18:06:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11135?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11135.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;Thanks for the PR. Great work and nice to see the mvn plugin is generating those protobuf&#010;native files.&#010;&#010;&gt; camel-protobuf component improvements&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11135&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11135&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;              Labels: grpc, protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The following camel-protobuf component improvements are require:&#010;&gt; 1. Automatic .proto file processing and Java stubs generation (no manual steps requires&#010;if library version or .proto file were changed)&#010;&gt; 2. Ability to serialize/deserialize prorbuf message from JSON format in addition to native&#010;message format using embedded protobuf-java-util library. This feature could help in conjunction&#010;with camel-grpc component&#010;&gt; 3. Documentation improvements and test files misprintings and formatting correction&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
366,369,,[jira] [Created] (CAMEL-11136) Create PubNub component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063216.1491922084000.258665.1491934001831%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 18:06:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11135?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11135.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;Thanks for the PR. Great work and nice to see the mvn plugin is generating those protobuf&#010;native files.&#010;&#010;&gt; camel-protobuf component improvements&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11135&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11135&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;              Labels: grpc, protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The following camel-protobuf component improvements are require:&#010;&gt; 1. Automatic .proto file processing and Java stubs generation (no manual steps requires&#010;if library version or .proto file were changed)&#010;&gt; 2. Ability to serialize/deserialize prorbuf message from JSON format in addition to native&#010;message format using embedded protobuf-java-util library. This feature could help in conjunction&#010;with camel-grpc component&#010;&gt; 3. Documentation improvements and test files misprintings and formatting correction&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
367,370,Preben Asmussen (JIRA),  [jira] [Created] (CAMEL-11136) Create PubNub component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063275.1491934150000.258679.1491934181646%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 18:09:41 GMT","Preben Asmussen created CAMEL-11136:&#010;---------------------------------------&#010;&#010;             Summary: Create PubNub component&#010;                 Key: CAMEL-11136&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11136&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;            Reporter: Preben Asmussen&#010;            Priority: Minor&#010;&#010;&#010;Move the PubNub component from the Rhiot project since it is not maintained. &#010;https://rhiot.gitbooks.io/rhiotdocumentation/content/cloudplatform/camel_components/camel_pubnub_component.html&#010;&#010;Upgrade the component to the latest PubNub release, and add missing features. &#010;&#010;The migration has been discused her :&#010;http://camel.465427.n5.nabble.com/Contributing-a-set-of-IoT-related-components-td5797075.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
368,371,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11136) Create PubNub component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063275.1491934150000.258888.1491935381548%40Atlassian.JIRA%3E,issues,"Tue, 11 Apr 2017 18:29:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11136?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15964784#comment-15964784&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11136:&#010;----------------------------------------&#010;&#010;GitHub user pax95 opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1617&#010;&#010;    CAMEL-11136: Create camel Pubnub component&#010;&#010;    Here is the PubNub component for reveiw.&#010;    The component is upgraded to the latest PubNub release, and refactored a bit.&#010;    &#010;    There are still some 'missing' features that could be added later if needed.&#010;    From the top of my head&#010;    - Subscribe to multi channels using lists&#010;    - Subscribe filtering&#010;    - Limiting results using timestamps&#010;    - Extend doc to include operations&#010;    &#010;    Besides that there is the usual osgi wrapping stuff.&#010;    &#010;&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/pax95/camel pubnub&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1617.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1617&#010;    &#010;----&#010;commit 5ea451135a1d86cafbf9d30bc284dbdf067140a5&#010;Author: Preben Asmussen &lt;preben.asmussen@gmail.com&gt;&#010;Date:   2017-03-24T21:49:13Z&#010;&#010;    initial commit of camel-pubnub component&#010;&#010;commit 0a6628431c5af26b8ecc012fb57246142212c804&#010;Author: Preben Asmussen &lt;preben.asmussen@gmail.com&gt;&#010;Date:   2017-04-02T12:27:09Z&#010;&#010;    refactor component and upgrade PubNub library&#010;&#010;commit a7650e211808efb0f889db3f7a7ce21613ed7de2&#010;Author: Preben Asmussen &lt;preben.asmussen@gmail.com&gt;&#010;Date:   2017-04-11T08:21:21Z&#010;&#010;    polished&#010;&#010;----&#010;&#010;&#010;&gt; Create PubNub component&#010;&gt; -----------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11136&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11136&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Preben Asmussen&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; Move the PubNub component from the Rhiot project since it is not maintained. &#010;&gt; https://rhiot.gitbooks.io/rhiotdocumentation/content/cloudplatform/camel_components/camel_pubnub_component.html&#010;&gt; Upgrade the component to the latest PubNub release, and add missing features. &#010;&gt; The migration has been discused her :&#010;&gt; http://camel.465427.n5.nabble.com/Contributing-a-set-of-IoT-related-components-td5797075.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
369,372,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11136) Create PubNub component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063275.1491934150000.268963.1492025141604%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 19:25:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11136?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11136.&#010;---------------------------------&#010;       Resolution: Fixed&#010;         Assignee: Claus Ibsen&#010;    Fix Version/s: 2.19.0&#010;&#010;Thanks for the contribution&#010;&#010;&gt; Create PubNub component&#010;&gt; -----------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11136&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11136&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Preben Asmussen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Move the PubNub component from the Rhiot project since it is not maintained. &#010;&gt; https://rhiot.gitbooks.io/rhiotdocumentation/content/cloudplatform/camel_components/camel_pubnub_component.html&#010;&gt; Upgrade the component to the latest PubNub release, and add missing features. &#010;&gt; The migration has been discused her :&#010;&gt; http://camel.465427.n5.nabble.com/Contributing-a-set-of-IoT-related-components-td5797075.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
370,373,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11136) Create PubNub component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063275.1491934150000.269395.1492027302034%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 20:01:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11136?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15966501#comment-15966501&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11136:&#010;----------------------------------------&#010;&#010;Github user pax95 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1617&#010;&#010;&#010;&gt; Create PubNub component&#010;&gt; -----------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11136&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11136&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Preben Asmussen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Move the PubNub component from the Rhiot project since it is not maintained. &#010;&gt; https://rhiot.gitbooks.io/rhiotdocumentation/content/cloudplatform/camel_components/camel_pubnub_component.html&#010;&gt; Upgrade the component to the latest PubNub release, and add missing features. &#010;&gt; The migration has been discused her :&#010;&gt; http://camel.465427.n5.nabble.com/Contributing-a-set-of-IoT-related-components-td5797075.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
371,374,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11136) Create PubNub component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063275.1491934150000.276620.1492096901634%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 15:21:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11136?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967728#comment-15967728&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11136:&#010;----------------------------------------&#010;&#010;GitHub user pax95 opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1628&#010;&#010;    CAMEL-11136: PubNub update docs, CS and tests&#010;&#010;    Added a bit more to the docs. &#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/pax95/camel pubnub-doc&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1628.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1628&#010;    &#010;----&#010;commit 84a14d63315bc2df54c24615f6c3a38065af487d&#010;Author: Preben Asmussen &lt;preben.asmussen@gmail.com&gt;&#010;Date:   2017-04-13T15:09:58Z&#010;&#010;    CAMEL-11136: update docs, CS and tests&#010;&#010;----&#010;&#010;&#010;&gt; Create PubNub component&#010;&gt; -----------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11136&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11136&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Preben Asmussen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Move the PubNub component from the Rhiot project since it is not maintained. &#010;&gt; https://rhiot.gitbooks.io/rhiotdocumentation/content/cloudplatform/camel_components/camel_pubnub_component.html&#010;&gt; Upgrade the component to the latest PubNub release, and add missing features. &#010;&gt; The migration has been discused her :&#010;&gt; http://camel.465427.n5.nabble.com/Contributing-a-set-of-IoT-related-components-td5797075.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
372,375,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11136) Create PubNub component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063275.1491934150000.276703.1492097202546%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 15:26:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11136?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967736#comment-15967736&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11136:&#010;----------------------------------------&#010;&#010;Github user pax95 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1628&#010;&#010;&#010;&gt; Create PubNub component&#010;&gt; -----------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11136&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11136&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Preben Asmussen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Move the PubNub component from the Rhiot project since it is not maintained. &#010;&gt; https://rhiot.gitbooks.io/rhiotdocumentation/content/cloudplatform/camel_components/camel_pubnub_component.html&#010;&gt; Upgrade the component to the latest PubNub release, and add missing features. &#010;&gt; The migration has been discused her :&#010;&gt; http://camel.465427.n5.nabble.com/Contributing-a-set-of-IoT-related-components-td5797075.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
373,376,,[jira] [Updated] (CAMEL-11137) @UriParam should support real enums,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063275.1491934150000.276703.1492097202546%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 15:26:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11136?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967736#comment-15967736&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11136:&#010;----------------------------------------&#010;&#010;Github user pax95 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1628&#010;&#010;&#010;&gt; Create PubNub component&#010;&gt; -----------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11136&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11136&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;            Reporter: Preben Asmussen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Move the PubNub component from the Rhiot project since it is not maintained. &#010;&gt; https://rhiot.gitbooks.io/rhiotdocumentation/content/cloudplatform/camel_components/camel_pubnub_component.html&#010;&gt; Upgrade the component to the latest PubNub release, and add missing features. &#010;&gt; The migration has been discused her :&#010;&gt; http://camel.465427.n5.nabble.com/Contributing-a-set-of-IoT-related-components-td5797075.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
374,377,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-11137) @UriParam should support real enums,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063408.1491984358000.263407.1491984401626%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 08:06:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11137?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-11137:&#010;------------------------------------&#010;    Environment:     (was: As today the @UriParam supports enums as string which sometimes&#010;leads to stuffs like:&#010;&#010;{code:java}&#010;    @UriParam(label = ""producer"", defaultValue = ""put"", enums =&#010;             ""put,putAll,putIfAbsent,putAsync,putAllAsync,putIfAbsentAsync,""&#010;           + ""get,""&#010;           + ""containsKey,containsValue,""&#010;           + ""remove,removeAsync,""&#010;           + ""replace,replaceAsync,""&#010;           + ""size,""&#010;           + ""clear,clearAsync,""&#010;           + ""query,stats"")&#010;    private String command;&#010;{code}&#010;&#010;It would be nice to support real enum so there's no need to manual update the @UriParam definition&#010;once the enums change.&#010;)&#010;&#010;&gt; @UriParam should support real enums&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11137&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11137&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
375,378,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-11137) @UriParam should support real enums,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063408.1491984358000.263409.1491984401904%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 08:06:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11137?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-11137:&#010;------------------------------------&#010;    Description: &#010;As today the @UriParam supports enums as string which sometimes leads to stuffs like:&#010;&#010;{code:java}&#010;    @UriParam(label = ""producer"", defaultValue = ""put"", enums =&#010;             ""put,putAll,putIfAbsent,putAsync,putAllAsync,putIfAbsentAsync,""&#010;           + ""get,""&#010;           + ""containsKey,containsValue,""&#010;           + ""remove,removeAsync,""&#010;           + ""replace,replaceAsync,""&#010;           + ""size,""&#010;           + ""clear,clearAsync,""&#010;           + ""query,stats"")&#010;    private String command;&#010;{code}&#010;&#010;It would be nice to support real enum so there's no need to manual update the @UriParam definition&#010;once the enums change.&#010;&#010;&#010;&gt; @UriParam should support real enums&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11137&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11137&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; As today the @UriParam supports enums as string which sometimes leads to stuffs like:&#010;&gt; {code:java}&#010;&gt;     @UriParam(label = ""producer"", defaultValue = ""put"", enums =&#010;&gt;              ""put,putAll,putIfAbsent,putAsync,putAllAsync,putIfAbsentAsync,""&#010;&gt;            + ""get,""&#010;&gt;            + ""containsKey,containsValue,""&#010;&gt;            + ""remove,removeAsync,""&#010;&gt;            + ""replace,replaceAsync,""&#010;&gt;            + ""size,""&#010;&gt;            + ""clear,clearAsync,""&#010;&gt;            + ""query,stats"")&#010;&gt;     private String command;&#010;&gt; {code}&#010;&gt; It would be nice to support real enum so there's no need to manual update the @UriParam&#010;definition once the enums change.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
376,379,Luca Burgazzoli (JIRA),  [jira] [Created] (CAMEL-11137) @UriParam should support real enums,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063408.1491984358000.263405.1491984401608%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 08:06:41 GMT","Luca Burgazzoli created CAMEL-11137:&#010;---------------------------------------&#010;&#010;             Summary: @UriParam should support real enums&#010;                 Key: CAMEL-11137&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11137&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-core&#010;         Environment: As today the @UriParam supports enums as string which sometimes leads&#010;to stuffs like:&#010;&#010;{code:java}&#010;    @UriParam(label = ""producer"", defaultValue = ""put"", enums =&#010;             ""put,putAll,putIfAbsent,putAsync,putAllAsync,putIfAbsentAsync,""&#010;           + ""get,""&#010;           + ""containsKey,containsValue,""&#010;           + ""remove,removeAsync,""&#010;           + ""replace,replaceAsync,""&#010;           + ""size,""&#010;           + ""clear,clearAsync,""&#010;           + ""query,stats"")&#010;    private String command;&#010;{code}&#010;&#010;It would be nice to support real enum so there's no need to manual update the @UriParam definition&#010;once the enums change.&#010;&#010;            Reporter: Luca Burgazzoli&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
377,380,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11137) @UriParam should support real enums,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063408.1491984358000.263412.1491984521597%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 08:08:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11137?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965525#comment-15965525&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11137:&#010;-------------------------------------&#010;&#010;They do already that if the type is *enum*. &#010;But sometimes they are not like a String as in this example.&#010;&#010;&gt; @UriParam should support real enums&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11137&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11137&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; As today the @UriParam supports enums as string which sometimes leads to stuffs like:&#010;&gt; {code:java}&#010;&gt;     @UriParam(label = ""producer"", defaultValue = ""put"", enums =&#010;&gt;              ""put,putAll,putIfAbsent,putAsync,putAllAsync,putIfAbsentAsync,""&#010;&gt;            + ""get,""&#010;&gt;            + ""containsKey,containsValue,""&#010;&gt;            + ""remove,removeAsync,""&#010;&gt;            + ""replace,replaceAsync,""&#010;&gt;            + ""size,""&#010;&gt;            + ""clear,clearAsync,""&#010;&gt;            + ""query,stats"")&#010;&gt;     private String command;&#010;&gt; {code}&#010;&gt; It would be nice to support real enum so there's no need to manual update the @UriParam&#010;definition once the enums change.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
378,381,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-11137) @UriParam should support real enums,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063408.1491984358000.263415.1491984521621%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 08:08:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11137?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-11137:&#010;------------------------------------&#010;    Description: &#010;As today the @UriParam supports enums as string which sometimes leads to stuffs like:&#010;&#010;{code:java}&#010;    @UriParam(label = ""producer"", defaultValue = ""put"", enums =&#010;             ""put,putAll,putIfAbsent,putAsync,putAllAsync,putIfAbsentAsync,""&#010;           + ""get,""&#010;           + ""containsKey,containsValue,""&#010;           + ""remove,removeAsync,""&#010;           + ""replace,replaceAsync,""&#010;           + ""size,""&#010;           + ""clear,clearAsync,""&#010;           + ""query,stats"")&#010;    private String command;&#010;{code}&#010;&#010;It would be nice to support real enum so there's no need to manual update the @UriParam definition&#010;once the enums change, something like:&#010;&#010;{code:java}&#010;    @UriParam(label = ""producer"", defaultValue = ""put"", enum = CommandsEnum.class)&#010;    private String command;&#010;{code}&#010;&#010;&#010;  was:&#010;As today the @UriParam supports enums as string which sometimes leads to stuffs like:&#010;&#010;{code:java}&#010;    @UriParam(label = ""producer"", defaultValue = ""put"", enums =&#010;             ""put,putAll,putIfAbsent,putAsync,putAllAsync,putIfAbsentAsync,""&#010;           + ""get,""&#010;           + ""containsKey,containsValue,""&#010;           + ""remove,removeAsync,""&#010;           + ""replace,replaceAsync,""&#010;           + ""size,""&#010;           + ""clear,clearAsync,""&#010;           + ""query,stats"")&#010;    private String command;&#010;{code}&#010;&#010;It would be nice to support real enum so there's no need to manual update the @UriParam definition&#010;once the enums change.&#010;&#010;&#010;&#010;&gt; @UriParam should support real enums&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11137&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11137&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; As today the @UriParam supports enums as string which sometimes leads to stuffs like:&#010;&gt; {code:java}&#010;&gt;     @UriParam(label = ""producer"", defaultValue = ""put"", enums =&#010;&gt;              ""put,putAll,putIfAbsent,putAsync,putAllAsync,putIfAbsentAsync,""&#010;&gt;            + ""get,""&#010;&gt;            + ""containsKey,containsValue,""&#010;&gt;            + ""remove,removeAsync,""&#010;&gt;            + ""replace,replaceAsync,""&#010;&gt;            + ""size,""&#010;&gt;            + ""clear,clearAsync,""&#010;&gt;            + ""query,stats"")&#010;&gt;     private String command;&#010;&gt; {code}&#010;&gt; It would be nice to support real enum so there's no need to manual update the @UriParam&#010;definition once the enums change, something like:&#010;&gt; {code:java}&#010;&gt;     @UriParam(label = ""producer"", defaultValue = ""put"", enum = CommandsEnum.class)&#010;&gt;     private String command;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
379,382,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11137) @UriParam should support real enums,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063408.1491984358000.263418.1491984581567%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 08:09:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11137?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965527#comment-15965527&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11137:&#010;-------------------------------------&#010;&#010;ExchangePattern is an enum&#010;https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/impl/DefaultEndpoint.java#L76&#010;&#010;&gt; @UriParam should support real enums&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11137&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11137&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; As today the @UriParam supports enums as string which sometimes leads to stuffs like:&#010;&gt; {code:java}&#010;&gt;     @UriParam(label = ""producer"", defaultValue = ""put"", enums =&#010;&gt;              ""put,putAll,putIfAbsent,putAsync,putAllAsync,putIfAbsentAsync,""&#010;&gt;            + ""get,""&#010;&gt;            + ""containsKey,containsValue,""&#010;&gt;            + ""remove,removeAsync,""&#010;&gt;            + ""replace,replaceAsync,""&#010;&gt;            + ""size,""&#010;&gt;            + ""clear,clearAsync,""&#010;&gt;            + ""query,stats"")&#010;&gt;     private String command;&#010;&gt; {code}&#010;&gt; It would be nice to support real enum so there's no need to manual update the @UriParam&#010;definition once the enums change, something like:&#010;&gt; {code:java}&#010;&gt;     @UriParam(label = ""producer"", defaultValue = ""put"", enum = CommandsEnum.class)&#010;&gt;     private String command;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
380,383,Luca Burgazzoli (JIRA),  [jira] [Commented] (CAMEL-11137) @UriParam should support real enums,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063408.1491984358000.263419.1491984581575%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 08:09:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11137?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965528#comment-15965528&#010;] &#010;&#010;Luca Burgazzoli commented on CAMEL-11137:&#010;-----------------------------------------&#010;&#010;Ah yes, damn early morning :)&#010;&#010;&gt; @UriParam should support real enums&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11137&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11137&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; As today the @UriParam supports enums as string which sometimes leads to stuffs like:&#010;&gt; {code:java}&#010;&gt;     @UriParam(label = ""producer"", defaultValue = ""put"", enums =&#010;&gt;              ""put,putAll,putIfAbsent,putAsync,putAllAsync,putIfAbsentAsync,""&#010;&gt;            + ""get,""&#010;&gt;            + ""containsKey,containsValue,""&#010;&gt;            + ""remove,removeAsync,""&#010;&gt;            + ""replace,replaceAsync,""&#010;&gt;            + ""size,""&#010;&gt;            + ""clear,clearAsync,""&#010;&gt;            + ""query,stats"")&#010;&gt;     private String command;&#010;&gt; {code}&#010;&gt; It would be nice to support real enum so there's no need to manual update the @UriParam&#010;definition once the enums change, something like:&#010;&gt; {code:java}&#010;&gt;     @UriParam(label = ""producer"", defaultValue = ""put"", enum = CommandsEnum.class)&#010;&gt;     private String command;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
381,384,Luca Burgazzoli (JIRA),  [jira] [Closed] (CAMEL-11137) @UriParam should support real enums,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063408.1491984358000.263424.1491984641626%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 08:10:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11137?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli closed CAMEL-11137.&#010;-----------------------------------&#010;    Resolution: Invalid&#010;&#010;&gt; @UriParam should support real enums&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11137&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11137&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; As today the @UriParam supports enums as string which sometimes leads to stuffs like:&#010;&gt; {code:java}&#010;&gt;     @UriParam(label = ""producer"", defaultValue = ""put"", enums =&#010;&gt;              ""put,putAll,putIfAbsent,putAsync,putAllAsync,putIfAbsentAsync,""&#010;&gt;            + ""get,""&#010;&gt;            + ""containsKey,containsValue,""&#010;&gt;            + ""remove,removeAsync,""&#010;&gt;            + ""replace,replaceAsync,""&#010;&gt;            + ""size,""&#010;&gt;            + ""clear,clearAsync,""&#010;&gt;            + ""query,stats"")&#010;&gt;     private String command;&#010;&gt; {code}&#010;&gt; It would be nice to support real enum so there's no need to manual update the @UriParam&#010;definition once the enums change, something like:&#010;&gt; {code:java}&#010;&gt;     @UriParam(label = ""producer"", defaultValue = ""put"", enum = CommandsEnum.class)&#010;&gt;     private String command;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
382,385,,[jira] [Created] (CAMEL-11138) ConsumerTemplate - If cache is full then polling consumer should be stopped to not leak resources,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063408.1491984358000.263424.1491984641626%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 08:10:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11137?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli closed CAMEL-11137.&#010;-----------------------------------&#010;    Resolution: Invalid&#010;&#010;&gt; @UriParam should support real enums&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11137&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11137&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; As today the @UriParam supports enums as string which sometimes leads to stuffs like:&#010;&gt; {code:java}&#010;&gt;     @UriParam(label = ""producer"", defaultValue = ""put"", enums =&#010;&gt;              ""put,putAll,putIfAbsent,putAsync,putAllAsync,putIfAbsentAsync,""&#010;&gt;            + ""get,""&#010;&gt;            + ""containsKey,containsValue,""&#010;&gt;            + ""remove,removeAsync,""&#010;&gt;            + ""replace,replaceAsync,""&#010;&gt;            + ""size,""&#010;&gt;            + ""clear,clearAsync,""&#010;&gt;            + ""query,stats"")&#010;&gt;     private String command;&#010;&gt; {code}&#010;&gt; It would be nice to support real enum so there's no need to manual update the @UriParam&#010;definition once the enums change, something like:&#010;&gt; {code:java}&#010;&gt;     @UriParam(label = ""producer"", defaultValue = ""put"", enum = CommandsEnum.class)&#010;&gt;     private String command;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
383,386,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11138) ConsumerTemplate - If cache is full then polling consumer should be stopped to not leak resources,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063438.1491992723000.264212.1491992741520%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 10:25:41 GMT","Claus Ibsen created CAMEL-11138:&#010;-----------------------------------&#010;&#010;             Summary: ConsumerTemplate - If cache is full then polling consumer should be&#010;stopped to not leak resources&#010;                 Key: CAMEL-11138&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11138&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-core&#010;    Affects Versions: 2.18.3, 2.17.6&#010;            Reporter: Claus Ibsen&#010;            Assignee: Claus Ibsen&#010;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&#010;&#010;When using consumer template with polling consumer and when you are done using it, its put&#010;back into the cache, but if the cache is full, then we should stop the consumer so it does&#010;not dangle and its resources are not released, such as threads etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
384,387,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11138) ConsumerTemplate - If cache is full then polling consumer should be stopped to not leak resources,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063438.1491992723000.264370.1491994847137%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:00:47 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11138?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11138.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; ConsumerTemplate - If cache is full then polling consumer should be stopped to not leak&#010;resources&#010;&gt; -------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11138&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11138&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.17.6, 2.18.3&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using consumer template with polling consumer and when you are done using it, its&#010;put back into the cache, but if the cache is full, then we should stop the consumer so it&#010;does not dangle and its resources are not released, such as threads etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
385,388,,[jira] [Resolved] (CAMEL-11088) camel-swagger-java: schema objects in definitions could not be referenced,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063438.1491992723000.264370.1491994847137%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:00:47 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11138?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11138.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; ConsumerTemplate - If cache is full then polling consumer should be stopped to not leak&#010;resources&#010;&gt; -------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11138&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11138&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.17.6, 2.18.3&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When using consumer template with polling consumer and when you are done using it, its&#010;put back into the cache, but if the cache is full, then we should stop the consumer so it&#010;does not dangle and its resources are not released, such as threads etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
386,389,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11088) camel-swagger-java: schema objects in definitions could not be referenced,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13059979.1490780680000.264386.1491995081600%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:04:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11088?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11088.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;I was working on the 2.17.x branch and copied over the fix from 2.18.x branch&#010;&#010;&gt; camel-swagger-java: schema objects in definitions could not be referenced &#010;&gt; --------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11088&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11088&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-swagger&#010;&gt;    Affects Versions: 2.17.6&#010;&gt;            Reporter: Yangyang Li&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.17.7&#010;&gt;&#010;&gt;&#010;&gt; Reproduct steps:&#010;&gt; 1. we have a type A, and it has a field b with type B.&#010;&gt; 2. there are two camel rest endpoint a and b, type attribute of endpoint a is A, and&#010;type attribute of endpoint of b is B.&#010;&gt; 3. when RestSwaggerReader.java parse the endpoint a at first, and parse the endpoint&#010;b later.&#010;&gt; 4. in the generated swagger document, the ""schema"" of parameter object of endpoint b&#010;could not $ref to the definition object B in definitions module.&#010;&gt; Maybe this issue is caused by the code ""oldExt = oldModel.getVendorExtensions().get(""x-className"")&#010;== null;"" of appendModels method of RestSwaggerReader.java of camel 2.17.x.&#010;&gt; This code has been changed to ""oldExt = oldModel.getVendorExtensions().get(""x-className"")&#010;!= null;"" of camel 2.18.x.&#010;&gt; So I file jira ticket to request to fix this issue in camel 2.17.x too.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
387,390,,[jira] [Commented] (CAMEL-10925) spring-boot - Verify compatibility with latest spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13059979.1490780680000.264386.1491995081600%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:04:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11088?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11088.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;I was working on the 2.17.x branch and copied over the fix from 2.18.x branch&#010;&#010;&gt; camel-swagger-java: schema objects in definitions could not be referenced &#010;&gt; --------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11088&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11088&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-swagger&#010;&gt;    Affects Versions: 2.17.6&#010;&gt;            Reporter: Yangyang Li&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.17.7&#010;&gt;&#010;&gt;&#010;&gt; Reproduct steps:&#010;&gt; 1. we have a type A, and it has a field b with type B.&#010;&gt; 2. there are two camel rest endpoint a and b, type attribute of endpoint a is A, and&#010;type attribute of endpoint of b is B.&#010;&gt; 3. when RestSwaggerReader.java parse the endpoint a at first, and parse the endpoint&#010;b later.&#010;&gt; 4. in the generated swagger document, the ""schema"" of parameter object of endpoint b&#010;could not $ref to the definition object B in definitions module.&#010;&gt; Maybe this issue is caused by the code ""oldExt = oldModel.getVendorExtensions().get(""x-className"")&#010;== null;"" of appendModels method of RestSwaggerReader.java of camel 2.17.x.&#010;&gt; This code has been changed to ""oldExt = oldModel.getVendorExtensions().get(""x-className"")&#010;!= null;"" of camel 2.18.x.&#010;&gt; So I file jira ticket to request to fix this issue in camel 2.17.x too.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
388,391,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-10925) spring-boot - Verify compatibility with latest spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13047656.1488454548000.264419.1491995741771%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:15:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10925?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965672#comment-15965672&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-10925:&#010;-------------------------------------&#010;&#010;The CI server is now succesful and tests over 200+ tests&#010;https://builds.apache.org/view/A-D/view/Camel/job/camel.trunk.itest.springboot/&#010;&#010;&gt; spring-boot - Verify compatibility with latest spring-boot&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10925&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10925&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-spring-boot-starters&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Spring-boot 1.5.1.RELEASE upgrades some dependencies (eg. Jetty 9.4.x) and some integration&#010;tests are failing. We should run integration tests and try to fix incompatibilities.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
389,392,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-10925) spring-boot - Verify compatibility with latest spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13047656.1488454548000.264422.1491995742075%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:15:42 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10925?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-10925.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; spring-boot - Verify compatibility with latest spring-boot&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10925&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10925&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-spring-boot-starters&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Spring-boot 1.5.1.RELEASE upgrades some dependencies (eg. Jetty 9.4.x) and some integration&#010;tests are failing. We should run integration tests and try to fix incompatibilities.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
390,393,,[jira] [Updated] (CAMEL-11005) camel-connector - Generate json using jackson,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13047656.1488454548000.264422.1491995742075%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:15:42 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10925?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-10925.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; spring-boot - Verify compatibility with latest spring-boot&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10925&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10925&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-spring-boot-starters&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Spring-boot 1.5.1.RELEASE upgrades some dependencies (eg. Jetty 9.4.x) and some integration&#010;tests are failing. We should run integration tests and try to fix incompatibilities.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
391,394,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11005) camel-connector - Generate json using jackson,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050569.1489413756000.264439.1491995801661%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:16:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11005?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11005:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; camel-connector - Generate json using jackson&#010;&gt; ---------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11005&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11005&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-connector&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; We can generate the output using jackson in pretty print mode which folks tend to like&#010;more.&#010;&gt; Just that the embedded json file for the component is using the oneline dense style which&#010;the json schema helper parser uses. &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
392,395,,[jira] [Updated] (CAMEL-11038) Ping Check API - Output metadata to component json file,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050569.1489413756000.264439.1491995801661%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:16:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11005?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11005:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; camel-connector - Generate json using jackson&#010;&gt; ---------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11005&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11005&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-connector&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; We can generate the output using jackson in pretty print mode which folks tend to like&#010;more.&#010;&gt; Just that the embedded json file for the component is using the oneline dense style which&#010;the json schema helper parser uses. &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
393,396,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11038) Ping Check API - Output metadata to component json file,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13057523.1490015994000.264435.1491995801628%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:16:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11038?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11038:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; Ping Check API - Output metadata to component json file&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11038&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11038&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; We need to add some logic to apt compiler plugin so it can detect its a verifiable component&#010;(ping check) and add some details in the component json file.&#010;&gt; We would need on the component section, something along the lines to denote what features&#010;it supports&#010;&gt; {code}&#010;&gt; ""verifiable"": [ ""connectivity"", ""parameters"" ]&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
394,397,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11038) Ping Check API - Output metadata to component json file,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13057523.1490015994000.264438.1491995801653%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:16:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11038?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965676#comment-15965676&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11038:&#010;-------------------------------------&#010;&#010;Yeah lets look at this for next release if we need to include those verifiers in each of those&#010;options - it seems at first though like a nice idea.&#010;&#010;&gt; Ping Check API - Output metadata to component json file&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11038&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11038&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; We need to add some logic to apt compiler plugin so it can detect its a verifiable component&#010;(ping check) and add some details in the component json file.&#010;&gt; We would need on the component section, something along the lines to denote what features&#010;it supports&#010;&gt; {code}&#010;&gt; ""verifiable"": [ ""connectivity"", ""parameters"" ]&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
395,398,,[jira] [Resolved] (CAMEL-11049) camel-package-maven-plugin - Add option to ignore no model in core for custom 3rd party data formats,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13057523.1490015994000.264438.1491995801653%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:16:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11038?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965676#comment-15965676&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11038:&#010;-------------------------------------&#010;&#010;Yeah lets look at this for next release if we need to include those verifiers in each of those&#010;options - it seems at first though like a nice idea.&#010;&#010;&gt; Ping Check API - Output metadata to component json file&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11038&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11038&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; We need to add some logic to apt compiler plugin so it can detect its a verifiable component&#010;(ping check) and add some details in the component json file.&#010;&gt; We would need on the component section, something along the lines to denote what features&#010;it supports&#010;&gt; {code}&#010;&gt; ""verifiable"": [ ""connectivity"", ""parameters"" ]&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
396,399,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11049) camel-package-maven-plugin - Add option to ignore no model in core for custom 3rd party data formats,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058275.1490197691000.264465.1491996701591%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:31:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11049?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11049.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;&gt; camel-package-maven-plugin - Add option to ignore no model in core for custom 3rd party&#010;data formats&#010;&gt; ----------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11049&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11049&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; If you build a custom data format, then the camel maven plugin would attempt to load&#010;model from camel-core which wont exist for 3rd part. So we should add option to silently ignore&#010;that. Or make the plugin detect if its part of Apache Camel or not and act accordingly.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
397,400,,"[jira] [Updated] (CAMEL-10798) camel-twitter, camel-ignite - Make the uri endpoints separated",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058275.1490197691000.264465.1491996701591%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:31:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11049?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11049.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;&gt; camel-package-maven-plugin - Add option to ignore no model in core for custom 3rd party&#010;data formats&#010;&gt; ----------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11049&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11049&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; If you build a custom data format, then the camel maven plugin would attempt to load&#010;model from camel-core which wont exist for 3rd part. So we should add option to silently ignore&#010;that. Or make the plugin detect if its part of Apache Camel or not and act accordingly.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
398,401,Claus Ibsen (JIRA),"  [jira] [Updated] (CAMEL-10798) camel-twitter, camel-ignite - Make the uri endpoints separated",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13040956.1486469339000.264521.1491997421560%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:43:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10798?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-10798:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;&#010;&gt; camel-twitter, camel-ignite - Make the uri endpoints separated&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10798&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10798&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 3.0.0&#010;&gt;&#010;&gt;&#010;&gt; They currently have the same @UriEndpoint that represents all of their possible endpoint&#010;combinations. This usually works fine for Camel components. But some components such as twitter,&#010;ignite, hazelcast etc do have to many different endpoints that have very specific options&#010;per different endpoint.&#010;&gt; We should split up this in different components so they are separated.&#010;&gt; So we have&#010;&gt; twitter-status&#010;&gt; twitter-search&#010;&gt; twitter-direct&#010;&gt; Or something.&#010;&gt; This will also help tooling, documentation, et all so they are clearly separated and&#010;there are no confusion. For example twitter mention do not support the delay option which&#010;only twitter search uses etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
399,402,Tomohisa Igarashi (JIRA),"  [jira] [Assigned] (CAMEL-10798) camel-twitter, camel-ignite - Make the uri endpoints separated",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13040956.1486469339000.316436.1492597121554%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 10:18:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10798?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tomohisa Igarashi reassigned CAMEL-10798:&#010;-----------------------------------------&#010;&#010;    Assignee: Tomohisa Igarashi&#010;&#010;&gt; camel-twitter, camel-ignite - Make the uri endpoints separated&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10798&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10798&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;             Fix For: 3.0.0&#010;&gt;&#010;&gt;&#010;&gt; They currently have the same @UriEndpoint that represents all of their possible endpoint&#010;combinations. This usually works fine for Camel components. But some components such as twitter,&#010;ignite, hazelcast etc do have to many different endpoints that have very specific options&#010;per different endpoint.&#010;&gt; We should split up this in different components so they are separated.&#010;&gt; So we have&#010;&gt; twitter-status&#010;&gt; twitter-search&#010;&gt; twitter-direct&#010;&gt; Or something.&#010;&gt; This will also help tooling, documentation, et all so they are clearly separated and&#010;there are no confusion. For example twitter mention do not support the delay option which&#010;only twitter search uses etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
400,403,ASF GitHub Bot (JIRA),"  [jira] [Commented] (CAMEL-10798) camel-twitter, camel-ignite - Make the uri endpoints separated",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13040956.1486469339000.12588.1492728064431%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 22:41:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10798?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15977734#comment-15977734&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10798:&#010;----------------------------------------&#010;&#010;GitHub user igarashitm opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1648&#010;&#010;    CAMEL-10798 Splitted camel-ignite component for each endpoint&#010;&#010;    I've been looking for a easy way to get around CAMEL-11150, but it turned out it's easier&#010;to address CAMEL-10798. This splits the ignite component into 7 which corresponds to each&#010;ignite endpoint, and also it preserves existing IgniteComponent with deprecated flag. In this&#010;way the old syntax like `ignite:cache` is still allowed with having WARN log saying that the&#010;syntax has been deprecated.&#010;    &#010;    I wonder it may be a bit too big change at this stage as 2.19.0 release is around the&#010;corner though. If so let's just have it after the release.&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/igarashitm/camel CAMEL-10798-ignite&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1648.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1648&#010;    &#010;----&#010;commit c5b52455871b6e17d06fd21dcee0a0957f32525c&#010;Author: Tomohisa Igarashi &lt;tm.igarashi@gmail.com&gt;&#010;Date:   2017-04-19T14:21:30Z&#010;&#010;    CAMEL-10798 Splitted camel-ignite component for each endpoint&#010;&#010;----&#010;&#010;&#010;&gt; camel-twitter, camel-ignite - Make the uri endpoints separated&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10798&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10798&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;             Fix For: 3.0.0&#010;&gt;&#010;&gt;&#010;&gt; They currently have the same @UriEndpoint that represents all of their possible endpoint&#010;combinations. This usually works fine for Camel components. But some components such as twitter,&#010;ignite, hazelcast etc do have to many different endpoints that have very specific options&#010;per different endpoint.&#010;&gt; We should split up this in different components so they are separated.&#010;&gt; So we have&#010;&gt; twitter-status&#010;&gt; twitter-search&#010;&gt; twitter-direct&#010;&gt; Or something.&#010;&gt; This will also help tooling, documentation, et all so they are clearly separated and&#010;there are no confusion. For example twitter mention do not support the delay option which&#010;only twitter search uses etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
401,404,Andrea Cosentino (JIRA),"  [jira] [Updated] (CAMEL-10798) camel-twitter, camel-ignite - Make the uri endpoints separated",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13040956.1486469339000.16764.1492766584247%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 09:23:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10798?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino updated CAMEL-10798:&#010;-------------------------------------&#010;    Fix Version/s:     (was: 3.0.0)&#010;                   2.19.0&#010;&#010;&gt; camel-twitter, camel-ignite - Make the uri endpoints separated&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10798&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10798&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; They currently have the same @UriEndpoint that represents all of their possible endpoint&#010;combinations. This usually works fine for Camel components. But some components such as twitter,&#010;ignite, hazelcast etc do have to many different endpoints that have very specific options&#010;per different endpoint.&#010;&gt; We should split up this in different components so they are separated.&#010;&gt; So we have&#010;&gt; twitter-status&#010;&gt; twitter-search&#010;&gt; twitter-direct&#010;&gt; Or something.&#010;&gt; This will also help tooling, documentation, et all so they are clearly separated and&#010;there are no confusion. For example twitter mention do not support the delay option which&#010;only twitter search uses etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
402,405,ASF GitHub Bot (JIRA),"  [jira] [Commented] (CAMEL-10798) camel-twitter, camel-ignite - Make the uri endpoints separated",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13040956.1486469339000.16761.1492766584222%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 09:23:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10798?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978381#comment-15978381&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10798:&#010;----------------------------------------&#010;&#010;Github user igarashitm closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1648&#010;&#010;&#010;&gt; camel-twitter, camel-ignite - Make the uri endpoints separated&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10798&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10798&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; They currently have the same @UriEndpoint that represents all of their possible endpoint&#010;combinations. This usually works fine for Camel components. But some components such as twitter,&#010;ignite, hazelcast etc do have to many different endpoints that have very specific options&#010;per different endpoint.&#010;&gt; We should split up this in different components so they are separated.&#010;&gt; So we have&#010;&gt; twitter-status&#010;&gt; twitter-search&#010;&gt; twitter-direct&#010;&gt; Or something.&#010;&gt; This will also help tooling, documentation, et all so they are clearly separated and&#010;there are no confusion. For example twitter mention do not support the delay option which&#010;only twitter search uses etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
403,406,Andrea Cosentino (JIRA),"  [jira] [Updated] (CAMEL-10798) camel-twitter, camel-ignite - Make the uri endpoints separated",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13040956.1486469339000.16832.1492767364255%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 09:36:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10798?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino updated CAMEL-10798:&#010;-------------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   Future&#010;&#010;&gt; camel-twitter, camel-ignite - Make the uri endpoints separated&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10798&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10798&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; They currently have the same @UriEndpoint that represents all of their possible endpoint&#010;combinations. This usually works fine for Camel components. But some components such as twitter,&#010;ignite, hazelcast etc do have to many different endpoints that have very specific options&#010;per different endpoint.&#010;&gt; We should split up this in different components so they are separated.&#010;&gt; So we have&#010;&gt; twitter-status&#010;&gt; twitter-search&#010;&gt; twitter-direct&#010;&gt; Or something.&#010;&gt; This will also help tooling, documentation, et all so they are clearly separated and&#010;there are no confusion. For example twitter mention do not support the delay option which&#010;only twitter search uses etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
404,407,ASF GitHub Bot (JIRA),"  [jira] [Commented] (CAMEL-10798) camel-twitter, camel-ignite - Make the uri endpoints separated",http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13040956.1486469339000.41214.1493098504313%40Atlassian.JIRA%3E,issues,"Tue, 25 Apr 2017 05:35:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10798?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15982389#comment-15982389&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10798:&#010;----------------------------------------&#010;&#010;GitHub user igarashitm opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1657&#010;&#010;    CAMEL-10798 Splitted hazelcast component into 11 which correspond to …&#010;&#010;    …each of endpoints&#010;    &#010;    For post 2.19 release&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/igarashitm/camel CAMEL-10798-hazelcast&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1657.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1657&#010;    &#010;----&#010;commit 91e7a0a6bb53426b859c5933643f21220321f12f&#010;Author: Tomohisa Igarashi &lt;tm.igarashi@gmail.com&gt;&#010;Date:   2017-04-24T14:26:02Z&#010;&#010;    CAMEL-10798 Splitted hazelcast component into 11 which correspond to each of endpoints&#010;&#010;----&#010;&#010;&#010;&gt; camel-twitter, camel-ignite - Make the uri endpoints separated&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10798&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10798&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; They currently have the same @UriEndpoint that represents all of their possible endpoint&#010;combinations. This usually works fine for Camel components. But some components such as twitter,&#010;ignite, hazelcast etc do have to many different endpoints that have very specific options&#010;per different endpoint.&#010;&gt; We should split up this in different components so they are separated.&#010;&gt; So we have&#010;&gt; twitter-status&#010;&gt; twitter-search&#010;&gt; twitter-direct&#010;&gt; Or something.&#010;&gt; This will also help tooling, documentation, et all so they are clearly separated and&#010;there are no confusion. For example twitter mention do not support the delay option which&#010;only twitter search uses etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
405,408,,[jira] [Commented] (CAMEL-11059) camel-spring-dm - Should be removed,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13040956.1486469339000.41214.1493098504313%40Atlassian.JIRA%3E,issues,"Tue, 25 Apr 2017 05:35:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10798?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15982389#comment-15982389&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10798:&#010;----------------------------------------&#010;&#010;GitHub user igarashitm opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1657&#010;&#010;    CAMEL-10798 Splitted hazelcast component into 11 which correspond to …&#010;&#010;    …each of endpoints&#010;    &#010;    For post 2.19 release&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/igarashitm/camel CAMEL-10798-hazelcast&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1657.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1657&#010;    &#010;----&#010;commit 91e7a0a6bb53426b859c5933643f21220321f12f&#010;Author: Tomohisa Igarashi &lt;tm.igarashi@gmail.com&gt;&#010;Date:   2017-04-24T14:26:02Z&#010;&#010;    CAMEL-10798 Splitted hazelcast component into 11 which correspond to each of endpoints&#010;&#010;----&#010;&#010;&#010;&gt; camel-twitter, camel-ignite - Make the uri endpoints separated&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10798&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10798&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; They currently have the same @UriEndpoint that represents all of their possible endpoint&#010;combinations. This usually works fine for Camel components. But some components such as twitter,&#010;ignite, hazelcast etc do have to many different endpoints that have very specific options&#010;per different endpoint.&#010;&gt; We should split up this in different components so they are separated.&#010;&gt; So we have&#010;&gt; twitter-status&#010;&gt; twitter-search&#010;&gt; twitter-direct&#010;&gt; Or something.&#010;&gt; This will also help tooling, documentation, et all so they are clearly separated and&#010;there are no confusion. For example twitter mention do not support the delay option which&#010;only twitter search uses etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
406,409,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11059) camel-spring-dm - Should be removed,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058682.1490291423000.264524.1491997481610%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:44:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11059?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965686#comment-15965686&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11059:&#010;-------------------------------------&#010;&#010;I am going to disable this in the features file so it cannot be installed by default, but&#010;we still have the JAR just in case ServiceMix or something still need it, then we can drop&#010;it in 2.20.0 or 3.0 at the latest.&#010;&#010;&gt; camel-spring-dm - Should be removed&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11059&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11059&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: karaf, osgi&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Does not really work in OSGi&#010;&gt; http://camel.465427.n5.nabble.com/camel-spring-dm-feature-incompatible-to-most-other-features-of-camel-2-18-3-tp5796032.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
407,410,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11059) camel-spring-dm - Should be removed,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058682.1490291423000.264548.1491997841557%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:50:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11059?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965693#comment-15965693&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11059:&#010;-------------------------------------&#010;&#010;Some examples need to be updated&#010;&#010;examples/camel-example-box-osgi/README.md:* camel-spring-dm&#010;examples/camel-example-box-osgi/README.md:        feature:install camel-spring-dm&#010;examples/camel-example-cxf-osgi/README.md:        feature:install camel-spring-dm&#010;&#010;And spring boot has a starter module&#010;platforms/spring-boot/components-starter/camel-spring-dm-starter/pom.xml:&#010;&#010;&gt; camel-spring-dm - Should be removed&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11059&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11059&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: karaf, osgi&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Does not really work in OSGi&#010;&gt; http://camel.465427.n5.nabble.com/camel-spring-dm-feature-incompatible-to-most-other-features-of-camel-2-18-3-tp5796032.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
408,411,Claus Ibsen (JIRA),  [jira] [Assigned] (CAMEL-11059) camel-spring-dm - Should be removed,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058682.1490291423000.264558.1491997901759%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:51:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11059?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reassigned CAMEL-11059:&#010;-----------------------------------&#010;&#010;    Assignee: Claus Ibsen&#010;&#010;&gt; camel-spring-dm - Should be removed&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11059&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11059&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: karaf, osgi&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Does not really work in OSGi&#010;&gt; http://camel.465427.n5.nabble.com/camel-spring-dm-feature-incompatible-to-most-other-features-of-camel-2-18-3-tp5796032.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
409,412,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11059) camel-spring-dm - Should be removed,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058682.1490291423000.265125.1492001981578%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 12:59:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11059?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11059:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.19.0)&#010;                   2.20.0&#010;&#010;&gt; camel-spring-dm - Should be removed&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11059&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11059&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: karaf, osgi&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Does not really work in OSGi&#010;&gt; http://camel.465427.n5.nabble.com/camel-spring-dm-feature-incompatible-to-most-other-features-of-camel-2-18-3-tp5796032.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
410,413,Claus Ibsen (JIRA),  [jira] [Assigned] (CAMEL-11059) camel-spring-dm - Should be removed,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058682.1490291423000.269318.1492027122484%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 19:58:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11059?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reassigned CAMEL-11059:&#010;-----------------------------------&#010;&#010;    Assignee:     (was: Claus Ibsen)&#010;&#010;&gt; camel-spring-dm - Should be removed&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11059&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11059&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: karaf, osgi&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Does not really work in OSGi&#010;&gt; http://camel.465427.n5.nabble.com/camel-spring-dm-feature-incompatible-to-most-other-features-of-camel-2-18-3-tp5796032.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
411,414,,[jira] [Resolved] (CAMEL-11029) karaf - camel-cdi won't install,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058682.1490291423000.269318.1492027122484%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 19:58:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11059?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reassigned CAMEL-11059:&#010;-----------------------------------&#010;&#010;    Assignee:     (was: Claus Ibsen)&#010;&#010;&gt; camel-spring-dm - Should be removed&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11059&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11059&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: karaf, osgi&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Does not really work in OSGi&#010;&gt; http://camel.465427.n5.nabble.com/camel-spring-dm-feature-incompatible-to-most-other-features-of-camel-2-18-3-tp5796032.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
412,415,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11029) karaf - camel-cdi won't install,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13056764.1489691440000.264567.1491998261632%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:57:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11029?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11029.&#010;---------------------------------&#010;    Resolution: Won't Fix&#010;&#010;cdi on osgi is deprecated&#010;&#010;&gt; karaf - camel-cdi won't install&#010;&gt; -------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11029&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11029&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-cdi&#010;&gt;    Affects Versions: 2.16.4, 2.16.5, 2.18.2, 2.18.3&#010;&gt;         Environment: Verified in ServiceMix 7.0.0/Karaf 4.0.8 with Oracle Java 8&#010;&gt;            Reporter: Bob Blackard&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; Attempting to install camel-cdi feature results in an error.  I first installed pax-cdi&#010;and pax-cdi-weld features, which installed fine, but attempting to install camel-cdi results&#010;in a failure:&#010;&gt; {code}&#010;&gt; admin@root&gt;feature:install camel-cdi&#010;&gt; Error executing command: Unable to resolve root: missing requirement [root] osgi.identity;&#010;osgi.identity=camel-cdi; type=karaf.feature; version=""[2.16.4,2.16.4]""; filter:=""(&amp;(osgi.identity=camel-cdi)(type=karaf.feature)(version&gt;=2.16.4)(version&lt;=2.16.4))""&#010;[caused by: Unable to resolve camel-cdi/2.16.4: missing requirement [camel-cdi/2.16.4] osgi.identity;&#010;osgi.identity=org.apache.camel.camel-cdi; type=osgi.bundle; version=""[2.16.4,2.16.4]""; resolution:=mandatory&#010;[caused by: Unable to resolve org.apache.camel.camel-cdi/2.16.4: missing requirement [org.apache.camel.camel-cdi/2.16.4]&#010;osgi.wiring.package; filter:=""(&amp;(osgi.wiring.package=org.apache.deltaspike.core.util.metadata.builder)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))""]]&#010;&gt; {code}&#010;&gt; The pax-cdi features are specifying version 1.3.0 (for RC1) or 1.4.2 (for RC2), but camel-cdi&#010;is looking for version 1.5 and above.&#010;&gt; I was able to get camel-cdi installed by first installing a newer version of deltaspike&#010;than the one referenced by pax-cdi:&#010;&gt; {code}&#010;&gt; install mvn:org.apache.deltaspike.core/deltaspike-core-api/1.5.4&#010;&gt; install mvn:org.apache.deltaspike.core/deltaspike-core-impl/1.5.4&#010;&gt; feature:install camel-cdi&#010;&gt; {code}&#010;&gt; This also brings in pax-cdi 1.0.0.RC1.  However, my test bundle (based on camel-example-cdi-osgi)&#010;fails due to a problem with pax-cdi 1.0.0.RC1.&#010;&gt; I am able to install and run my bundle just fine fine, when staring a scratch ServiceMix&#010;installation, by overriding the pax-cdi and deltaspike using the script:&#010;&gt; {code}&#010;&gt; feature:repo-add mvn:org.ops4j.pax.cdi/pax-cdi-features/1.0.0.RC2/xml/features&#010;&gt; install mvn:org.apache.deltaspike.core/deltaspike-core-api/1.7.2&#010;&gt; install mvn:org.apache.deltaspike.core/deltaspike-core-impl/1.7.2&#010;&gt; feature:install pax-cdi/1.0.0.RC2&#010;&gt; feature:install pax-cdi-weld/1.0.0.RC2&#010;&gt; feature:install camel-cdi&#010;&gt; install -s mvn:com.omniprise.demo/camel-osgi-cdi/0.0.1-SNAPSHOT&#010;&gt; {code}&#010;&gt; I have also verified this on Camel 2.18.2 using Karaf 4.0.8 and the script:&#010;&gt; {code}&#010;&gt; feature:repo-add mvn:org.apache.camel.karaf/apache-camel/2.18.2/xml/features&#010;&gt; feature:repo-add mvn:org.ops4j.pax.cdi/pax-cdi-features/1.0.0.RC2/xml/features&#010;&gt; install mvn:org.apache.deltaspike.core/deltaspike-core-api/1.7.2&#010;&gt; install mvn:org.apache.deltaspike.core/deltaspike-core-impl/1.7.2&#010;&gt; feature:install pax-cdi/1.0.0.RC2&#010;&gt; feature:install pax-cdi-weld/1.0.0.RC2&#010;&gt; feature:install camel/2.18.2&#010;&gt; feature:install camel-blueprint/2.18.2&#010;&gt; feature:install camel-cdi/2.18.2&#010;&gt; install -s mvn:com.omniprise.demo/camel-osgi-cdi/0.0.1-SNAPSHOT&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
413,416,,[jira] [Commented] (CAMEL-10829) [jruby] Issue with multithreading and finalize(),http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13056764.1489691440000.264567.1491998261632%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:57:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11029?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11029.&#010;---------------------------------&#010;    Resolution: Won't Fix&#010;&#010;cdi on osgi is deprecated&#010;&#010;&gt; karaf - camel-cdi won't install&#010;&gt; -------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11029&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11029&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-cdi&#010;&gt;    Affects Versions: 2.16.4, 2.16.5, 2.18.2, 2.18.3&#010;&gt;         Environment: Verified in ServiceMix 7.0.0/Karaf 4.0.8 with Oracle Java 8&#010;&gt;            Reporter: Bob Blackard&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; Attempting to install camel-cdi feature results in an error.  I first installed pax-cdi&#010;and pax-cdi-weld features, which installed fine, but attempting to install camel-cdi results&#010;in a failure:&#010;&gt; {code}&#010;&gt; admin@root&gt;feature:install camel-cdi&#010;&gt; Error executing command: Unable to resolve root: missing requirement [root] osgi.identity;&#010;osgi.identity=camel-cdi; type=karaf.feature; version=""[2.16.4,2.16.4]""; filter:=""(&amp;(osgi.identity=camel-cdi)(type=karaf.feature)(version&gt;=2.16.4)(version&lt;=2.16.4))""&#010;[caused by: Unable to resolve camel-cdi/2.16.4: missing requirement [camel-cdi/2.16.4] osgi.identity;&#010;osgi.identity=org.apache.camel.camel-cdi; type=osgi.bundle; version=""[2.16.4,2.16.4]""; resolution:=mandatory&#010;[caused by: Unable to resolve org.apache.camel.camel-cdi/2.16.4: missing requirement [org.apache.camel.camel-cdi/2.16.4]&#010;osgi.wiring.package; filter:=""(&amp;(osgi.wiring.package=org.apache.deltaspike.core.util.metadata.builder)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))""]]&#010;&gt; {code}&#010;&gt; The pax-cdi features are specifying version 1.3.0 (for RC1) or 1.4.2 (for RC2), but camel-cdi&#010;is looking for version 1.5 and above.&#010;&gt; I was able to get camel-cdi installed by first installing a newer version of deltaspike&#010;than the one referenced by pax-cdi:&#010;&gt; {code}&#010;&gt; install mvn:org.apache.deltaspike.core/deltaspike-core-api/1.5.4&#010;&gt; install mvn:org.apache.deltaspike.core/deltaspike-core-impl/1.5.4&#010;&gt; feature:install camel-cdi&#010;&gt; {code}&#010;&gt; This also brings in pax-cdi 1.0.0.RC1.  However, my test bundle (based on camel-example-cdi-osgi)&#010;fails due to a problem with pax-cdi 1.0.0.RC1.&#010;&gt; I am able to install and run my bundle just fine fine, when staring a scratch ServiceMix&#010;installation, by overriding the pax-cdi and deltaspike using the script:&#010;&gt; {code}&#010;&gt; feature:repo-add mvn:org.ops4j.pax.cdi/pax-cdi-features/1.0.0.RC2/xml/features&#010;&gt; install mvn:org.apache.deltaspike.core/deltaspike-core-api/1.7.2&#010;&gt; install mvn:org.apache.deltaspike.core/deltaspike-core-impl/1.7.2&#010;&gt; feature:install pax-cdi/1.0.0.RC2&#010;&gt; feature:install pax-cdi-weld/1.0.0.RC2&#010;&gt; feature:install camel-cdi&#010;&gt; install -s mvn:com.omniprise.demo/camel-osgi-cdi/0.0.1-SNAPSHOT&#010;&gt; {code}&#010;&gt; I have also verified this on Camel 2.18.2 using Karaf 4.0.8 and the script:&#010;&gt; {code}&#010;&gt; feature:repo-add mvn:org.apache.camel.karaf/apache-camel/2.18.2/xml/features&#010;&gt; feature:repo-add mvn:org.ops4j.pax.cdi/pax-cdi-features/1.0.0.RC2/xml/features&#010;&gt; install mvn:org.apache.deltaspike.core/deltaspike-core-api/1.7.2&#010;&gt; install mvn:org.apache.deltaspike.core/deltaspike-core-impl/1.7.2&#010;&gt; feature:install pax-cdi/1.0.0.RC2&#010;&gt; feature:install pax-cdi-weld/1.0.0.RC2&#010;&gt; feature:install camel/2.18.2&#010;&gt; feature:install camel-blueprint/2.18.2&#010;&gt; feature:install camel-cdi/2.18.2&#010;&gt; install -s mvn:com.omniprise.demo/camel-osgi-cdi/0.0.1-SNAPSHOT&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
414,417,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-10829) [jruby] Issue with multithreading and finalize(),http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13042932.1487076517000.264574.1491998381543%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 11:59:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10829?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965702#comment-15965702&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-10829:&#010;-------------------------------------&#010;&#010;ruby is deprecated and we are not so keen on working on a fix for this if even possible, are&#010;you okay with closing this ticket?&#010;&#010;&gt; [jruby] Issue with multithreading and finalize()&#010;&gt; ------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10829&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10829&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-script&#010;&gt;    Affects Versions: 2.18.2&#010;&gt;            Reporter: Paolo Antinori&#010;&gt;&#010;&gt; There is a rare to hit issue with {{camel-script}} component and {{jruby}}.&#010;&gt; {{camel-script}} passes through this method chain to create a {{jruby}} {{ScriptEngine}}:&#010;&gt; https://github.com/apache/camel/blob/master/components/camel-script/src/main/java/org/apache/camel/builder/script/ScriptBuilder.java#L267-L269&#010;&gt; {code:java}&#010;&gt;     public static boolean supportScriptLanguage(String language) {&#010;&gt;         return createScriptEngine(language, true) != null;&#010;&gt; }&#010;&gt; {code}&#010;&gt; *The problem with that code is that it creates a Script Engine instance, but it doesn't&#010;keep a reference to that  object.*&#010;&gt; JRuby gives a specialized behavior to {{finalize()}} method of its runtime:&#010;&gt; https://github.com/jruby/jruby/blob/jruby-1_7/core/src/main/java/org/jruby/embed/ScriptingContainer.java#L1907-L1929&#010;&gt; The combination of the 2 conditions is able to cause situation where the {{gc()}} thread,&#010;reaps JRuby instances, triggering their clean up methods:&#010;&gt; https://github.com/jruby/jruby/blob/jruby-1_7/core/src/main/java/org/jruby/embed/ScriptingContainer.java#L1907-L1929t&#010;&gt; before Camel has really finished using it.&#010;&gt; This behavior can be noticed in https://github.com/apache/camel/blob/master/components/camel-script/src/test/java/org/apache/camel/builder/script/JRubySingletonTest.java&#010;failing every now and then. Event more frequent when we tried to upgrade to jruby 1.7.26:&#010;&#010;&gt; https://issues.apache.org/jira/browse/CAMEL-10477&#010;&gt; {code}&#010;&gt; ""main@1"" prio=5 tid=0x1 nid=NA runnable&#010;&gt;   java.lang.Thread.State: RUNNABLE&#010;&gt; &#009;  at org.apache.camel.builder.script.ScriptBuilder.tryCreateScriptEngine(ScriptBuilder.java:359)&#010;&gt; &#009;  at org.apache.camel.builder.script.ScriptBuilder.createScriptEngine(ScriptBuilder.java:336)&#010;&gt; &#009;  at org.apache.camel.builder.script.ScriptBuilder.supportScriptLanguage(ScriptBuilder.java:268)&#010;&gt; &#009;  at org.apache.camel.builder.script.ScriptLanguageResolver.resolveLanguage(ScriptLanguageResolver.java:30)&#010;&gt; &#009;  at org.apache.camel.builder.script.RubyLanguage.createExpression(RubyLanguage.java:38)&#010;&gt; &#009;  at org.apache.camel.component.language.LanguageEndpoint.createProducer(LanguageEndpoint.java:96)&#010;&gt; &#009;  at org.apache.camel.impl.ProducerCache.doGetProducer(ProducerCache.java:439)&#010;&gt; &#009;  - locked &lt;0x1806&gt; (a org.apache.camel.impl.ProducerCache)&#010;&gt; &#009;  at org.apache.camel.impl.ProducerCache.acquireProducer(ProducerCache.java:160)&#010;&gt; &#009;  at org.apache.camel.processor.SendProcessor.doStart(SendProcessor.java:243)&#010;&gt; {code}&#010;&gt; Now, I honestly don't know if this should be fixed on Camel side (and reason if the scripting&#010;API needs to be changed for other runtimes too), or  this should be handled on JRuby one.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
415,418,Paolo Antinori (JIRA),  [jira] [Resolved] (CAMEL-10829) [jruby] Issue with multithreading and finalize(),http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13042932.1487076517000.264796.1492000181565%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 12:29:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10829?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Paolo Antinori resolved CAMEL-10829.&#010;------------------------------------&#010;    Resolution: Won't Fix&#010;&#010;&gt; [jruby] Issue with multithreading and finalize()&#010;&gt; ------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10829&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10829&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-script&#010;&gt;    Affects Versions: 2.18.2&#010;&gt;            Reporter: Paolo Antinori&#010;&gt;&#010;&gt; There is a rare to hit issue with {{camel-script}} component and {{jruby}}.&#010;&gt; {{camel-script}} passes through this method chain to create a {{jruby}} {{ScriptEngine}}:&#010;&gt; https://github.com/apache/camel/blob/master/components/camel-script/src/main/java/org/apache/camel/builder/script/ScriptBuilder.java#L267-L269&#010;&gt; {code:java}&#010;&gt;     public static boolean supportScriptLanguage(String language) {&#010;&gt;         return createScriptEngine(language, true) != null;&#010;&gt; }&#010;&gt; {code}&#010;&gt; *The problem with that code is that it creates a Script Engine instance, but it doesn't&#010;keep a reference to that  object.*&#010;&gt; JRuby gives a specialized behavior to {{finalize()}} method of its runtime:&#010;&gt; https://github.com/jruby/jruby/blob/jruby-1_7/core/src/main/java/org/jruby/embed/ScriptingContainer.java#L1907-L1929&#010;&gt; The combination of the 2 conditions is able to cause situation where the {{gc()}} thread,&#010;reaps JRuby instances, triggering their clean up methods:&#010;&gt; https://github.com/jruby/jruby/blob/jruby-1_7/core/src/main/java/org/jruby/embed/ScriptingContainer.java#L1907-L1929t&#010;&gt; before Camel has really finished using it.&#010;&gt; This behavior can be noticed in https://github.com/apache/camel/blob/master/components/camel-script/src/test/java/org/apache/camel/builder/script/JRubySingletonTest.java&#010;failing every now and then. Event more frequent when we tried to upgrade to jruby 1.7.26:&#010;&#010;&gt; https://issues.apache.org/jira/browse/CAMEL-10477&#010;&gt; {code}&#010;&gt; ""main@1"" prio=5 tid=0x1 nid=NA runnable&#010;&gt;   java.lang.Thread.State: RUNNABLE&#010;&gt; &#009;  at org.apache.camel.builder.script.ScriptBuilder.tryCreateScriptEngine(ScriptBuilder.java:359)&#010;&gt; &#009;  at org.apache.camel.builder.script.ScriptBuilder.createScriptEngine(ScriptBuilder.java:336)&#010;&gt; &#009;  at org.apache.camel.builder.script.ScriptBuilder.supportScriptLanguage(ScriptBuilder.java:268)&#010;&gt; &#009;  at org.apache.camel.builder.script.ScriptLanguageResolver.resolveLanguage(ScriptLanguageResolver.java:30)&#010;&gt; &#009;  at org.apache.camel.builder.script.RubyLanguage.createExpression(RubyLanguage.java:38)&#010;&gt; &#009;  at org.apache.camel.component.language.LanguageEndpoint.createProducer(LanguageEndpoint.java:96)&#010;&gt; &#009;  at org.apache.camel.impl.ProducerCache.doGetProducer(ProducerCache.java:439)&#010;&gt; &#009;  - locked &lt;0x1806&gt; (a org.apache.camel.impl.ProducerCache)&#010;&gt; &#009;  at org.apache.camel.impl.ProducerCache.acquireProducer(ProducerCache.java:160)&#010;&gt; &#009;  at org.apache.camel.processor.SendProcessor.doStart(SendProcessor.java:243)&#010;&gt; {code}&#010;&gt; Now, I honestly don't know if this should be fixed on Camel side (and reason if the scripting&#010;API needs to be changed for other runtimes too), or  this should be handled on JRuby one.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
416,419,,[jira] [Created] (CAMEL-11139) Exception may be silent swallowed in InProducer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13042932.1487076517000.264796.1492000181565%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 12:29:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10829?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Paolo Antinori resolved CAMEL-10829.&#010;------------------------------------&#010;    Resolution: Won't Fix&#010;&#010;&gt; [jruby] Issue with multithreading and finalize()&#010;&gt; ------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10829&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10829&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-script&#010;&gt;    Affects Versions: 2.18.2&#010;&gt;            Reporter: Paolo Antinori&#010;&gt;&#010;&gt; There is a rare to hit issue with {{camel-script}} component and {{jruby}}.&#010;&gt; {{camel-script}} passes through this method chain to create a {{jruby}} {{ScriptEngine}}:&#010;&gt; https://github.com/apache/camel/blob/master/components/camel-script/src/main/java/org/apache/camel/builder/script/ScriptBuilder.java#L267-L269&#010;&gt; {code:java}&#010;&gt;     public static boolean supportScriptLanguage(String language) {&#010;&gt;         return createScriptEngine(language, true) != null;&#010;&gt; }&#010;&gt; {code}&#010;&gt; *The problem with that code is that it creates a Script Engine instance, but it doesn't&#010;keep a reference to that  object.*&#010;&gt; JRuby gives a specialized behavior to {{finalize()}} method of its runtime:&#010;&gt; https://github.com/jruby/jruby/blob/jruby-1_7/core/src/main/java/org/jruby/embed/ScriptingContainer.java#L1907-L1929&#010;&gt; The combination of the 2 conditions is able to cause situation where the {{gc()}} thread,&#010;reaps JRuby instances, triggering their clean up methods:&#010;&gt; https://github.com/jruby/jruby/blob/jruby-1_7/core/src/main/java/org/jruby/embed/ScriptingContainer.java#L1907-L1929t&#010;&gt; before Camel has really finished using it.&#010;&gt; This behavior can be noticed in https://github.com/apache/camel/blob/master/components/camel-script/src/test/java/org/apache/camel/builder/script/JRubySingletonTest.java&#010;failing every now and then. Event more frequent when we tried to upgrade to jruby 1.7.26:&#010;&#010;&gt; https://issues.apache.org/jira/browse/CAMEL-10477&#010;&gt; {code}&#010;&gt; ""main@1"" prio=5 tid=0x1 nid=NA runnable&#010;&gt;   java.lang.Thread.State: RUNNABLE&#010;&gt; &#009;  at org.apache.camel.builder.script.ScriptBuilder.tryCreateScriptEngine(ScriptBuilder.java:359)&#010;&gt; &#009;  at org.apache.camel.builder.script.ScriptBuilder.createScriptEngine(ScriptBuilder.java:336)&#010;&gt; &#009;  at org.apache.camel.builder.script.ScriptBuilder.supportScriptLanguage(ScriptBuilder.java:268)&#010;&gt; &#009;  at org.apache.camel.builder.script.ScriptLanguageResolver.resolveLanguage(ScriptLanguageResolver.java:30)&#010;&gt; &#009;  at org.apache.camel.builder.script.RubyLanguage.createExpression(RubyLanguage.java:38)&#010;&gt; &#009;  at org.apache.camel.component.language.LanguageEndpoint.createProducer(LanguageEndpoint.java:96)&#010;&gt; &#009;  at org.apache.camel.impl.ProducerCache.doGetProducer(ProducerCache.java:439)&#010;&gt; &#009;  - locked &lt;0x1806&gt; (a org.apache.camel.impl.ProducerCache)&#010;&gt; &#009;  at org.apache.camel.impl.ProducerCache.acquireProducer(ProducerCache.java:160)&#010;&gt; &#009;  at org.apache.camel.processor.SendProcessor.doStart(SendProcessor.java:243)&#010;&gt; {code}&#010;&gt; Now, I honestly don't know if this should be fixed on Camel side (and reason if the scripting&#010;API needs to be changed for other runtimes too), or  this should be handled on JRuby one.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
417,420,Thomas Diesler (JIRA),  [jira] [Created] (CAMEL-11139) Exception may be silent swallowed in InProducer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063455.1491999521000.264717.1491999581585%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 12:19:41 GMT","Thomas Diesler created CAMEL-11139:&#010;--------------------------------------&#010;&#010;             Summary: Exception may be silent swallowed in InProducer&#010;                 Key: CAMEL-11139&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11139&#010;             Project: Camel&#010;          Issue Type: Bug&#010;    Affects Versions: 2.18.3&#010;            Reporter: Thomas Diesler&#010;            Assignee: Thomas Diesler&#010;             Fix For: 2.18.4, 2.19.0&#010;&#010;&#010;ProducerCache.doInProducer() may be called with null exchange. The javadoc says&#010;&#010;{code}&#010;    /**&#010;     * Sends an exchange to an endpoint using a supplied callback, using the synchronous processing.&#010;     * &lt;p/&gt;&#010;     * If an exception was thrown during processing, it would be set on the given Exchange&#010;     *&#010;     * @param endpoint  the endpoint to send the exchange to&#010;     * @param exchange  the exchange, can be &lt;tt&gt;null&lt;/tt&gt; if so then create a&#010;new exchange from the producer&#010;     * @param pattern   the exchange pattern, can be &lt;tt&gt;null&lt;/tt&gt;&#010;     * @param callback  the callback&#010;     * @return the response from the callback&#010;     * @see #doInAsyncProducer(org.apache.camel.Endpoint, org.apache.camel.Exchange, org.apache.camel.ExchangePattern,&#010;org.apache.camel.AsyncCallback, org.apache.camel.AsyncProducerCallback)&#010;     */&#010;    public &lt;T&gt; T doInProducer(Endpoint endpoint, Exchange exchange, ExchangePattern&#010;pattern, ProducerCallback&lt;T&gt; callback) {&#010;{code}&#010;&#010;The exchange is however never created, which may result in a null return from ProducerTemplate&#010;and a possible exception silently being ignored.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
418,421,Thomas Diesler (JIRA),  [jira] [Updated] (CAMEL-11139) Exchange not created in ProducerCache,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063455.1491999521000.264971.1492001021688%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 12:43:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11139?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Thomas Diesler updated CAMEL-11139:&#010;-----------------------------------&#010;    Summary: Exchange not created in ProducerCache  (was: Exception may be silent swallowed&#010;in InProducer)&#010;&#010;&gt; Exchange not created in ProducerCache&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11139&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11139&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Thomas Diesler&#010;&gt;            Assignee: Thomas Diesler&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; ProducerCache.doInProducer() may be called with null exchange. The javadoc says&#010;&gt; {code}&#010;&gt;     /**&#010;&gt;      * Sends an exchange to an endpoint using a supplied callback, using the synchronous&#010;processing.&#010;&gt;      * &lt;p/&gt;&#010;&gt;      * If an exception was thrown during processing, it would be set on the given Exchange&#010;&gt;      *&#010;&gt;      * @param endpoint  the endpoint to send the exchange to&#010;&gt;      * @param exchange  the exchange, can be &lt;tt&gt;null&lt;/tt&gt; if so then create&#010;a new exchange from the producer&#010;&gt;      * @param pattern   the exchange pattern, can be &lt;tt&gt;null&lt;/tt&gt;&#010;&gt;      * @param callback  the callback&#010;&gt;      * @return the response from the callback&#010;&gt;      * @see #doInAsyncProducer(org.apache.camel.Endpoint, org.apache.camel.Exchange,&#010;org.apache.camel.ExchangePattern, org.apache.camel.AsyncCallback, org.apache.camel.AsyncProducerCallback)&#010;&gt;      */&#010;&gt;     public &lt;T&gt; T doInProducer(Endpoint endpoint, Exchange exchange, ExchangePattern&#010;pattern, ProducerCallback&lt;T&gt; callback) {&#010;&gt; {code}&#010;&gt; The exchange is however never created, which may result in a null return from ProducerTemplate&#010;and a possible exception silently being ignored.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
419,422,Thomas Diesler (JIRA),  [jira] [Updated] (CAMEL-11139) Exchange not created in ProducerCache,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063455.1491999521000.265024.1492001147462%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 12:45:47 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11139?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Thomas Diesler updated CAMEL-11139:&#010;-----------------------------------&#010;    Description: &#010;[ProducerCache.doInProducer()|https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/impl/ProducerCache.java#L348]&#010;may be called with null exchange. &#010;&#010;The javadoc says&#010;&#010;{code}&#010;    /**&#010;     * Sends an exchange to an endpoint using a supplied callback, using the synchronous processing.&#010;     * &lt;p/&gt;&#010;     * If an exception was thrown during processing, it would be set on the given Exchange&#010;     *&#010;     * @param endpoint  the endpoint to send the exchange to&#010;     * @param exchange  the exchange, can be &lt;tt&gt;null&lt;/tt&gt; if so then create a&#010;new exchange from the producer&#010;     * @param pattern   the exchange pattern, can be &lt;tt&gt;null&lt;/tt&gt;&#010;     * @param callback  the callback&#010;     * @return the response from the callback&#010;     * @see #doInAsyncProducer(org.apache.camel.Endpoint, org.apache.camel.Exchange, org.apache.camel.ExchangePattern,&#010;org.apache.camel.AsyncCallback, org.apache.camel.AsyncProducerCallback)&#010;     */&#010;    public &lt;T&gt; T doInProducer(Endpoint endpoint, Exchange exchange, ExchangePattern&#010;pattern, ProducerCallback&lt;T&gt; callback) {&#010;{code}&#010;&#010;The exchange is however never created, which may result in a null return from ProducerTemplate&#010;and a possible exception silently being ignored.&#010;&#010;  was:&#010;ProducerCache.doInProducer() may be called with null exchange. The javadoc says&#010;&#010;{code}&#010;    /**&#010;     * Sends an exchange to an endpoint using a supplied callback, using the synchronous processing.&#010;     * &lt;p/&gt;&#010;     * If an exception was thrown during processing, it would be set on the given Exchange&#010;     *&#010;     * @param endpoint  the endpoint to send the exchange to&#010;     * @param exchange  the exchange, can be &lt;tt&gt;null&lt;/tt&gt; if so then create a&#010;new exchange from the producer&#010;     * @param pattern   the exchange pattern, can be &lt;tt&gt;null&lt;/tt&gt;&#010;     * @param callback  the callback&#010;     * @return the response from the callback&#010;     * @see #doInAsyncProducer(org.apache.camel.Endpoint, org.apache.camel.Exchange, org.apache.camel.ExchangePattern,&#010;org.apache.camel.AsyncCallback, org.apache.camel.AsyncProducerCallback)&#010;     */&#010;    public &lt;T&gt; T doInProducer(Endpoint endpoint, Exchange exchange, ExchangePattern&#010;pattern, ProducerCallback&lt;T&gt; callback) {&#010;{code}&#010;&#010;The exchange is however never created, which may result in a null return from ProducerTemplate&#010;and a possible exception silently being ignored.&#010;&#010;&#010;&gt; Exchange not created in ProducerCache&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11139&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11139&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Thomas Diesler&#010;&gt;            Assignee: Thomas Diesler&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; [ProducerCache.doInProducer()|https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/impl/ProducerCache.java#L348]&#010;may be called with null exchange. &#010;&gt; The javadoc says&#010;&gt; {code}&#010;&gt;     /**&#010;&gt;      * Sends an exchange to an endpoint using a supplied callback, using the synchronous&#010;processing.&#010;&gt;      * &lt;p/&gt;&#010;&gt;      * If an exception was thrown during processing, it would be set on the given Exchange&#010;&gt;      *&#010;&gt;      * @param endpoint  the endpoint to send the exchange to&#010;&gt;      * @param exchange  the exchange, can be &lt;tt&gt;null&lt;/tt&gt; if so then create&#010;a new exchange from the producer&#010;&gt;      * @param pattern   the exchange pattern, can be &lt;tt&gt;null&lt;/tt&gt;&#010;&gt;      * @param callback  the callback&#010;&gt;      * @return the response from the callback&#010;&gt;      * @see #doInAsyncProducer(org.apache.camel.Endpoint, org.apache.camel.Exchange,&#010;org.apache.camel.ExchangePattern, org.apache.camel.AsyncCallback, org.apache.camel.AsyncProducerCallback)&#010;&gt;      */&#010;&gt;     public &lt;T&gt; T doInProducer(Endpoint endpoint, Exchange exchange, ExchangePattern&#010;pattern, ProducerCallback&lt;T&gt; callback) {&#010;&gt; {code}&#010;&gt; The exchange is however never created, which may result in a null return from ProducerTemplate&#010;and a possible exception silently being ignored.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
420,423,Thomas Diesler (JIRA),  [jira] [Updated] (CAMEL-11139) ClassNotFoundException may silently be ignored in InProducer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063455.1491999521000.265244.1492002821706%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 13:13:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11139?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Thomas Diesler updated CAMEL-11139:&#010;-----------------------------------&#010;    Summary: ClassNotFoundException may silently be ignored in InProducer  (was: Exchange&#010;not created in ProducerCache)&#010;&#010;&gt; ClassNotFoundException may silently be ignored in InProducer&#010;&gt; ------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11139&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11139&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Thomas Diesler&#010;&gt;            Assignee: Thomas Diesler&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; [ProducerCache.doInProducer()|https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/impl/ProducerCache.java#L348]&#010;may be called with null exchange. &#010;&gt; The javadoc says&#010;&gt; {code}&#010;&gt;     /**&#010;&gt;      * Sends an exchange to an endpoint using a supplied callback, using the synchronous&#010;processing.&#010;&gt;      * &lt;p/&gt;&#010;&gt;      * If an exception was thrown during processing, it would be set on the given Exchange&#010;&gt;      *&#010;&gt;      * @param endpoint  the endpoint to send the exchange to&#010;&gt;      * @param exchange  the exchange, can be &lt;tt&gt;null&lt;/tt&gt; if so then create&#010;a new exchange from the producer&#010;&gt;      * @param pattern   the exchange pattern, can be &lt;tt&gt;null&lt;/tt&gt;&#010;&gt;      * @param callback  the callback&#010;&gt;      * @return the response from the callback&#010;&gt;      * @see #doInAsyncProducer(org.apache.camel.Endpoint, org.apache.camel.Exchange,&#010;org.apache.camel.ExchangePattern, org.apache.camel.AsyncCallback, org.apache.camel.AsyncProducerCallback)&#010;&gt;      */&#010;&gt;     public &lt;T&gt; T doInProducer(Endpoint endpoint, Exchange exchange, ExchangePattern&#010;pattern, ProducerCallback&lt;T&gt; callback) {&#010;&gt; {code}&#010;&gt; The exchange is however never created, which may result in a null return from ProducerTemplate&#010;and a possible exception silently being ignored.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
421,424,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11139) ClassNotFoundException may silently be ignored in InProducer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063455.1491999521000.265255.1492002881705%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 13:14:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11139?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965806#comment-15965806&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11139:&#010;----------------------------------------&#010;&#010;GitHub user tdiesler opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1618&#010;&#010;    [CAMEL-11139] ClassNotFoundException may silently be ignored in InPro…&#010;&#010;    …ducer&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/tdiesler/camel CAMEL-11139&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1618.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1618&#010;    &#010;----&#010;commit e321440dd1b68c93293958343cbcce722c6b0943&#010;Author: Thomas Diesler &lt;thomas.diesler@jboss.com&gt;&#010;Date:   2017-04-12T12:43:39Z&#010;&#010;    [CAMEL-11139] ClassNotFoundException may silently be ignored in InProducer&#010;&#010;----&#010;&#010;&#010;&gt; ClassNotFoundException may silently be ignored in InProducer&#010;&gt; ------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11139&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11139&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Thomas Diesler&#010;&gt;            Assignee: Thomas Diesler&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; [ProducerCache.doInProducer()|https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/impl/ProducerCache.java#L348]&#010;may be called with null exchange. &#010;&gt; The javadoc says&#010;&gt; {code}&#010;&gt;     /**&#010;&gt;      * Sends an exchange to an endpoint using a supplied callback, using the synchronous&#010;processing.&#010;&gt;      * &lt;p/&gt;&#010;&gt;      * If an exception was thrown during processing, it would be set on the given Exchange&#010;&gt;      *&#010;&gt;      * @param endpoint  the endpoint to send the exchange to&#010;&gt;      * @param exchange  the exchange, can be &lt;tt&gt;null&lt;/tt&gt; if so then create&#010;a new exchange from the producer&#010;&gt;      * @param pattern   the exchange pattern, can be &lt;tt&gt;null&lt;/tt&gt;&#010;&gt;      * @param callback  the callback&#010;&gt;      * @return the response from the callback&#010;&gt;      * @see #doInAsyncProducer(org.apache.camel.Endpoint, org.apache.camel.Exchange,&#010;org.apache.camel.ExchangePattern, org.apache.camel.AsyncCallback, org.apache.camel.AsyncProducerCallback)&#010;&gt;      */&#010;&gt;     public &lt;T&gt; T doInProducer(Endpoint endpoint, Exchange exchange, ExchangePattern&#010;pattern, ProducerCallback&lt;T&gt; callback) {&#010;&gt; {code}&#010;&gt; The exchange is however never created, which may result in a null return from ProducerTemplate&#010;and a possible exception silently being ignored.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
422,425,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11139) ClassNotFoundException may silently be ignored in InProducer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063455.1491999521000.265271.1492002941765%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 13:15:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11139?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965810#comment-15965810&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11139:&#010;----------------------------------------&#010;&#010;GitHub user tdiesler opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1619&#010;&#010;    [CAMEL-11139] ClassNotFoundException may silently be ignored in InPro…&#010;&#010;    …ducer&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/tdiesler/camel CAMEL-11139m&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1619.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1619&#010;    &#010;----&#010;commit a8ff1af635ef982facdba7863c22a0d113153edb&#010;Author: Thomas Diesler &lt;thomas.diesler@jboss.com&gt;&#010;Date:   2017-04-12T12:43:39Z&#010;&#010;    [CAMEL-11139] ClassNotFoundException may silently be ignored in InProducer&#010;&#010;----&#010;&#010;&#010;&gt; ClassNotFoundException may silently be ignored in InProducer&#010;&gt; ------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11139&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11139&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Thomas Diesler&#010;&gt;            Assignee: Thomas Diesler&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; [ProducerCache.doInProducer()|https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/impl/ProducerCache.java#L348]&#010;may be called with null exchange. &#010;&gt; The javadoc says&#010;&gt; {code}&#010;&gt;     /**&#010;&gt;      * Sends an exchange to an endpoint using a supplied callback, using the synchronous&#010;processing.&#010;&gt;      * &lt;p/&gt;&#010;&gt;      * If an exception was thrown during processing, it would be set on the given Exchange&#010;&gt;      *&#010;&gt;      * @param endpoint  the endpoint to send the exchange to&#010;&gt;      * @param exchange  the exchange, can be &lt;tt&gt;null&lt;/tt&gt; if so then create&#010;a new exchange from the producer&#010;&gt;      * @param pattern   the exchange pattern, can be &lt;tt&gt;null&lt;/tt&gt;&#010;&gt;      * @param callback  the callback&#010;&gt;      * @return the response from the callback&#010;&gt;      * @see #doInAsyncProducer(org.apache.camel.Endpoint, org.apache.camel.Exchange,&#010;org.apache.camel.ExchangePattern, org.apache.camel.AsyncCallback, org.apache.camel.AsyncProducerCallback)&#010;&gt;      */&#010;&gt;     public &lt;T&gt; T doInProducer(Endpoint endpoint, Exchange exchange, ExchangePattern&#010;pattern, ProducerCallback&lt;T&gt; callback) {&#010;&gt; {code}&#010;&gt; The exchange is however never created, which may result in a null return from ProducerTemplate&#010;and a possible exception silently being ignored.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
423,426,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11139) ClassNotFoundException may silently be ignored in InProducer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063455.1491999521000.268766.1492023761867%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 19:02:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11139?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11139.&#010;---------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.17.7&#010;&#010;Thanks for the PR&#010;&#010;&gt; ClassNotFoundException may silently be ignored in InProducer&#010;&gt; ------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11139&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11139&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Thomas Diesler&#010;&gt;            Assignee: Thomas Diesler&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; [ProducerCache.doInProducer()|https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/impl/ProducerCache.java#L348]&#010;may be called with null exchange. &#010;&gt; The javadoc says&#010;&gt; {code}&#010;&gt;     /**&#010;&gt;      * Sends an exchange to an endpoint using a supplied callback, using the synchronous&#010;processing.&#010;&gt;      * &lt;p/&gt;&#010;&gt;      * If an exception was thrown during processing, it would be set on the given Exchange&#010;&gt;      *&#010;&gt;      * @param endpoint  the endpoint to send the exchange to&#010;&gt;      * @param exchange  the exchange, can be &lt;tt&gt;null&lt;/tt&gt; if so then create&#010;a new exchange from the producer&#010;&gt;      * @param pattern   the exchange pattern, can be &lt;tt&gt;null&lt;/tt&gt;&#010;&gt;      * @param callback  the callback&#010;&gt;      * @return the response from the callback&#010;&gt;      * @see #doInAsyncProducer(org.apache.camel.Endpoint, org.apache.camel.Exchange,&#010;org.apache.camel.ExchangePattern, org.apache.camel.AsyncCallback, org.apache.camel.AsyncProducerCallback)&#010;&gt;      */&#010;&gt;     public &lt;T&gt; T doInProducer(Endpoint endpoint, Exchange exchange, ExchangePattern&#010;pattern, ProducerCallback&lt;T&gt; callback) {&#010;&gt; {code}&#010;&gt; The exchange is however never created, which may result in a null return from ProducerTemplate&#010;and a possible exception silently being ignored.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
424,427,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11139) ClassNotFoundException may silently be ignored in InProducer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063455.1491999521000.268763.1492023761845%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 19:02:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11139?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11139:&#010;--------------------------------&#010;    Component/s: camel-core&#010;&#010;&gt; ClassNotFoundException may silently be ignored in InProducer&#010;&gt; ------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11139&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11139&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Thomas Diesler&#010;&gt;            Assignee: Thomas Diesler&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; [ProducerCache.doInProducer()|https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/impl/ProducerCache.java#L348]&#010;may be called with null exchange. &#010;&gt; The javadoc says&#010;&gt; {code}&#010;&gt;     /**&#010;&gt;      * Sends an exchange to an endpoint using a supplied callback, using the synchronous&#010;processing.&#010;&gt;      * &lt;p/&gt;&#010;&gt;      * If an exception was thrown during processing, it would be set on the given Exchange&#010;&gt;      *&#010;&gt;      * @param endpoint  the endpoint to send the exchange to&#010;&gt;      * @param exchange  the exchange, can be &lt;tt&gt;null&lt;/tt&gt; if so then create&#010;a new exchange from the producer&#010;&gt;      * @param pattern   the exchange pattern, can be &lt;tt&gt;null&lt;/tt&gt;&#010;&gt;      * @param callback  the callback&#010;&gt;      * @return the response from the callback&#010;&gt;      * @see #doInAsyncProducer(org.apache.camel.Endpoint, org.apache.camel.Exchange,&#010;org.apache.camel.ExchangePattern, org.apache.camel.AsyncCallback, org.apache.camel.AsyncProducerCallback)&#010;&gt;      */&#010;&gt;     public &lt;T&gt; T doInProducer(Endpoint endpoint, Exchange exchange, ExchangePattern&#010;pattern, ProducerCallback&lt;T&gt; callback) {&#010;&gt; {code}&#010;&gt; The exchange is however never created, which may result in a null return from ProducerTemplate&#010;and a possible exception silently being ignored.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
425,428,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11139) ClassNotFoundException may silently be ignored in InProducer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063455.1491999521000.273972.1492073201986%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 08:46:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11139?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967295#comment-15967295&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11139:&#010;----------------------------------------&#010;&#010;Github user tdiesler closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1619&#010;&#010;&#010;&gt; ClassNotFoundException may silently be ignored in InProducer&#010;&gt; ------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11139&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11139&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Thomas Diesler&#010;&gt;            Assignee: Thomas Diesler&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; [ProducerCache.doInProducer()|https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/impl/ProducerCache.java#L348]&#010;may be called with null exchange. &#010;&gt; The javadoc says&#010;&gt; {code}&#010;&gt;     /**&#010;&gt;      * Sends an exchange to an endpoint using a supplied callback, using the synchronous&#010;processing.&#010;&gt;      * &lt;p/&gt;&#010;&gt;      * If an exception was thrown during processing, it would be set on the given Exchange&#010;&gt;      *&#010;&gt;      * @param endpoint  the endpoint to send the exchange to&#010;&gt;      * @param exchange  the exchange, can be &lt;tt&gt;null&lt;/tt&gt; if so then create&#010;a new exchange from the producer&#010;&gt;      * @param pattern   the exchange pattern, can be &lt;tt&gt;null&lt;/tt&gt;&#010;&gt;      * @param callback  the callback&#010;&gt;      * @return the response from the callback&#010;&gt;      * @see #doInAsyncProducer(org.apache.camel.Endpoint, org.apache.camel.Exchange,&#010;org.apache.camel.ExchangePattern, org.apache.camel.AsyncCallback, org.apache.camel.AsyncProducerCallback)&#010;&gt;      */&#010;&gt;     public &lt;T&gt; T doInProducer(Endpoint endpoint, Exchange exchange, ExchangePattern&#010;pattern, ProducerCallback&lt;T&gt; callback) {&#010;&gt; {code}&#010;&gt; The exchange is however never created, which may result in a null return from ProducerTemplate&#010;and a possible exception silently being ignored.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
426,429,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11139) ClassNotFoundException may silently be ignored in InProducer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063455.1491999521000.273979.1492073202041%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 08:46:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11139?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967297#comment-15967297&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11139:&#010;----------------------------------------&#010;&#010;Github user tdiesler closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1618&#010;&#010;&#010;&gt; ClassNotFoundException may silently be ignored in InProducer&#010;&gt; ------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11139&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11139&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Thomas Diesler&#010;&gt;            Assignee: Thomas Diesler&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; [ProducerCache.doInProducer()|https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/impl/ProducerCache.java#L348]&#010;may be called with null exchange. &#010;&gt; The javadoc says&#010;&gt; {code}&#010;&gt;     /**&#010;&gt;      * Sends an exchange to an endpoint using a supplied callback, using the synchronous&#010;processing.&#010;&gt;      * &lt;p/&gt;&#010;&gt;      * If an exception was thrown during processing, it would be set on the given Exchange&#010;&gt;      *&#010;&gt;      * @param endpoint  the endpoint to send the exchange to&#010;&gt;      * @param exchange  the exchange, can be &lt;tt&gt;null&lt;/tt&gt; if so then create&#010;a new exchange from the producer&#010;&gt;      * @param pattern   the exchange pattern, can be &lt;tt&gt;null&lt;/tt&gt;&#010;&gt;      * @param callback  the callback&#010;&gt;      * @return the response from the callback&#010;&gt;      * @see #doInAsyncProducer(org.apache.camel.Endpoint, org.apache.camel.Exchange,&#010;org.apache.camel.ExchangePattern, org.apache.camel.AsyncCallback, org.apache.camel.AsyncProducerCallback)&#010;&gt;      */&#010;&gt;     public &lt;T&gt; T doInProducer(Endpoint endpoint, Exchange exchange, ExchangePattern&#010;pattern, ProducerCallback&lt;T&gt; callback) {&#010;&gt; {code}&#010;&gt; The exchange is however never created, which may result in a null return from ProducerTemplate&#010;and a possible exception silently being ignored.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
427,430,,[jira] [Created] (CAMEL-11140) camel-reactive-streams - Add uuid for CamelSubscription,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063455.1491999521000.273979.1492073202041%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 08:46:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11139?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967297#comment-15967297&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11139:&#010;----------------------------------------&#010;&#010;Github user tdiesler closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1618&#010;&#010;&#010;&gt; ClassNotFoundException may silently be ignored in InProducer&#010;&gt; ------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11139&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11139&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Thomas Diesler&#010;&gt;            Assignee: Thomas Diesler&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; [ProducerCache.doInProducer()|https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/apache/camel/impl/ProducerCache.java#L348]&#010;may be called with null exchange. &#010;&gt; The javadoc says&#010;&gt; {code}&#010;&gt;     /**&#010;&gt;      * Sends an exchange to an endpoint using a supplied callback, using the synchronous&#010;processing.&#010;&gt;      * &lt;p/&gt;&#010;&gt;      * If an exception was thrown during processing, it would be set on the given Exchange&#010;&gt;      *&#010;&gt;      * @param endpoint  the endpoint to send the exchange to&#010;&gt;      * @param exchange  the exchange, can be &lt;tt&gt;null&lt;/tt&gt; if so then create&#010;a new exchange from the producer&#010;&gt;      * @param pattern   the exchange pattern, can be &lt;tt&gt;null&lt;/tt&gt;&#010;&gt;      * @param callback  the callback&#010;&gt;      * @return the response from the callback&#010;&gt;      * @see #doInAsyncProducer(org.apache.camel.Endpoint, org.apache.camel.Exchange,&#010;org.apache.camel.ExchangePattern, org.apache.camel.AsyncCallback, org.apache.camel.AsyncProducerCallback)&#010;&gt;      */&#010;&gt;     public &lt;T&gt; T doInProducer(Endpoint endpoint, Exchange exchange, ExchangePattern&#010;pattern, ProducerCallback&lt;T&gt; callback) {&#010;&gt; {code}&#010;&gt; The exchange is however never created, which may result in a null return from ProducerTemplate&#010;and a possible exception silently being ignored.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
428,431,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11140) camel-reactive-streams - Add uuid for CamelSubscription,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063480.1492003481000.265391.1492003481615%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 13:24:41 GMT",Claus Ibsen created CAMEL-11140:&#010;-----------------------------------&#010;&#010;             Summary: camel-reactive-streams - Add uuid for CamelSubscription&#010;                 Key: CAMEL-11140&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11140&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-reactive-streams&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.20.0&#010;&#010;&#010;A subscription do not have any kind of unique identifier? I wonder if&#010;it would make sense to include such in CamelSubscription. For example&#010;this can aid during debugging / logging / statistics. For example for&#010;the latter I would like to be able to use JMX tabular data to output a&#010;table with details about all the subscriptions and their state.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
429,432,Nicola Ferraro (JIRA),  [jira] [Assigned] (CAMEL-11140) camel-reactive-streams - Add uuid for CamelSubscription,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063480.1492003481000.276109.1492093542162%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 14:25:42 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11140?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro reassigned CAMEL-11140:&#010;--------------------------------------&#010;&#010;    Assignee: Nicola Ferraro&#010;&#010;&gt; camel-reactive-streams - Add uuid for CamelSubscription&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11140&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11140&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-reactive-streams&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; A subscription do not have any kind of unique identifier? I wonder if&#010;&gt; it would make sense to include such in CamelSubscription. For example&#010;&gt; this can aid during debugging / logging / statistics. For example for&#010;&gt; the latter I would like to be able to use JMX tabular data to output a&#010;&gt; table with details about all the subscriptions and their state.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
430,433,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11140) camel-reactive-streams - Add uuid for CamelSubscription,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063480.1492003481000.276183.1492094201652%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 14:36:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11140?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11140:&#010;--------------------------------&#010;    Issue Type: Improvement  (was: Bug)&#010;&#010;&gt; camel-reactive-streams - Add uuid for CamelSubscription&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11140&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11140&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-reactive-streams&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; A subscription do not have any kind of unique identifier? I wonder if&#010;&gt; it would make sense to include such in CamelSubscription. For example&#010;&gt; this can aid during debugging / logging / statistics. For example for&#010;&gt; the latter I would like to be able to use JMX tabular data to output a&#010;&gt; table with details about all the subscriptions and their state.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
431,434,,[jira] [Commented] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063480.1492003481000.276183.1492094201652%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 14:36:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11140?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11140:&#010;--------------------------------&#010;    Issue Type: Improvement  (was: Bug)&#010;&#010;&gt; camel-reactive-streams - Add uuid for CamelSubscription&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11140&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11140&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-reactive-streams&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; A subscription do not have any kind of unique identifier? I wonder if&#010;&gt; it would make sense to include such in CamelSubscription. For example&#010;&gt; this can aid during debugging / logging / statistics. For example for&#010;&gt; the latter I would like to be able to use JMX tabular data to output a&#010;&gt; table with details about all the subscriptions and their state.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
432,435,Luca Burgazzoli (JIRA),  [jira] [Commented] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.265821.1492006061606%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 14:07:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965923#comment-15965923&#010;] &#010;&#010;Luca Burgazzoli commented on CAMEL-10843:&#010;-----------------------------------------&#010;&#010;[~onders] have you made any progress ?&#010;&#010;&#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
433,436,Luca Burgazzoli (JIRA),  [jira] [Commented] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.265859.1492006601758%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 14:16:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965931#comment-15965931&#010;] &#010;&#010;Luca Burgazzoli commented on CAMEL-10843:&#010;-----------------------------------------&#010;&#010;I think we can skip adding documentation for:&#010;&#010;- hystrix as there is a hystrix eip&#010;- spring-dm as it is deprecated&#010;- scala as it is deprecated&#010;- testng as it is deprecated&#010;- scr as it is deprecated&#010;&#010;Make sense ?&#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
434,437,Tomohisa Igarashi (JIRA),  [jira] [Commented] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.266053.1492008041610%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 14:40:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15965976#comment-15965976&#010;] &#010;&#010;Tomohisa Igarashi commented on CAMEL-10843:&#010;-------------------------------------------&#010;&#010;[~lb] I also have some time to work on this, if you don't finish everything please leave remaining&#010;to me, I'll work on tomorrow morning (GMT+9)&#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
435,438,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.269027.1492025202986%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 19:26:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15966452#comment-15966452&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10843:&#010;----------------------------------------&#010;&#010;GitHub user onders86 opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1621&#010;&#010;    CAMEL-10843 - very initial, checking it in considering better than no…&#010;&#010;    …thing&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/onders86/camel CAMEL-10843&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1621.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1621&#010;    &#010;----&#010;commit 5d177fb987df5b9a02d5efbc9bcab42d3079abaa&#010;Author: onders86 &lt;ondersezgin+github@gmail.com&gt;&#010;Date:   2017-04-12T19:21:59Z&#010;&#010;    CAMEL-10843 - very initial, checking it in considering better than nothing&#010;&#010;----&#010;&#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
436,439,onder sezgin (JIRA),  [jira] [Commented] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.269145.1492025741960%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 19:35:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15966466#comment-15966466&#010;] &#010;&#010;onder sezgin commented on CAMEL-10843:&#010;--------------------------------------&#010;&#010;[~lb] Hi, I'd written very very initial things about ribbon before i was very busy with work&#010;and thinking of discussions around deprecating components before 2.19 release, i'd not found&#010;a chance to add anything and even trying to do something about the other components. I've&#010;just sent a PR for that one, considering better than nothing. As it is very initial, feel&#010;free to dump my PR. please just let me know, i don't mind closing it.&#010;&#010;Apart from my situation, i agree your suggestion around skipping some of them.&#010;&#010;[~igarashitm] if you want, you can carry on and if you want to share, we can split them up&#010;and share and maybe finish quicker(even though i am not sure if i can give them go in the&#010;following two weeks.)&#010;&#010;Thanks &#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
437,440,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.272966.1492058141837%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 04:35:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967112#comment-15967112&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10843:&#010;----------------------------------------&#010;&#010;GitHub user igarashitm opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1623&#010;&#010;    CAMEL-10843 Aligned component adoc name&#010;&#010;    shiro, spring-javaconfig, test-cdi had their document already, just those file name are&#010;not in expected shape. test-karaf and test-spring don't have adoc. I'll work on those 2 from&#010;now.&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/igarashitm/camel CAMEL-10843&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1623.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1623&#010;    &#010;----&#010;commit f1064b074ef17068e735804bb187c6661dc9ddb2&#010;Author: Tomohisa Igarashi &lt;tm.igarashi@gmail.com&gt;&#010;Date:   2017-04-13T03:11:27Z&#010;&#010;    CAMEL-10843 Aligned component adoc name&#010;&#010;----&#010;&#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
438,441,Luca Burgazzoli (JIRA),  [jira] [Commented] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.273320.1492062941576%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 05:55:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967170#comment-15967170&#010;] &#010;&#010;Luca Burgazzoli commented on CAMEL-10843:&#010;-----------------------------------------&#010;&#010;Going to merge the two PR, thx&#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
439,442,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.273540.1492066541684%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 06:55:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967209#comment-15967209&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10843:&#010;----------------------------------------&#010;&#010;Github user igarashitm closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1623&#010;&#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
440,443,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.273644.1492068401613%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 07:26:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967231#comment-15967231&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10843:&#010;----------------------------------------&#010;&#010;Github user onders86 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1621&#010;&#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
441,444,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.273773.1492070021832%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 07:53:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967257#comment-15967257&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-10843:&#010;-------------------------------------&#010;&#010;Thanks for the help with this.&#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
442,445,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.274195.1492075421666%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 09:23:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-10843.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;We have something now. Thanks for the help&#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
443,446,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.275318.1492086281748%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 12:24:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967508#comment-15967508&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10843:&#010;----------------------------------------&#010;&#010;GitHub user igarashitm opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1627&#010;&#010;    CAMEL-10843 Added adoc for camel-test-spring&#010;&#010;    Ported from existing wiki doc&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/igarashitm/camel CAMEL-10843-test-spring&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1627.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1627&#010;    &#010;----&#010;commit 77b2d3fee592b39493f0491fef2c9f7ea33e35a4&#010;Author: Tomohisa Igarashi &lt;tm.igarashi@gmail.com&gt;&#010;Date:   2017-04-13T09:04:41Z&#010;&#010;    CAMEL-10843 Added adoc for camel-test-spring&#010;&#010;----&#010;&#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
444,447,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.275587.1492088981661%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 13:09:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967561#comment-15967561&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10843:&#010;----------------------------------------&#010;&#010;Github user igarashitm closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1627&#010;&#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
445,448,Tomohisa Igarashi (JIRA),  [jira] [Commented] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.281539.1492138481605%40Atlassian.JIRA%3E,issues,"Fri, 14 Apr 2017 02:54:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15968538#comment-15968538&#010;] &#010;&#010;Tomohisa Igarashi commented on CAMEL-10843:&#010;-------------------------------------------&#010;&#010;I found ignite component doesn't have a adoc yet. I'll port the wiki to adoc and submit a&#010;PR today.&#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
446,449,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.282819.1492157081636%40Atlassian.JIRA%3E,issues,"Fri, 14 Apr 2017 08:04:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15968755#comment-15968755&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10843:&#010;----------------------------------------&#010;&#010;GitHub user igarashitm opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1631&#010;&#010;    CAMEL-10843 Ported camel-ignite wiki doc into adoc&#010;&#010;    Auto generation for the component/endpoint options doesn't work for now, not yet sure&#010;why, maybe it has multiple endpoints? Also the ignite entry is removed from components/readme.adoc&#010;on each full build like camel-solr. I'll look into why.&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/igarashitm/camel CAMEL-10843-ignite&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1631.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1631&#010;    &#010;----&#010;commit fd0dca9f15916cda945a047808a1d4b01ff9cba7&#010;Author: Tomohisa Igarashi &lt;tm.igarashi@gmail.com&gt;&#010;Date:   2017-04-14T07:02:12Z&#010;&#010;    CAMEL-10843 Ported camel-ignite wiki doc into adoc&#010;&#010;----&#010;&#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
447,450,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10843) Add readme.adoc files for other components,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.283682.1492169022005%40Atlassian.JIRA%3E,issues,"Fri, 14 Apr 2017 11:23:42 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15968912#comment-15968912&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10843:&#010;----------------------------------------&#010;&#010;Github user igarashitm closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1631&#010;&#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
448,451,,[jira] [Created] (CAMEL-11141) Add support for VPC instances,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13043545.1487234039000.283682.1492169022005%40Atlassian.JIRA%3E,issues,"Fri, 14 Apr 2017 11:23:42 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10843?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15968912#comment-15968912&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10843:&#010;----------------------------------------&#010;&#010;Github user igarashitm closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1631&#010;&#010;&#010;&gt; Add readme.adoc files for other components&#010;&gt; ------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10843&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10843&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need a little bit of documentation for these&#010;&gt; [INFO]&#010;&gt; [WARNING] &#009;Missing .adoc other documentation  : 11&#010;&gt; [WARNING] &#009;&#009;hystrix&#010;&gt; [WARNING] &#009;&#009;ribbon&#010;&gt; [WARNING] &#009;&#009;scala&#010;&gt; [WARNING] &#009;&#009;scr&#010;&gt; [WARNING] &#009;&#009;shiro&#010;&gt; [WARNING] &#009;&#009;spring-dm&#010;&gt; [WARNING] &#009;&#009;spring-javaconfig&#010;&gt; [WARNING] &#009;&#009;test-cdi&#010;&gt; [WARNING] &#009;&#009;test-karaf&#010;&gt; [WARNING] &#009;&#009;test-spring&#010;&gt; [WARNING] &#009;&#009;testng&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
449,452,Thomas Diesler (JIRA),  [jira] [Created] (CAMEL-11141) Add support for VPC instances,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063548.1492016031000.267253.1492016081578%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 16:54:41 GMT","Thomas Diesler created CAMEL-11141:&#010;--------------------------------------&#010;&#010;             Summary: Add support for VPC instances&#010;                 Key: CAMEL-11141&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11141&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-aws&#010;            Reporter: Thomas Diesler&#010;            Assignee: Thomas Diesler&#010;             Fix For: 2.18.4&#010;&#010;&#010;These common EC2 instance types are [only supported with VPC|https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html#vpc-only-instance-types]&#010;&#010;* C4&#010;* I3&#010;* M4&#010;* P2&#010;* R4&#010;* T2&#010;* X1&#010;&#010;For this to work, the request needs to provide a subnet ID&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
450,453,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11141) Add support for VPC instances,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063548.1492016031000.267276.1492016261569%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 16:57:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11141?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15966204#comment-15966204&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11141:&#010;----------------------------------------&#010;&#010;GitHub user tdiesler opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1620&#010;&#010;    [CAMEL-11141] Add support for VPC instances&#010;&#010;    &#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/tdiesler/camel CAMEL-11141&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1620.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1620&#010;    &#010;----&#010;commit e7a4627b8140cdb3a27bed89fadfe8f33ed846b6&#010;Author: Thomas Diesler &lt;thomas.diesler@jboss.com&gt;&#010;Date:   2017-04-12T16:56:24Z&#010;&#010;    [CAMEL-11141] Add support for VPC instances&#010;&#010;----&#010;&#010;&#010;&gt; Add support for VPC instances&#010;&gt; -----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11141&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11141&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-aws&#010;&gt;            Reporter: Thomas Diesler&#010;&gt;            Assignee: Thomas Diesler&#010;&gt;             Fix For: 2.18.4&#010;&gt;&#010;&gt;&#010;&gt; These common EC2 instance types are [only supported with VPC|https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html#vpc-only-instance-types]&#010;&gt; * C4&#010;&gt; * I3&#010;&gt; * M4&#010;&gt; * P2&#010;&gt; * R4&#010;&gt; * T2&#010;&gt; * X1&#010;&gt; For this to work, the request needs to provide a subnet ID&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
451,454,Andrea Cosentino (JIRA),  [jira] [Updated] (CAMEL-11141) Add support for VPC instances,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063548.1492016031000.273408.1492064681654%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 06:24:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11141?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino updated CAMEL-11141:&#010;-------------------------------------&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Add support for VPC instances&#010;&gt; -----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11141&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11141&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-aws&#010;&gt;            Reporter: Thomas Diesler&#010;&gt;            Assignee: Thomas Diesler&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; These common EC2 instance types are [only supported with VPC|https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html#vpc-only-instance-types]&#010;&gt; * C4&#010;&gt; * I3&#010;&gt; * M4&#010;&gt; * P2&#010;&gt; * R4&#010;&gt; * T2&#010;&gt; * X1&#010;&gt; For this to work, the request needs to provide a subnet ID&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
452,455,Andrea Cosentino (JIRA),  [jira] [Resolved] (CAMEL-11141) Add support for VPC instances,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063548.1492016031000.273411.1492064741656%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 06:25:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11141?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino resolved CAMEL-11141.&#010;--------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Add support for VPC instances&#010;&gt; -----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11141&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11141&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-aws&#010;&gt;            Reporter: Thomas Diesler&#010;&gt;            Assignee: Thomas Diesler&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; These common EC2 instance types are [only supported with VPC|https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html#vpc-only-instance-types]&#010;&gt; * C4&#010;&gt; * I3&#010;&gt; * M4&#010;&gt; * P2&#010;&gt; * R4&#010;&gt; * T2&#010;&gt; * X1&#010;&gt; For this to work, the request needs to provide a subnet ID&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
453,456,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11141) Add support for VPC instances,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063548.1492016031000.273981.1492073202054%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 08:46:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11141?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967298#comment-15967298&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11141:&#010;----------------------------------------&#010;&#010;Github user tdiesler closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1620&#010;&#010;&#010;&gt; Add support for VPC instances&#010;&gt; -----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11141&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11141&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-aws&#010;&gt;            Reporter: Thomas Diesler&#010;&gt;            Assignee: Thomas Diesler&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; These common EC2 instance types are [only supported with VPC|https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html#vpc-only-instance-types]&#010;&gt; * C4&#010;&gt; * I3&#010;&gt; * M4&#010;&gt; * P2&#010;&gt; * R4&#010;&gt; * T2&#010;&gt; * X1&#010;&gt; For this to work, the request needs to provide a subnet ID&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
454,457,,[jira] [Created] (CAMEL-11142) camel-undertow-starter - fails test,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063548.1492016031000.273981.1492073202054%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 08:46:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11141?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967298#comment-15967298&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11141:&#010;----------------------------------------&#010;&#010;Github user tdiesler closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1620&#010;&#010;&#010;&gt; Add support for VPC instances&#010;&gt; -----------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11141&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11141&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-aws&#010;&gt;            Reporter: Thomas Diesler&#010;&gt;            Assignee: Thomas Diesler&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; These common EC2 instance types are [only supported with VPC|https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html#vpc-only-instance-types]&#010;&gt; * C4&#010;&gt; * I3&#010;&gt; * M4&#010;&gt; * P2&#010;&gt; * R4&#010;&gt; * T2&#010;&gt; * X1&#010;&gt; For this to work, the request needs to provide a subnet ID&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
455,458,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11142) camel-undertow-starter - fails test,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063604.1492026052000.269181.1492026101537%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 19:41:41 GMT","Claus Ibsen created CAMEL-11142:&#010;-----------------------------------&#010;&#010;             Summary: camel-undertow-starter - fails test&#010;                 Key: CAMEL-11142&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11142&#010;             Project: Camel&#010;          Issue Type: Test&#010;          Components: camel-undertow&#010;    Affects Versions: 2.19.0&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.19.0&#010;&#010;&#010;If you build the spring boot starters then some of them have unit tests which can fail such&#010;as&#010;&#010;{code}&#010;Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 5.256 sec &lt;&lt;&lt; FAILURE!&#010;- in org.apache.camel.component.undertow.UndertowSSLTest&#010;testEndpoint(org.apache.camel.component.undertow.UndertowSSLTest)  Time elapsed: 0.161 sec&#010; &lt;&lt;&lt; ERROR!&#010;org.apache.camel.CamelExecutionException: Exception occurred during execution on the exchange:&#010;Exchange[ID-davsclaus-air-50523-1492025976118-0-2]&#010;&#009;at org.apache.camel.component.undertow.UndertowSSLTest.testEndpoint(UndertowSSLTest.java:69)&#010;Caused by: java.io.IOException: UT000065: SSL must be specified to connect to a https URL&#010;&#009;at org.apache.camel.component.undertow.UndertowSSLTest.testEndpoint(UndertowSSLTest.java:69)&#010;&#010;&#010;Results :&#010;&#010;Tests in error:&#010;  UndertowSSLTest.testEndpoint:69 Â» CamelExecution Exception occurred during exe...&#010;&#010;Tests run: 1, Failures: 0, Errors: 1, Skipped: 0&#010;{code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
456,459,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11142) camel-undertow-starter - fails test,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063604.1492026052000.273760.1492069961763%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 07:52:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11142?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11142.&#010;---------------------------------&#010;    Resolution: Cannot Reproduce&#010;&#010;&gt; camel-undertow-starter - fails test&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11142&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11142&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; If you build the spring boot starters then some of them have unit tests which can fail&#010;such as&#010;&gt; {code}&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 5.256 sec &lt;&lt;&lt;&#010;FAILURE! - in org.apache.camel.component.undertow.UndertowSSLTest&#010;&gt; testEndpoint(org.apache.camel.component.undertow.UndertowSSLTest)  Time elapsed: 0.161&#010;sec  &lt;&lt;&lt; ERROR!&#010;&gt; org.apache.camel.CamelExecutionException: Exception occurred during execution on the&#010;exchange: Exchange[ID-davsclaus-air-50523-1492025976118-0-2]&#010;&gt; &#009;at org.apache.camel.component.undertow.UndertowSSLTest.testEndpoint(UndertowSSLTest.java:69)&#010;&gt; Caused by: java.io.IOException: UT000065: SSL must be specified to connect to a https&#010;URL&#010;&gt; &#009;at org.apache.camel.component.undertow.UndertowSSLTest.testEndpoint(UndertowSSLTest.java:69)&#010;&gt; Results :&#010;&gt; Tests in error:&#010;&gt;   UndertowSSLTest.testEndpoint:69 Â» CamelExecution Exception occurred during exe...&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
457,460,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11142) camel-undertow-starter - fails test,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063604.1492026052000.273759.1492069961756%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 07:52:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11142?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967253#comment-15967253&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11142:&#010;-------------------------------------&#010;&#010;The test passes today. Lets resolve and then see what the CI server say when it tests it&#010;&#010;&gt; camel-undertow-starter - fails test&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11142&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11142&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; If you build the spring boot starters then some of them have unit tests which can fail&#010;such as&#010;&gt; {code}&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 5.256 sec &lt;&lt;&lt;&#010;FAILURE! - in org.apache.camel.component.undertow.UndertowSSLTest&#010;&gt; testEndpoint(org.apache.camel.component.undertow.UndertowSSLTest)  Time elapsed: 0.161&#010;sec  &lt;&lt;&lt; ERROR!&#010;&gt; org.apache.camel.CamelExecutionException: Exception occurred during execution on the&#010;exchange: Exchange[ID-davsclaus-air-50523-1492025976118-0-2]&#010;&gt; &#009;at org.apache.camel.component.undertow.UndertowSSLTest.testEndpoint(UndertowSSLTest.java:69)&#010;&gt; Caused by: java.io.IOException: UT000065: SSL must be specified to connect to a https&#010;URL&#010;&gt; &#009;at org.apache.camel.component.undertow.UndertowSSLTest.testEndpoint(UndertowSSLTest.java:69)&#010;&gt; Results :&#010;&gt; Tests in error:&#010;&gt;   UndertowSSLTest.testEndpoint:69 Â» CamelExecution Exception occurred during exe...&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
458,461,,[jira] [Resolved] (CAMEL-11046) camel-undertow - Allow to consume from root path more without ending slash,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063604.1492026052000.273759.1492069961756%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 07:52:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11142?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967253#comment-15967253&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11142:&#010;-------------------------------------&#010;&#010;The test passes today. Lets resolve and then see what the CI server say when it tests it&#010;&#010;&gt; camel-undertow-starter - fails test&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11142&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11142&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; If you build the spring boot starters then some of them have unit tests which can fail&#010;such as&#010;&gt; {code}&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 5.256 sec &lt;&lt;&lt;&#010;FAILURE! - in org.apache.camel.component.undertow.UndertowSSLTest&#010;&gt; testEndpoint(org.apache.camel.component.undertow.UndertowSSLTest)  Time elapsed: 0.161&#010;sec  &lt;&lt;&lt; ERROR!&#010;&gt; org.apache.camel.CamelExecutionException: Exception occurred during execution on the&#010;exchange: Exchange[ID-davsclaus-air-50523-1492025976118-0-2]&#010;&gt; &#009;at org.apache.camel.component.undertow.UndertowSSLTest.testEndpoint(UndertowSSLTest.java:69)&#010;&gt; Caused by: java.io.IOException: UT000065: SSL must be specified to connect to a https&#010;URL&#010;&gt; &#009;at org.apache.camel.component.undertow.UndertowSSLTest.testEndpoint(UndertowSSLTest.java:69)&#010;&gt; Results :&#010;&gt; Tests in error:&#010;&gt;   UndertowSSLTest.testEndpoint:69 Â» CamelExecution Exception occurred during exe...&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
459,462,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11046) camel-undertow - Allow to consume from root path more without ending slash,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058146.1490172836000.269699.1492029521630%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 20:38:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11046?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11046.&#010;-----------------------------------&#010;    Resolution: Fixed&#010;&#010;Changed the setter for httpURI to set path to {{/}} if not given&#010;&#010;&gt; camel-undertow - Allow to consume from root path more without ending slash&#010;&gt; --------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11046&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11046&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; So you can do&#010;&gt; {code}&#010;&gt;     @Inject @Uri(""undertow:http://0.0.0.0:8080"")&#010;&gt;     private Endpoint undertow;&#010;&gt; {code}&#010;&gt; Without having to append ending slash, eg&#010;&gt; {code}&#010;&gt;     @Inject @Uri(""undertow:http://0.0.0.0:8080/"")&#010;&gt;     private Endpoint undertow;&#010;&gt; {code}&#010;&gt; As otherwise you get a stacktrace&#010;&gt; {code}&#010;&gt; 2017-03-21 18:06:15,764 ERROR [stderr] (main) java.lang.IllegalArgumentException: UT000009:&#010;Path must be specified&#010;&gt; 2017-03-21 18:06:15,764 ERROR [stderr] (main) &#009;at io.undertow.util.PathMatcher.addPrefixPath(PathMatcher.java:115)&#010;&gt; 2017-03-21 18:06:15,764 ERROR [stderr] (main) &#009;at io.undertow.server.handlers.PathHandler.addPrefixPath(PathHandler.java:132)&#010;&gt; 2017-03-21 18:06:15,765 ERROR [stderr] (main) &#009;at org.wildfly.extension.undertow.Host.registerHandler(Host.java:213)&#010;&gt; 2017-03-21 18:06:15,765 ERROR [stderr] (main) &#009;at org.wildfly.extension.camel.undertow.CamelUndertowHostService$WildFlyUndertowHost.registerHandler(CamelUndertowHostService.java:187)&#010;&gt; 2017-03-21 18:06:15,765 ERROR [stderr] (main) &#009;at org.apache.camel.component.undertow.UndertowConsumer.doStart(UndertowConsumer.java:73)&#010;&gt; 2017-03-21 18:06:15,765 ERROR [stderr] (main) &#009;at org.wildfly.extension.camel.undertow.WildFlyUndertowComponent$WildFlyUndertowUndertowConsumer.doStart(WildFlyUndertowComponent.java:90)&#010;&gt; 2017-03-21 18:06:15,765 ERROR [stderr] (main) &#009;at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61)&#010;&gt; 2017-03-21 18:06:15,766 ERROR [stderr] (main) &#009;at org.apache.camel.impl.DefaultCamelContext.startService(DefaultCamelContext.java:3375)&#010;&gt; 2017-03-21 18:06:15,766 ERROR [stderr] (main) &#009;at org.apache.camel.impl.DefaultCamelContext.doStartOrResumeRouteConsumers(DefaultCamelContext.java:3692)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
460,463,,[jira] [Commented] (CAMEL-10160) create a zendesk endpoint for creating new issues,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13058146.1490172836000.269699.1492029521630%40Atlassian.JIRA%3E,issues,"Wed, 12 Apr 2017 20:38:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11046?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11046.&#010;-----------------------------------&#010;    Resolution: Fixed&#010;&#010;Changed the setter for httpURI to set path to {{/}} if not given&#010;&#010;&gt; camel-undertow - Allow to consume from root path more without ending slash&#010;&gt; --------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11046&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11046&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-undertow&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; So you can do&#010;&gt; {code}&#010;&gt;     @Inject @Uri(""undertow:http://0.0.0.0:8080"")&#010;&gt;     private Endpoint undertow;&#010;&gt; {code}&#010;&gt; Without having to append ending slash, eg&#010;&gt; {code}&#010;&gt;     @Inject @Uri(""undertow:http://0.0.0.0:8080/"")&#010;&gt;     private Endpoint undertow;&#010;&gt; {code}&#010;&gt; As otherwise you get a stacktrace&#010;&gt; {code}&#010;&gt; 2017-03-21 18:06:15,764 ERROR [stderr] (main) java.lang.IllegalArgumentException: UT000009:&#010;Path must be specified&#010;&gt; 2017-03-21 18:06:15,764 ERROR [stderr] (main) &#009;at io.undertow.util.PathMatcher.addPrefixPath(PathMatcher.java:115)&#010;&gt; 2017-03-21 18:06:15,764 ERROR [stderr] (main) &#009;at io.undertow.server.handlers.PathHandler.addPrefixPath(PathHandler.java:132)&#010;&gt; 2017-03-21 18:06:15,765 ERROR [stderr] (main) &#009;at org.wildfly.extension.undertow.Host.registerHandler(Host.java:213)&#010;&gt; 2017-03-21 18:06:15,765 ERROR [stderr] (main) &#009;at org.wildfly.extension.camel.undertow.CamelUndertowHostService$WildFlyUndertowHost.registerHandler(CamelUndertowHostService.java:187)&#010;&gt; 2017-03-21 18:06:15,765 ERROR [stderr] (main) &#009;at org.apache.camel.component.undertow.UndertowConsumer.doStart(UndertowConsumer.java:73)&#010;&gt; 2017-03-21 18:06:15,765 ERROR [stderr] (main) &#009;at org.wildfly.extension.camel.undertow.WildFlyUndertowComponent$WildFlyUndertowUndertowConsumer.doStart(WildFlyUndertowComponent.java:90)&#010;&gt; 2017-03-21 18:06:15,765 ERROR [stderr] (main) &#009;at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61)&#010;&gt; 2017-03-21 18:06:15,766 ERROR [stderr] (main) &#009;at org.apache.camel.impl.DefaultCamelContext.startService(DefaultCamelContext.java:3375)&#010;&gt; 2017-03-21 18:06:15,766 ERROR [stderr] (main) &#009;at org.apache.camel.impl.DefaultCamelContext.doStartOrResumeRouteConsumers(DefaultCamelContext.java:3692)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
461,464,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10160) create a zendesk endpoint for creating new issues,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12990911.1468960974000.271900.1492043681766%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 00:34:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10160?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15966929#comment-15966929&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10160:&#010;----------------------------------------&#010;&#010;GitHub user igarashitm opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1622&#010;&#010;    CAMEL-10160 Added zendesk components to the kit&#010;&#010;    &#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/igarashitm/camel CAMEL-10160-dist&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1622.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1622&#010;    &#010;----&#010;commit 819740b5ff5d6c180fecfe04246a6e78a51f1983&#010;Author: Tomohisa Igarashi &lt;tm.igarashi@gmail.com&gt;&#010;Date:   2017-04-13T00:32:12Z&#010;&#010;    CAMEL-10160 Added zendesk components to the kit&#010;&#010;----&#010;&#010;&#010;&gt; create a zendesk endpoint for creating new issues &#010;&gt; --------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10160&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10160&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-zendesk&#010;&gt;            Reporter: james strachan&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; see the docs on how to do it:&#010;&gt; https://github.com/cloudbees/zendesk-java-client/blob/master/README.md&#010;&gt; so we can create Zendesk issues via a camel route&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
462,465,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10160) create a zendesk endpoint for creating new issues,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12990911.1468960974000.273551.1492066541766%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 06:55:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10160?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967211#comment-15967211&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10160:&#010;----------------------------------------&#010;&#010;Github user igarashitm closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1622&#010;&#010;&#010;&gt; create a zendesk endpoint for creating new issues &#010;&gt; --------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10160&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10160&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-zendesk&#010;&gt;            Reporter: james strachan&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; see the docs on how to do it:&#010;&gt; https://github.com/cloudbees/zendesk-java-client/blob/master/README.md&#010;&gt; so we can create Zendesk issues via a camel route&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
463,466,,[jira] [Created] (CAMEL-11143) Create a Maven plugin that creates REST DSL source code from Swagger specification,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12990911.1468960974000.273551.1492066541766%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 06:55:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10160?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967211#comment-15967211&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10160:&#010;----------------------------------------&#010;&#010;Github user igarashitm closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1622&#010;&#010;&#010;&gt; create a zendesk endpoint for creating new issues &#010;&gt; --------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10160&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10160&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-zendesk&#010;&gt;            Reporter: james strachan&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; see the docs on how to do it:&#010;&gt; https://github.com/cloudbees/zendesk-java-client/blob/master/README.md&#010;&gt; so we can create Zendesk issues via a camel route&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
464,467,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11143) Create a Maven plugin that creates REST DSL source code from Swagger specification,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063720.1492070210000.273789.1492070261554%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 07:57:41 GMT",Zoran Regvart created CAMEL-11143:&#010;-------------------------------------&#010;&#010;             Summary: Create a Maven plugin that creates REST DSL source code from Swagger&#010;specification&#010;                 Key: CAMEL-11143&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11143&#010;             Project: Camel&#010;          Issue Type: Sub-task&#010;          Components: tooling&#010;    Affects Versions: 2.19.0&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;&#010;&#010;With the generator implemented in CAMEL-11006 a Maven plugin can be built that takes the Swagger&#010;specification and generates the REST DSL source code.&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
465,468,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11143) Create a Maven plugin that creates REST DSL source code from Swagger specification,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063720.1492070210000.274725.1492081661732%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 11:07:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11143?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11143.&#010;-----------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s:     (was: Future)&#010;                   2.19.0&#010;&#010;&gt; Create a Maven plugin that creates REST DSL source code from Swagger specification&#010;&gt; ----------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11143&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11143&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;          Components: tooling&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; With the generator implemented in CAMEL-11006 a Maven plugin can be built that takes&#010;the Swagger specification and generates the REST DSL source code.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
466,469,,[jira] [Created] (CAMEL-11144) camel-milo - Use dynamic port in test,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063720.1492070210000.274725.1492081661732%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 11:07:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11143?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11143.&#010;-----------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s:     (was: Future)&#010;                   2.19.0&#010;&#010;&gt; Create a Maven plugin that creates REST DSL source code from Swagger specification&#010;&gt; ----------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11143&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11143&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Sub-task&#010;&gt;          Components: tooling&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; With the generator implemented in CAMEL-11006 a Maven plugin can be built that takes&#010;the Swagger specification and generates the REST DSL source code.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
467,470,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11144) camel-milo - Use dynamic port in test,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063723.1492072154000.273883.1492072181553%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 08:29:41 GMT",Claus Ibsen created CAMEL-11144:&#010;-----------------------------------&#010;&#010;             Summary: camel-milo - Use dynamic port in test&#010;                 Key: CAMEL-11144&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11144&#010;             Project: Camel&#010;          Issue Type: Test&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.20.0&#010;&#010;&#010;This component uses hard coded port numbers which should be dynamic assigned so it tests better&#010;on CI servers etc.&#010;&#010;Also the tests must be improved as they tend to hang etc.&#010;&#010;And the test code should be polished and updated as it has a bunch of commented out stuff&#010;and seems personal hostnames etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
468,471,Claus Ibsen (JIRA),  [jira] [Assigned] (CAMEL-11144) camel-milo - Use dynamic port in test,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063723.1492072154000.273895.1492072363296%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 08:32:43 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11144?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reassigned CAMEL-11144:&#010;-----------------------------------&#010;&#010;    Assignee: Jens Reimann&#010;&#010;&gt; camel-milo - Use dynamic port in test&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11144&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11144&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Jens Reimann&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; This component uses hard coded port numbers which should be dynamic assigned so it tests&#010;better on CI servers etc.&#010;&gt; Also the tests must be improved as they tend to hang etc.&#010;&gt; And the test code should be polished and updated as it has a bunch of commented out stuff&#010;and seems personal hostnames etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
469,472,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11144) camel-milo - Use dynamic port in test,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063723.1492072154000.274843.1492082981564%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 11:29:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11144?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967436#comment-15967436&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11144:&#010;-------------------------------------&#010;&#010;Jens can you help with a short description for camel-milo in the big components table you&#010;can see here&#010;https://github.com/apache/camel/tree/master/components&#010;&#010;I would like to improve it so users can better understand what it is, like we do for the others&#010;&#010;&gt; camel-milo - Use dynamic port in test&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11144&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11144&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Jens Reimann&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; This component uses hard coded port numbers which should be dynamic assigned so it tests&#010;better on CI servers etc.&#010;&gt; Also the tests must be improved as they tend to hang etc.&#010;&gt; And the test code should be polished and updated as it has a bunch of commented out stuff&#010;and seems personal hostnames etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
470,473,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11144) camel-milo - Use dynamic port in test,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063723.1492072154000.282982.1492159421672%40Atlassian.JIRA%3E,issues,"Fri, 14 Apr 2017 08:43:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11144?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15968790#comment-15968790&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11144:&#010;----------------------------------------&#010;&#010;GitHub user ctron opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1632&#010;&#010;    CAMEL-11144: Add components to component table, add description&#010;&#010;    Signed-off-by: Jens Reimann &lt;jreimann@redhat.com&gt;&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/ctron/camel feature/add_to_table_1&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1632.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1632&#010;    &#010;----&#010;commit 6afe1dd8fa24cfb9a13da706a7eccfa7991de2b3&#010;Author: Jens Reimann &lt;jreimann@redhat.com&gt;&#010;Date:   2017-04-14T08:42:43Z&#010;&#010;    CAMEL-11144: Add components to component table, add description&#010;    &#010;    Signed-off-by: Jens Reimann &lt;jreimann@redhat.com&gt;&#010;&#010;----&#010;&#010;&#010;&gt; camel-milo - Use dynamic port in test&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11144&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11144&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Jens Reimann&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; This component uses hard coded port numbers which should be dynamic assigned so it tests&#010;better on CI servers etc.&#010;&gt; Also the tests must be improved as they tend to hang etc.&#010;&gt; And the test code should be polished and updated as it has a bunch of commented out stuff&#010;and seems personal hostnames etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
471,474,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11144) camel-milo - Use dynamic port in test,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063723.1492072154000.306756.1492527941936%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 15:05:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11144?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972873#comment-15972873&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11144:&#010;----------------------------------------&#010;&#010;Github user ctron closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1632&#010;&#010;&#010;&gt; camel-milo - Use dynamic port in test&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11144&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11144&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Jens Reimann&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; This component uses hard coded port numbers which should be dynamic assigned so it tests&#010;better on CI servers etc.&#010;&gt; Also the tests must be improved as they tend to hang etc.&#010;&gt; And the test code should be polished and updated as it has a bunch of commented out stuff&#010;and seems personal hostnames etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
472,475,,[jira] [Updated] (CAMEL-10685) TransactionErrorHandler and TransactionPolicy for Camel CDI / JavaEE,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063723.1492072154000.306756.1492527941936%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 15:05:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11144?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972873#comment-15972873&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11144:&#010;----------------------------------------&#010;&#010;Github user ctron closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1632&#010;&#010;&#010;&gt; camel-milo - Use dynamic port in test&#010;&gt; -------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11144&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11144&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Jens Reimann&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; This component uses hard coded port numbers which should be dynamic assigned so it tests&#010;better on CI servers etc.&#010;&gt; Also the tests must be improved as they tend to hang etc.&#010;&gt; And the test code should be polished and updated as it has a bunch of commented out stuff&#010;and seems personal hostnames etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
473,476,Antonin Stefanutti (JIRA),  [jira] [Updated] (CAMEL-10685) TransactionErrorHandler and TransactionPolicy for Camel CDI / JavaEE,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13033336.1484046511000.273912.1492072781727%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 08:39:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10685?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Antonin Stefanutti updated CAMEL-10685:&#010;---------------------------------------&#010;    Summary: TransactionErrorHandler and TransactionPolicy for Camel CDI / JavaEE  (was: TransactionErrorHandler&#010;for JavaEE environments)&#010;&#010;&gt; TransactionErrorHandler and TransactionPolicy for Camel CDI / JavaEE&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10685&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10685&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-cdi&#010;&gt;    Affects Versions: 2.18.1&#010;&gt;            Reporter: RasPelikan&#010;&gt;            Assignee: Antonin Stefanutti&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The ""transacted"" configuration requires a Spring environment. We use JavaEE and we needed&#010;to use ""transacted"". We ported the Spring implementation of the TransactionErrorHandler to&#010;JavaEE.&#010;&gt; There is only one major difference: Spring's TransactionErrorHandler derives from org.apache.camel.processor.RedeliveryErrorHandler&#010;which brings the behavior that redelivery is done within the transaction. In our implementation&#010;there is a RedeliveryErrorHandler which uses the TransactionErrorHandler to force a rollback&#010;and create a new transaction for each redelivery.&#010;&gt; Example usage:&#010;&gt; {noformat}&#010;&gt; errorHandler(transactionErrorHandler() //&#010;&gt;                 .setTransactionPolicy(""PROPAGATION_SUPPORTS"") //&#010;&gt;                 .maximumRedeliveries(5) //&#010;&gt;                 .maximumRedeliveryDelay(5000) //&#010;&gt;                 .collisionAvoidancePercent(10) //&#010;&gt;                 .backOffMultiplier(1.5));&#010;&gt; from(""direct:sample"") //&#010;&gt;                 .transacted(""PROPAGATION_REQUIRES_NEW"")&#010;&gt;                 .to(""bean:sampleBean"");&#010;&gt; {noformat}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
474,477,Antonin Stefanutti (JIRA),  [jira] [Resolved] (CAMEL-10685) TransactionErrorHandler and TransactionPolicy for Camel CDI / JavaEE,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13033336.1484046511000.276358.1492095281973%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 14:54:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10685?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Antonin Stefanutti resolved CAMEL-10685.&#010;----------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; TransactionErrorHandler and TransactionPolicy for Camel CDI / JavaEE&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10685&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10685&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-cdi&#010;&gt;    Affects Versions: 2.18.1&#010;&gt;            Reporter: RasPelikan&#010;&gt;            Assignee: Antonin Stefanutti&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The ""transacted"" configuration requires a Spring environment. We use JavaEE and we needed&#010;to use ""transacted"". We ported the Spring implementation of the TransactionErrorHandler to&#010;JavaEE.&#010;&gt; There is only one major difference: Spring's TransactionErrorHandler derives from org.apache.camel.processor.RedeliveryErrorHandler&#010;which brings the behavior that redelivery is done within the transaction. In our implementation&#010;there is a RedeliveryErrorHandler which uses the TransactionErrorHandler to force a rollback&#010;and create a new transaction for each redelivery.&#010;&gt; Example usage:&#010;&gt; {noformat}&#010;&gt; errorHandler(transactionErrorHandler() //&#010;&gt;                 .setTransactionPolicy(""PROPAGATION_SUPPORTS"") //&#010;&gt;                 .maximumRedeliveries(5) //&#010;&gt;                 .maximumRedeliveryDelay(5000) //&#010;&gt;                 .collisionAvoidancePercent(10) //&#010;&gt;                 .backOffMultiplier(1.5));&#010;&gt; from(""direct:sample"") //&#010;&gt;                 .transacted(""PROPAGATION_REQUIRES_NEW"")&#010;&gt;                 .to(""bean:sampleBean"");&#010;&gt; {noformat}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
475,478,Antonin Stefanutti (JIRA),  [jira] [Updated] (CAMEL-10685) TransactionErrorHandler and TransactionPolicy for Camel CDI / JavaEE,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13033336.1484046511000.276443.1492096001768%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 15:06:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10685?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Antonin Stefanutti updated CAMEL-10685:&#010;---------------------------------------&#010;    Affects Version/s:     (was: 2.18.1)&#010;&#010;&gt; TransactionErrorHandler and TransactionPolicy for Camel CDI / JavaEE&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10685&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10685&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-cdi&#010;&gt;            Reporter: RasPelikan&#010;&gt;            Assignee: Antonin Stefanutti&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The ""transacted"" configuration requires a Spring environment. We use JavaEE and we needed&#010;to use ""transacted"". We ported the Spring implementation of the TransactionErrorHandler to&#010;JavaEE.&#010;&gt; There is only one major difference: Spring's TransactionErrorHandler derives from org.apache.camel.processor.RedeliveryErrorHandler&#010;which brings the behavior that redelivery is done within the transaction. In our implementation&#010;there is a RedeliveryErrorHandler which uses the TransactionErrorHandler to force a rollback&#010;and create a new transaction for each redelivery.&#010;&gt; Example usage:&#010;&gt; {noformat}&#010;&gt; errorHandler(transactionErrorHandler() //&#010;&gt;                 .setTransactionPolicy(""PROPAGATION_SUPPORTS"") //&#010;&gt;                 .maximumRedeliveries(5) //&#010;&gt;                 .maximumRedeliveryDelay(5000) //&#010;&gt;                 .collisionAvoidancePercent(10) //&#010;&gt;                 .backOffMultiplier(1.5));&#010;&gt; from(""direct:sample"") //&#010;&gt;                 .transacted(""PROPAGATION_REQUIRES_NEW"")&#010;&gt;                 .to(""bean:sampleBean"");&#010;&gt; {noformat}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
476,479,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10685) TransactionErrorHandler and TransactionPolicy for Camel CDI / JavaEE,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13033336.1484046511000.282676.1492154801615%40Atlassian.JIRA%3E,issues,"Fri, 14 Apr 2017 07:26:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10685?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15968729#comment-15968729&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10685:&#010;----------------------------------------&#010;&#010;Github user RasPelikan closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1390&#010;&#010;&#010;&gt; TransactionErrorHandler and TransactionPolicy for Camel CDI / JavaEE&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10685&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10685&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-cdi&#010;&gt;            Reporter: RasPelikan&#010;&gt;            Assignee: Antonin Stefanutti&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The ""transacted"" configuration requires a Spring environment. We use JavaEE and we needed&#010;to use ""transacted"". We ported the Spring implementation of the TransactionErrorHandler to&#010;JavaEE.&#010;&gt; There is only one major difference: Spring's TransactionErrorHandler derives from org.apache.camel.processor.RedeliveryErrorHandler&#010;which brings the behavior that redelivery is done within the transaction. In our implementation&#010;there is a RedeliveryErrorHandler which uses the TransactionErrorHandler to force a rollback&#010;and create a new transaction for each redelivery.&#010;&gt; Example usage:&#010;&gt; {noformat}&#010;&gt; errorHandler(transactionErrorHandler() //&#010;&gt;                 .setTransactionPolicy(""PROPAGATION_SUPPORTS"") //&#010;&gt;                 .maximumRedeliveries(5) //&#010;&gt;                 .maximumRedeliveryDelay(5000) //&#010;&gt;                 .collisionAvoidancePercent(10) //&#010;&gt;                 .backOffMultiplier(1.5));&#010;&gt; from(""direct:sample"") //&#010;&gt;                 .transacted(""PROPAGATION_REQUIRES_NEW"")&#010;&gt;                 .to(""bean:sampleBean"");&#010;&gt; {noformat}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
477,480,,[jira] [Commented] (CAMEL-8502) Camel BOM for Maven users,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13033336.1484046511000.282676.1492154801615%40Atlassian.JIRA%3E,issues,"Fri, 14 Apr 2017 07:26:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10685?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15968729#comment-15968729&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10685:&#010;----------------------------------------&#010;&#010;Github user RasPelikan closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1390&#010;&#010;&#010;&gt; TransactionErrorHandler and TransactionPolicy for Camel CDI / JavaEE&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10685&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10685&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-cdi&#010;&gt;            Reporter: RasPelikan&#010;&gt;            Assignee: Antonin Stefanutti&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The ""transacted"" configuration requires a Spring environment. We use JavaEE and we needed&#010;to use ""transacted"". We ported the Spring implementation of the TransactionErrorHandler to&#010;JavaEE.&#010;&gt; There is only one major difference: Spring's TransactionErrorHandler derives from org.apache.camel.processor.RedeliveryErrorHandler&#010;which brings the behavior that redelivery is done within the transaction. In our implementation&#010;there is a RedeliveryErrorHandler which uses the TransactionErrorHandler to force a rollback&#010;and create a new transaction for each redelivery.&#010;&gt; Example usage:&#010;&gt; {noformat}&#010;&gt; errorHandler(transactionErrorHandler() //&#010;&gt;                 .setTransactionPolicy(""PROPAGATION_SUPPORTS"") //&#010;&gt;                 .maximumRedeliveries(5) //&#010;&gt;                 .maximumRedeliveryDelay(5000) //&#010;&gt;                 .collisionAvoidancePercent(10) //&#010;&gt;                 .backOffMultiplier(1.5));&#010;&gt; from(""direct:sample"") //&#010;&gt;                 .transacted(""PROPAGATION_REQUIRES_NEW"")&#010;&gt;                 .to(""bean:sampleBean"");&#010;&gt; {noformat}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
478,481,Lars Heinemann (JIRA),  [jira] [Commented] (CAMEL-8502) Camel BOM for Maven users,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12782766.1426660665000.274122.1492074641685%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 09:10:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-8502?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967322#comment-15967322&#010;] &#010;&#010;Lars Heinemann commented on CAMEL-8502:&#010;---------------------------------------&#010;&#010;+1&#010;&#010;&gt; Camel BOM for Maven users&#010;&gt; -------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-8502&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-8502&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: build system&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; We should consider introducing a real Maven BOM (bill of material) that Camel end users&#010;can import and use when working on camel maven projects. Then the BOM imports the version&#010;dependencies and whatnot that Camel uses.&#010;&gt; Today camel-parent can be sorta used for that, but it was for internal camel usage.&#010;&gt; Having a BOM is the proper way.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
479,482,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-8502) Camel BOM for Maven users,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12782766.1426660665000.274207.1492075601663%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 09:26:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-8502?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967336#comment-15967336&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-8502:&#010;------------------------------------&#010;&#010;Use the voting system instead of +1 comments&#010;&#010;&gt; Camel BOM for Maven users&#010;&gt; -------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-8502&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-8502&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: build system&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; We should consider introducing a real Maven BOM (bill of material) that Camel end users&#010;can import and use when working on camel maven projects. Then the BOM imports the version&#010;dependencies and whatnot that Camel uses.&#010;&gt; Today camel-parent can be sorta used for that, but it was for internal camel usage.&#010;&gt; Having a BOM is the proper way.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
480,483,,[jira] [Created] (CAMEL-11145) Component docs - Fix broken links on github,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12782766.1426660665000.274207.1492075601663%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 09:26:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-8502?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967336#comment-15967336&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-8502:&#010;------------------------------------&#010;&#010;Use the voting system instead of +1 comments&#010;&#010;&gt; Camel BOM for Maven users&#010;&gt; -------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-8502&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-8502&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: build system&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; We should consider introducing a real Maven BOM (bill of material) that Camel end users&#010;can import and use when working on camel maven projects. Then the BOM imports the version&#010;dependencies and whatnot that Camel uses.&#010;&gt; Today camel-parent can be sorta used for that, but it was for internal camel usage.&#010;&gt; Having a BOM is the proper way.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
481,484,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11145) Component docs - Fix broken links on github,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063744.1492075569000.274200.1492075601600%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 09:26:41 GMT",Claus Ibsen created CAMEL-11145:&#010;-----------------------------------&#010;&#010;             Summary: Component docs - Fix broken links on github&#010;                 Key: CAMEL-11145&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11145&#010;             Project: Camel&#010;          Issue Type: Task&#010;            Reporter: Claus Ibsen&#010;            Assignee: Claus Ibsen&#010;             Fix For: 2.19.0&#010;&#010;&#010;See this PR&#010;https://github.com/apache/camel/pull/1615/files&#010;&#010;We need to update the maven tooling that generates the table to deal with certain components&#010;to render correct links&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
482,485,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11145) Component docs - Fix broken links on github,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063744.1492075569000.274713.1492081481752%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 11:04:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11145?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967415#comment-15967415&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11145:&#010;-------------------------------------&#010;&#010;box&#010;mail&#010;linkedin&#010;oligino2&#010;olgingo4&#010;&#010;&gt; Component docs - Fix broken links on github&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11145&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11145&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See this PR&#010;&gt; https://github.com/apache/camel/pull/1615/files&#010;&gt; We need to update the maven tooling that generates the table to deal with certain components&#010;to render correct links&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
483,486,Claus Ibsen (JIRA),  [jira] [Comment Edited] (CAMEL-11145) Component docs - Fix broken links on github,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063744.1492075569000.274714.1492081541519%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 11:05:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11145?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967415#comment-15967415&#010;] &#010;&#010;Claus Ibsen edited comment on CAMEL-11145 at 4/13/17 11:05 AM:&#010;---------------------------------------------------------------&#010;&#010;box&#010;mail&#010;linkedin&#010;oligino2&#010;olgingo4&#010;salesforce&#010;&#010;&#010;was (Author: davsclaus):&#010;box&#010;mail&#010;linkedin&#010;oligino2&#010;olgingo4&#010;&#010;&gt; Component docs - Fix broken links on github&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11145&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11145&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See this PR&#010;&gt; https://github.com/apache/camel/pull/1615/files&#010;&gt; We need to update the maven tooling that generates the table to deal with certain components&#010;to render correct links&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
484,487,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11145) Component docs - Fix broken links on github,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063744.1492075569000.274826.1492082861698%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 11:27:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11145?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11145.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Component docs - Fix broken links on github&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11145&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11145&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See this PR&#010;&gt; https://github.com/apache/camel/pull/1615/files&#010;&gt; We need to update the maven tooling that generates the table to deal with certain components&#010;to render correct links&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
485,488,,[jira] [Work started] (CAMEL-10373) camel-spring-boot-starter - Some starters has hibernate-validator,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063744.1492075569000.274826.1492082861698%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 11:27:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11145?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11145.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Component docs - Fix broken links on github&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11145&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11145&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See this PR&#010;&gt; https://github.com/apache/camel/pull/1615/files&#010;&gt; We need to update the maven tooling that generates the table to deal with certain components&#010;to render correct links&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
486,489,Nicola Ferraro (JIRA),  [jira] [Work started] (CAMEL-10373) camel-spring-boot-starter - Some starters has hibernate-validator,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13010490.1475853612000.274522.1492079501574%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 10:31:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10373?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Work on CAMEL-10373 started by Nicola Ferraro.&#010;----------------------------------------------&#010;&gt; camel-spring-boot-starter - Some starters has hibernate-validator&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10373&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10373&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-spring-boot&#010;&gt;    Affects Versions: 2.18.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Nicola&#010;&gt; I noticed that some of the starter components has hibernate-validator as compile dependency.&#010;I wonder why is that?&#010;&gt; davsclaus:/Users/davsclaus/workspace/camel/components-starter (master)/$ git grep ""hibernate-validator""&#010;&gt; camel-jetty9-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-kubernetes-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-netty4-http-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-netty4-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-restlet-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-swagger-java-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-undertow-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
487,490,Nicola Ferraro (JIRA),  [jira] [Commented] (CAMEL-10373) camel-spring-boot-starter - Some starters has hibernate-validator,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13010490.1475853612000.275558.1492088562583%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 13:02:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10373?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967556#comment-15967556&#010;] &#010;&#010;Nicola Ferraro commented on CAMEL-10373:&#010;----------------------------------------&#010;&#010;I've left hibernate validator on camel-kubernetes-starter and camel-swagger-java-starter only.&#010;These two modules import validation-api in compile scope, so an implementation is required&#010;in order for spring-boot to start.&#010;&#010;The other modules use the validation-api lib for testing purposes. So I've just included the&#010;hibernate validator in the integration tests.&#010;&#010;&gt; camel-spring-boot-starter - Some starters has hibernate-validator&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10373&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10373&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-spring-boot&#010;&gt;    Affects Versions: 2.18.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Nicola&#010;&gt; I noticed that some of the starter components has hibernate-validator as compile dependency.&#010;I wonder why is that?&#010;&gt; davsclaus:/Users/davsclaus/workspace/camel/components-starter (master)/$ git grep ""hibernate-validator""&#010;&gt; camel-jetty9-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-kubernetes-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-netty4-http-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-netty4-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-restlet-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-swagger-java-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-undertow-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
488,491,Nicola Ferraro (JIRA),  [jira] [Resolved] (CAMEL-10373) camel-spring-boot-starter - Some starters has hibernate-validator,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13010490.1475853612000.275560.1492088562599%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 13:02:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10373?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro resolved CAMEL-10373.&#010;------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; camel-spring-boot-starter - Some starters has hibernate-validator&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10373&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10373&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-spring-boot&#010;&gt;    Affects Versions: 2.18.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Nicola&#010;&gt; I noticed that some of the starter components has hibernate-validator as compile dependency.&#010;I wonder why is that?&#010;&gt; davsclaus:/Users/davsclaus/workspace/camel/components-starter (master)/$ git grep ""hibernate-validator""&#010;&gt; camel-jetty9-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-kubernetes-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-netty4-http-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-netty4-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-restlet-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-swagger-java-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-undertow-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
489,492,,[jira] [Created] (CAMEL-11146) Update description for all data formats and languages on big readme file,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13010490.1475853612000.275560.1492088562599%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 13:02:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10373?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro resolved CAMEL-10373.&#010;------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; camel-spring-boot-starter - Some starters has hibernate-validator&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10373&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10373&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-spring-boot&#010;&gt;    Affects Versions: 2.18.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Nicola&#010;&gt; I noticed that some of the starter components has hibernate-validator as compile dependency.&#010;I wonder why is that?&#010;&gt; davsclaus:/Users/davsclaus/workspace/camel/components-starter (master)/$ git grep ""hibernate-validator""&#010;&gt; camel-jetty9-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-kubernetes-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-netty4-http-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-netty4-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-restlet-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-swagger-java-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&gt; camel-undertow-starter/pom.xml:      &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
490,493,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11146) Update description for all data formats and languages on big readme file,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063766.1492083402000.274932.1492083461555%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 11:37:41 GMT",Claus Ibsen created CAMEL-11146:&#010;-----------------------------------&#010;&#010;             Summary: Update description for all data formats and languages on big readme&#010;file&#010;                 Key: CAMEL-11146&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11146&#010;             Project: Camel&#010;          Issue Type: Task&#010;          Components: documentation&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.20.0&#010;&#010;&#010;This page&#010;https://github.com/apache/camel/tree/master/components&#010;&#010;We should improve description for all those data formats and languages as they are not very&#010;informative. They should have a short description like we do for components.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
491,494,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11146) Update description for all data formats and languages on big readme file,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063766.1492083402000.316625.1492600301528%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 11:11:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11146?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11146:&#010;--------------------------------&#010;    Estimated Complexity: Novice  (was: Unknown)&#010;&#010;&gt; Update description for all data formats and languages on big readme file&#010;&gt; ------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11146&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11146&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; This page&#010;&gt; https://github.com/apache/camel/tree/master/components&#010;&gt; We should improve description for all those data formats and languages as they are not&#010;very informative. They should have a short description like we do for components.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
492,495,onder sezgin (JIRA),  [jira] [Commented] (CAMEL-11146) Update description for all data formats and languages on big readme file,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063766.1492083402000.65153.1493293144283%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 11:39:04 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11146?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986407#comment-15986407&#010;] &#010;&#010;onder sezgin commented on CAMEL-11146:&#010;--------------------------------------&#010;&#010;i think readme.adoc is auto-generated using the descriptions in pom.xml files. is there a&#010;implementation description?&#010;we can add the detailed description somewhere then maybe we can trigger auto-generation for&#010;dataformat components or we need to edit pom.xml files for dataformat components?&#010;&#010;&gt; Update description for all data formats and languages on big readme file&#010;&gt; ------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11146&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11146&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; This page&#010;&gt; https://github.com/apache/camel/tree/master/components&#010;&gt; We should improve description for all those data formats and languages as they are not&#010;very informative. They should have a short description like we do for components.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
493,496,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11146) Update description for all data formats and languages on big readme file,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063766.1492083402000.65258.1493293984226%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 11:53:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11146?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986430#comment-15986430&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11146:&#010;-------------------------------------&#010;&#010;I think we need to update those in the class javadoc of the model classes in camel-core, eg&#010;inside the model.languages and model.dataformats. &#010;&#010;&#010;&gt; Update description for all data formats and languages on big readme file&#010;&gt; ------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11146&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11146&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; This page&#010;&gt; https://github.com/apache/camel/tree/master/components&#010;&gt; We should improve description for all those data formats and languages as they are not&#010;very informative. They should have a short description like we do for components.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
494,497,Claus Ibsen (JIRA),  [jira] [Comment Edited] (CAMEL-11146) Update description for all data formats and languages on big readme file,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063766.1492083402000.65273.1493294104098%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 11:55:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11146?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986430#comment-15986430&#010;] &#010;&#010;Claus Ibsen edited comment on CAMEL-11146 at 4/27/17 11:54 AM:&#010;---------------------------------------------------------------&#010;&#010;I think we need to update those in the class javadoc of the model classes in camel-core, eg&#010;inside the model.languages and model.dataformats. &#010;&#010;Then its a bit similar to compoennts which is also the class javadoc on the endpoint class.&#010;&#010;However they may grab the description from the pom.xml also, so we may need to tweak the maven&#010;tooling to avoid that.&#010;&#010;But the harder part is to come up with good descriptions for all those. instead of just Camel&#010;Groovy support.&#010;&#010;&#010;was (Author: davsclaus):&#010;I think we need to update those in the class javadoc of the model classes in camel-core, eg&#010;inside the model.languages and model.dataformats. &#010;&#010;&#010;&gt; Update description for all data formats and languages on big readme file&#010;&gt; ------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11146&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11146&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; This page&#010;&gt; https://github.com/apache/camel/tree/master/components&#010;&gt; We should improve description for all those data formats and languages as they are not&#010;very informative. They should have a short description like we do for components.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
495,498,,[jira] [Created] (CAMEL-11147) camel-jms2 - JMS component using JMS 2.x api,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063766.1492083402000.65273.1493294104098%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 11:55:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11146?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986430#comment-15986430&#010;] &#010;&#010;Claus Ibsen edited comment on CAMEL-11146 at 4/27/17 11:54 AM:&#010;---------------------------------------------------------------&#010;&#010;I think we need to update those in the class javadoc of the model classes in camel-core, eg&#010;inside the model.languages and model.dataformats. &#010;&#010;Then its a bit similar to compoennts which is also the class javadoc on the endpoint class.&#010;&#010;However they may grab the description from the pom.xml also, so we may need to tweak the maven&#010;tooling to avoid that.&#010;&#010;But the harder part is to come up with good descriptions for all those. instead of just Camel&#010;Groovy support.&#010;&#010;&#010;was (Author: davsclaus):&#010;I think we need to update those in the class javadoc of the model classes in camel-core, eg&#010;inside the model.languages and model.dataformats. &#010;&#010;&#010;&gt; Update description for all data formats and languages on big readme file&#010;&gt; ------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11146&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11146&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; This page&#010;&gt; https://github.com/apache/camel/tree/master/components&#010;&gt; We should improve description for all those data formats and languages as they are not&#010;very informative. They should have a short description like we do for components.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
496,499,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11147) camel-jms2 - JMS component using JMS 2.x api,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063769.1492083751000.274993.1492083761660%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 11:42:41 GMT","Claus Ibsen created CAMEL-11147:&#010;-----------------------------------&#010;&#010;             Summary: camel-jms2 - JMS component using JMS 2.x api&#010;                 Key: CAMEL-11147&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11147&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-jms&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.20.0&#010;&#010;&#010;The camel-sjms2 is extending camel-sjms but adding JMS 2.0 api and use that such as shared&#010;topic.&#010;&#010;We should look at the camel-jms component and do a camel-jms2 that is using the JMS 2.0 api&#010;(requires artemis for testing, as AMQ is not 2.0). &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
497,500,,[jira] [Resolved] (CAMEL-10735) Mark code as deprecated on 2.x,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063769.1492083751000.274993.1492083761660%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 11:42:41 GMT","Claus Ibsen created CAMEL-11147:&#010;-----------------------------------&#010;&#010;             Summary: camel-jms2 - JMS component using JMS 2.x api&#010;                 Key: CAMEL-11147&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11147&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-jms&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.20.0&#010;&#010;&#010;The camel-sjms2 is extending camel-sjms but adding JMS 2.0 api and use that such as shared&#010;topic.&#010;&#010;We should look at the camel-jms component and do a camel-jms2 that is using the JMS 2.0 api&#010;(requires artemis for testing, as AMQ is not 2.0). &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
498,501,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-10735) Mark code as deprecated on 2.x,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13036871.1485079356000.275277.1492085621612%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 12:13:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10735?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-10735.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Mark code as deprecated on 2.x&#010;&gt; ------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10735&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10735&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We should mark more code on 2.x in camel-core that is being deprecated and which we want&#010;to not carry forward to Camel 3.x.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
499,502,,[jira] [Created] (CAMEL-11148) camel-reactive-streams: too many backpressure strategies,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13036871.1485079356000.275277.1492085621612%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 12:13:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10735?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-10735.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Mark code as deprecated on 2.x&#010;&gt; ------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10735&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10735&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We should mark more code on 2.x in camel-core that is being deprecated and which we want&#010;to not carry forward to Camel 3.x.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
500,503,Nicola Ferraro (JIRA),  [jira] [Created] (CAMEL-11148) camel-reactive-streams: too many backpressure strategies,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063806.1492093708000.276130.1492093721813%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 14:28:41 GMT",Nicola Ferraro created CAMEL-11148:&#010;--------------------------------------&#010;&#010;             Summary: camel-reactive-streams: too many backpressure strategies&#010;                 Key: CAMEL-11148&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11148&#010;             Project: Camel&#010;          Issue Type: Bug&#010;            Reporter: Nicola Ferraro&#010;            Assignee: Nicola Ferraro&#010;             Fix For: 2.19.0&#010;&#010;&#010;The backpressure strategies DROP and OLDEST seem equivalent according to their description.&#010;We should keep only one (OLDEST describes it better) and test which one works correctly.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
501,504,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11148) camel-reactive-streams: too many backpressure strategies,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063806.1492093708000.276182.1492094201644%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 14:36:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11148?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11148:&#010;--------------------------------&#010;    Issue Type: Improvement  (was: Bug)&#010;&#010;&gt; camel-reactive-streams: too many backpressure strategies&#010;&gt; --------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11148&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11148&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The backpressure strategies DROP and OLDEST seem equivalent according to their description.&#010;We should keep only one (OLDEST describes it better) and test which one works correctly.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
502,505,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11148) camel-reactive-streams: too many backpressure strategies,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063806.1492093708000.276180.1492094201627%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 14:36:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11148?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15967655#comment-15967655&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11148:&#010;-------------------------------------&#010;&#010;Yeah I gave them a spin and couldnt sense the difference too much. LATEST was what made the&#010;most sense for me to be usable. &#010;&#010;There is a little example here&#010;https://github.com/camelinaction/camelinaction2/blob/master/chapter21/rx-java2/src/test/java/camelinaction/CamelLatestBackPressureTest.java&#010;&#010;You can play with that and use the others and see what happens.&#010;&#010;&#010;&gt; camel-reactive-streams: too many backpressure strategies&#010;&gt; --------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11148&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11148&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The backpressure strategies DROP and OLDEST seem equivalent according to their description.&#010;We should keep only one (OLDEST describes it better) and test which one works correctly.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
503,506,Nicola Ferraro (JIRA),  [jira] [Resolved] (CAMEL-11148) camel-reactive-streams: too many backpressure strategies,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063806.1492093708000.276474.1492096121870%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 15:08:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11148?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro resolved CAMEL-11148.&#010;------------------------------------&#010;    Resolution: Fixed&#010;&#010;Yeah, basically the OLDEST was behaving like LATEST, because there was no difference between&#010;removeFirst and removeLast, since the buffer in these two strategies has at most one element.&#010;I've renamed the DROP strategy into OLDEST to be consistent.&#010;&#010;There's a test (BackpressureStrategyTest) to ensure that all those strategies do what they&#010;want to do...&#010;&#010;&gt; camel-reactive-streams: too many backpressure strategies&#010;&gt; --------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11148&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11148&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The backpressure strategies DROP and OLDEST seem equivalent according to their description.&#010;We should keep only one (OLDEST describes it better) and test which one works correctly.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
504,507,,[jira] [Created] (CAMEL-11149) SPI - Allow to plugin different headers map implementation,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063806.1492093708000.276474.1492096121870%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 15:08:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11148?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Nicola Ferraro resolved CAMEL-11148.&#010;------------------------------------&#010;    Resolution: Fixed&#010;&#010;Yeah, basically the OLDEST was behaving like LATEST, because there was no difference between&#010;removeFirst and removeLast, since the buffer in these two strategies has at most one element.&#010;I've renamed the DROP strategy into OLDEST to be consistent.&#010;&#010;There's a test (BackpressureStrategyTest) to ensure that all those strategies do what they&#010;want to do...&#010;&#010;&gt; camel-reactive-streams: too many backpressure strategies&#010;&gt; --------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11148&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11148&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The backpressure strategies DROP and OLDEST seem equivalent according to their description.&#010;We should keep only one (OLDEST describes it better) and test which one works correctly.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
505,508,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11149) SPI - Allow to plugin different headers map implementation,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063811.1492094732000.276269.1492094741881%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 14:45:41 GMT","Claus Ibsen created CAMEL-11149:&#010;-----------------------------------&#010;&#010;             Summary: SPI - Allow to plugin different headers map implementation&#010;                 Key: CAMEL-11149&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11149&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-core&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.20.0&#010;&#010;&#010;See PR for background&#010;https://github.com/apache/camel/pull/1527&#010;&#010;We can introduce a SPI that allows 3rd party to plugin a custom implementation of the headers&#010;map. Then you can use the default, that 3rd party, or a case insensitive if the latter is&#010;sufficient. However typically HTTP/REST based protocols are case insensitive headers.&#010;&#010;We should try to make it auto lookup from classpath using the factory finder which we do with&#010;others like the hystrix eip etc. Then we could have a camel-cedersoftware-java-util component&#010;which uses their implementation and Camel can then auto detect it from classpath and use it.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
506,509,,[jira] [Updated] (CAMEL-10988) Improve performance of CaseInsensitiveMap,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13063811.1492094732000.276269.1492094741881%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 14:45:41 GMT","Claus Ibsen created CAMEL-11149:&#010;-----------------------------------&#010;&#010;             Summary: SPI - Allow to plugin different headers map implementation&#010;                 Key: CAMEL-11149&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11149&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-core&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.20.0&#010;&#010;&#010;See PR for background&#010;https://github.com/apache/camel/pull/1527&#010;&#010;We can introduce a SPI that allows 3rd party to plugin a custom implementation of the headers&#010;map. Then you can use the default, that 3rd party, or a case insensitive if the latter is&#010;sufficient. However typically HTTP/REST based protocols are case insensitive headers.&#010;&#010;We should try to make it auto lookup from classpath using the factory finder which we do with&#010;others like the hystrix eip etc. Then we could have a camel-cedersoftware-java-util component&#010;which uses their implementation and Camel can then auto detect it from classpath and use it.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
507,510,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-10988) Improve performance of CaseInsensitiveMap,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050157.1489183849000.276296.1492094862255%40Atlassian.JIRA%3E,issues,"Thu, 13 Apr 2017 14:47:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10988?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-10988:&#010;--------------------------------&#010;    Fix Version/s: 2.20.0&#010;&#010;&gt; Improve performance of CaseInsensitiveMap&#010;&gt; -----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10988&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10988&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.2&#010;&gt;            Reporter: Marcin Lachowicz&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Current CaseInsensitiveMap bases on TreeMap. &#010;&gt; Basing on JMH, I found out that [the following implementation of CaseInsensitiveMap|https://github.com/jdereg/java-util/blob/master/src/main/java/com/cedarsoftware/util/CaseInsensitiveMap.java]&#010;results with even 50% performance boost, depending on use-case. &#010;&gt; It uses HashMap with case-insensitive wrappers on String keys. &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
508,511,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10988) Improve performance of CaseInsensitiveMap,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050157.1489183849000.315541.1492589021859%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 08:03:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10988?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15974280#comment-15974280&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10988:&#010;----------------------------------------&#010;&#010;Github user asfgit closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1527&#010;&#010;&#010;&gt; Improve performance of CaseInsensitiveMap&#010;&gt; -----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10988&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10988&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.2&#010;&gt;            Reporter: Marcin Lachowicz&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Current CaseInsensitiveMap bases on TreeMap. &#010;&gt; Basing on JMH, I found out that [the following implementation of CaseInsensitiveMap|https://github.com/jdereg/java-util/blob/master/src/main/java/com/cedarsoftware/util/CaseInsensitiveMap.java]&#010;results with even 50% performance boost, depending on use-case. &#010;&gt; It uses HashMap with case-insensitive wrappers on String keys. &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
509,512,,[jira] [Created] (CAMEL-11150) camel-solr is removed from readme on each full build,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050157.1489183849000.315541.1492589021859%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 08:03:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10988?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15974280#comment-15974280&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10988:&#010;----------------------------------------&#010;&#010;Github user asfgit closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1527&#010;&#010;&#010;&gt; Improve performance of CaseInsensitiveMap&#010;&gt; -----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10988&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10988&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.2&#010;&gt;            Reporter: Marcin Lachowicz&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Current CaseInsensitiveMap bases on TreeMap. &#010;&gt; Basing on JMH, I found out that [the following implementation of CaseInsensitiveMap|https://github.com/jdereg/java-util/blob/master/src/main/java/com/cedarsoftware/util/CaseInsensitiveMap.java]&#010;results with even 50% performance boost, depending on use-case. &#010;&gt; It uses HashMap with case-insensitive wrappers on String keys. &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
510,513,Tomohisa Igarashi (JIRA),  [jira] [Created] (CAMEL-11150) camel-solr is removed from readme on each full build,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064021.1492157502000.282848.1492157561578%40Atlassian.JIRA%3E,issues,"Fri, 14 Apr 2017 08:12:41 GMT",Tomohisa Igarashi created CAMEL-11150:&#010;-----------------------------------------&#010;&#010;             Summary: camel-solr is removed from readme on each full build&#010;                 Key: CAMEL-11150&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11150&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: documentation&#010;            Reporter: Tomohisa Igarashi&#010;            Assignee: Tomohisa Igarashi&#010;&#010;&#010;On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md&#010;which shouldn't happen.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
511,514,Tomohisa Igarashi (JIRA),  [jira] [Updated] (CAMEL-11150) camel-solr is removed from readme on each full build,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064021.1492157502000.282849.1492157561613%40Atlassian.JIRA%3E,issues,"Fri, 14 Apr 2017 08:12:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11150?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tomohisa Igarashi updated CAMEL-11150:&#010;--------------------------------------&#010;    Priority: Minor  (was: Major)&#010;&#010;&gt; camel-solr is removed from readme on each full build&#010;&gt; ----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11150&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11150&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md&#010;which shouldn't happen.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
512,515,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11150) camel-solr is removed from readme on each full build,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064021.1492157502000.303407.1492500881869%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 07:34:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11150?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11150:&#010;--------------------------------&#010;    Issue Type: Task  (was: Bug)&#010;&#010;&gt; camel-solr is removed from readme on each full build&#010;&gt; ----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11150&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11150&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md&#010;which shouldn't happen.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
513,516,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11150) camel-solr is removed from readme on each full build,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064021.1492157502000.303405.1492500881854%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 07:34:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11150?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972252#comment-15972252&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11150:&#010;-------------------------------------&#010;&#010;I cannot see this when I build locally.&#010;&#010;However camel-ignite is removed as its a bit wrongly developed (there is another ticket) so&#010;we may need to add some special code in the maven plugin that builds these readme files to&#010;include camel-ignite anyway.&#010;&#010;&gt; camel-solr is removed from readme on each full build&#010;&gt; ----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11150&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11150&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md&#010;which shouldn't happen.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
514,517,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11150) camel-solr is removed from readme on each full build,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064021.1492157502000.303478.1492501301562%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 07:41:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11150?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972260#comment-15972260&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11150:&#010;-------------------------------------&#010;&#010;Tomo, I think its in these maven goals&#010;https://github.com/apache/camel/blob/master/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareReadmeMojo.java&#010;&#010;https://github.com/apache/camel/blob/master/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareUserGuideMojo.java&#010;&#010;You may need to add some special logic to include camel-ignite. Its fine to hardcode something.&#010;This ticket should be fix this when camel-ignite becomes like other components: https://issues.apache.org/jira/browse/CAMEL-10798&#010;&#010;&#010;&gt; camel-solr is removed from readme on each full build&#010;&gt; ----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11150&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11150&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md&#010;which shouldn't happen.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
515,518,Tomohisa Igarashi (JIRA),  [jira] [Commented] (CAMEL-11150) camel-solr is removed from readme on each full build,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064021.1492157502000.305203.1492517621782%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 12:13:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11150?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972564#comment-15972564&#010;] &#010;&#010;Tomohisa Igarashi commented on CAMEL-11150:&#010;-------------------------------------------&#010;&#010;Thanks for the hints Claus! I'll look at it tomorrow.&#010;BTW it's weird about camel-solr. It seems that the solr.json file is not generated at all&#010;in my local build. Not sure why it happens here but doesn't there.&#010;&#010;&gt; camel-solr is removed from readme on each full build&#010;&gt; ----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11150&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11150&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md&#010;which shouldn't happen.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
516,519,Tomohisa Igarashi (JIRA),  [jira] [Updated] (CAMEL-11150) camel-solr/camel-ignite is removed from readme on each full build,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064021.1492157502000.305208.1492517621820%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 12:13:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11150?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tomohisa Igarashi updated CAMEL-11150:&#010;--------------------------------------&#010;    Summary: camel-solr/camel-ignite is removed from readme on each full build  (was: camel-solr&#010;is removed from readme on each full build)&#010;&#010;&gt; camel-solr/camel-ignite is removed from readme on each full build&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11150&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11150&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md&#010;which shouldn't happen.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
517,520,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11150) camel-solr/camel-ignite is removed from readme on each full build,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064021.1492157502000.305218.1492517861621%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 12:17:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11150?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972567#comment-15972567&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11150:&#010;-------------------------------------&#010;&#010;Is there a apt-error log file in the camel-solr directory ?&#010;&#010;&gt; camel-solr/camel-ignite is removed from readme on each full build&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11150&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11150&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md&#010;which shouldn't happen.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
518,521,Tomohisa Igarashi (JIRA),  [jira] [Commented] (CAMEL-11150) camel-solr/camel-ignite is removed from readme on each full build,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064021.1492157502000.305299.1492518882010%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 12:34:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11150?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972585#comment-15972585&#010;] &#010;&#010;Tomohisa Igarashi commented on CAMEL-11150:&#010;-------------------------------------------&#010;&#010;Nope, I do see one in camel-ignite dir, but not in camel-solr. I'll check maven log (maybe&#010;with -X) for the solr.&#010;&#010;&gt; camel-solr/camel-ignite is removed from readme on each full build&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11150&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11150&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md&#010;which shouldn't happen.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
519,522,Tomohisa Igarashi (JIRA),  [jira] [Commented] (CAMEL-11150) camel-solr/camel-ignite is removed from readme on each full build,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064021.1492157502000.314819.1492582481545%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 06:14:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11150?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15974140#comment-15974140&#010;] &#010;&#010;Tomohisa Igarashi commented on CAMEL-11150:&#010;-------------------------------------------&#010;&#010;hmm confusing, that removal from readme doesn't happen today. Still no json file is generated&#010;for camel-solr and camel-ignite.&#010;&#010;&gt; camel-solr/camel-ignite is removed from readme on each full build&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11150&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11150&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md&#010;which shouldn't happen.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
520,523,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11150) camel-solr/camel-ignite is removed from readme on each full build,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064021.1492157502000.315138.1492585721611%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 07:08:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11150?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15974205#comment-15974205&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11150:&#010;-------------------------------------&#010;&#010;camel-ignite is a known issue, there is a ticket about that. however camel-solr ought to generate&#010;a json file&#010;&#010;&gt; camel-solr/camel-ignite is removed from readme on each full build&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11150&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11150&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md&#010;which shouldn't happen.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
521,524,Tomohisa Igarashi (JIRA),  [jira] [Commented] (CAMEL-11150) camel-solr/camel-ignite is removed from readme on each full build,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064021.1492157502000.315401.1492588001751%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 07:46:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11150?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15974250#comment-15974250&#010;] &#010;&#010;Tomohisa Igarashi commented on CAMEL-11150:&#010;-------------------------------------------&#010;&#010;ah I found that mvn clean doesn't really remove target/*, so the component.properties file&#010;was not updated. Once I removed whole target dir and run mvn install again then json file&#010;for all 3 solr components were created.&#010;&#010;&gt; camel-solr/camel-ignite is removed from readme on each full build&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11150&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11150&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md&#010;which shouldn't happen.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
522,525,Tomohisa Igarashi (JIRA),  [jira] [Updated] (CAMEL-11150) camel-ignite is removed from readme on each full build,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064021.1492157502000.315404.1492588001774%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 07:46:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11150?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tomohisa Igarashi updated CAMEL-11150:&#010;--------------------------------------&#010;    Summary: camel-ignite is removed from readme on each full build  (was: camel-solr/camel-ignite&#010;is removed from readme on each full build)&#010;&#010;&gt; camel-ignite is removed from readme on each full build&#010;&gt; ------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11150&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11150&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md&#010;which shouldn't happen.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
523,526,Tomohisa Igarashi (JIRA),  [jira] [Commented] (CAMEL-11150) camel-ignite is removed from readme on each full build,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064021.1492157502000.316114.1492593641651%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 09:20:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11150?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15974368#comment-15974368&#010;] &#010;&#010;Tomohisa Igarashi commented on CAMEL-11150:&#010;-------------------------------------------&#010;&#010;Fixed camel-solr POM to remove target dir on mvn clean - https://github.com/apache/camel/pull/1638&#010;&#010;&gt; camel-ignite is removed from readme on each full build&#010;&gt; ------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11150&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11150&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md&#010;which shouldn't happen.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
524,527,Tomohisa Igarashi (JIRA),  [jira] [Resolved] (CAMEL-11150) camel-ignite is removed from readme on each full build,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064021.1492157502000.16782.1492766824277%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 09:27:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11150?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tomohisa Igarashi resolved CAMEL-11150.&#010;---------------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.19.0&#010;&#010;It has been fixed as a part of CAMEL-10798.&#010;https://github.com/apache/camel/pull/1648&#010;&#010;&gt; camel-ignite is removed from readme on each full build&#010;&gt; ------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11150&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11150&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md&#010;which shouldn't happen.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
525,528,,[jira] [Created] (CAMEL-11151) Double release of netty buffer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064021.1492157502000.16782.1492766824277%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 09:27:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11150?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tomohisa Igarashi resolved CAMEL-11150.&#010;---------------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.19.0&#010;&#010;It has been fixed as a part of CAMEL-10798.&#010;https://github.com/apache/camel/pull/1648&#010;&#010;&gt; camel-ignite is removed from readme on each full build&#010;&gt; ------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11150&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11150&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Tomohisa Igarashi&#010;&gt;            Assignee: Tomohisa Igarashi&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md&#010;which shouldn't happen.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
526,529,Valentin Tsvetkov (JIRA),  [jira] [Created] (CAMEL-11151) Double release of netty buffer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064035.1492160993000.283174.1492161041623%40Atlassian.JIRA%3E,issues,"Fri, 14 Apr 2017 09:10:41 GMT","Valentin Tsvetkov created CAMEL-11151:&#010;-----------------------------------------&#010;&#010;             Summary: Double release of netty buffer&#010;                 Key: CAMEL-11151&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11151&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-netty4-http&#010;    Affects Versions: 2.18.3&#010;            Reporter: Valentin Tsvetkov&#010;&#010;&#010;I try to make simple proxy application with netty4-http component to transfer http request&#010;with large content.&#010;Example&#010;                from(String.format(""netty4-http:http://0.0.0.0:%d?httpMethodRestrict=GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH&amp;chunkedMaxContentLength=100000000&amp;disableStreamCache=true"",&#010;8081))&#010;                        .id(""nettyInputRoute"")&#010;                        .process(new Processor() {&#010;                        .toD(""netty4-http:http://somehost:8080/?bridgeEndpoint=true&amp;throwExceptionOnFailure=false&amp;useRelativePath=true"").end();&#010;&#010;So if i use &amp;disableStreamCache=true option then i get &#010;[Camel Thread #3 - NettyClientTCPWorker] WARN io.netty.util.concurrent.DefaultPromise - An&#010;exception was thrown by org.apache.camel.component.netty4.NettyProducer$ChannelConnectedListener.operationComplete()&#010;io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1&#010;&#009;at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:101)&#010;&#009;at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:89)&#010;&#009;at io.netty.handler.codec.http.DefaultFullHttpRequest.release(DefaultFullHttpRequest.java:102)&#010;&#009;at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:84)&#010;&#010;If i does not use  &amp;disableStreamCache=true, all works fine. But for large content i get&#010;heap space error.&#010;&#010;There are several resolved bugs in camel and netty4 that seems to be related&#010;https://issues.apache.org/jira/browse/CAMEL-10409&#010;and https://issues.apache.org/jira/browse/CAMEL-7638&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
527,530,Valentin Tsvetkov (JIRA),  [jira] [Updated] (CAMEL-11151) Double release of netty buffer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064035.1492160993000.283179.1492161042144%40Atlassian.JIRA%3E,issues,"Fri, 14 Apr 2017 09:10:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11151?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Valentin Tsvetkov updated CAMEL-11151:&#010;--------------------------------------&#010;    Description: &#010;I try to make simple proxy application with netty4-http component to transfer http request&#010;with large content.&#010;Example&#010;                from(String.format(""netty4-http:http://0.0.0.0:%d?httpMethodRestrict=GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH&amp;chunkedMaxContentLength=100000000&amp;disableStreamCache=true"",&#010;8081))&#010;                        .toD(""netty4-http:http://somehost:8080/?bridgeEndpoint=true&amp;throwExceptionOnFailure=false&amp;useRelativePath=true"").end();&#010;&#010;So if i use &amp;disableStreamCache=true option then i get &#010;[Camel Thread #3 - NettyClientTCPWorker] WARN io.netty.util.concurrent.DefaultPromise - An&#010;exception was thrown by org.apache.camel.component.netty4.NettyProducer$ChannelConnectedListener.operationComplete()&#010;io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1&#010;&#009;at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:101)&#010;&#009;at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:89)&#010;&#009;at io.netty.handler.codec.http.DefaultFullHttpRequest.release(DefaultFullHttpRequest.java:102)&#010;&#009;at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:84)&#010;&#010;If i does not use  &amp;disableStreamCache=true, all works fine. But for large content i get&#010;heap space error.&#010;&#010;There are several resolved bugs in camel and netty4 that seems to be related&#010;https://issues.apache.org/jira/browse/CAMEL-10409&#010;and https://issues.apache.org/jira/browse/CAMEL-7638&#010;&#010;  was:&#010;I try to make simple proxy application with netty4-http component to transfer http request&#010;with large content.&#010;Example&#010;                from(String.format(""netty4-http:http://0.0.0.0:%d?httpMethodRestrict=GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH&amp;chunkedMaxContentLength=100000000&amp;disableStreamCache=true"",&#010;8081))&#010;                        .id(""nettyInputRoute"")&#010;                        .process(new Processor() {&#010;                        .toD(""netty4-http:http://somehost:8080/?bridgeEndpoint=true&amp;throwExceptionOnFailure=false&amp;useRelativePath=true"").end();&#010;&#010;So if i use &amp;disableStreamCache=true option then i get &#010;[Camel Thread #3 - NettyClientTCPWorker] WARN io.netty.util.concurrent.DefaultPromise - An&#010;exception was thrown by org.apache.camel.component.netty4.NettyProducer$ChannelConnectedListener.operationComplete()&#010;io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1&#010;&#009;at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:101)&#010;&#009;at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:89)&#010;&#009;at io.netty.handler.codec.http.DefaultFullHttpRequest.release(DefaultFullHttpRequest.java:102)&#010;&#009;at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:84)&#010;&#010;If i does not use  &amp;disableStreamCache=true, all works fine. But for large content i get&#010;heap space error.&#010;&#010;There are several resolved bugs in camel and netty4 that seems to be related&#010;https://issues.apache.org/jira/browse/CAMEL-10409&#010;and https://issues.apache.org/jira/browse/CAMEL-7638&#010;&#010;&#010;&gt; Double release of netty buffer&#010;&gt; ------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11151&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11151&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-netty4-http&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Valentin Tsvetkov&#010;&gt;&#010;&gt; I try to make simple proxy application with netty4-http component to transfer http request&#010;with large content.&#010;&gt; Example&#010;&gt;                 from(String.format(""netty4-http:http://0.0.0.0:%d?httpMethodRestrict=GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH&amp;chunkedMaxContentLength=100000000&amp;disableStreamCache=true"",&#010;8081))&#010;&gt;                         .toD(""netty4-http:http://somehost:8080/?bridgeEndpoint=true&amp;throwExceptionOnFailure=false&amp;useRelativePath=true"").end();&#010;&gt; So if i use &amp;disableStreamCache=true option then i get &#010;&gt; [Camel Thread #3 - NettyClientTCPWorker] WARN io.netty.util.concurrent.DefaultPromise&#010;- An exception was thrown by org.apache.camel.component.netty4.NettyProducer$ChannelConnectedListener.operationComplete()&#010;&gt; io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1&#010;&gt; &#009;at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:101)&#010;&gt; &#009;at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:89)&#010;&gt; &#009;at io.netty.handler.codec.http.DefaultFullHttpRequest.release(DefaultFullHttpRequest.java:102)&#010;&gt; &#009;at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:84)&#010;&gt; If i does not use  &amp;disableStreamCache=true, all works fine. But for large content&#010;i get heap space error.&#010;&gt; There are several resolved bugs in camel and netty4 that seems to be related&#010;&gt; https://issues.apache.org/jira/browse/CAMEL-10409&#010;&gt; and https://issues.apache.org/jira/browse/CAMEL-7638&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
528,531,Valentin Tsvetkov (JIRA),  [jira] [Commented] (CAMEL-11151) Double release of netty buffer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064035.1492160993000.283204.1492161341733%40Atlassian.JIRA%3E,issues,"Fri, 14 Apr 2017 09:15:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11151?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15968818#comment-15968818&#010;] &#010;&#010;Valentin Tsvetkov commented on CAMEL-11151:&#010;-------------------------------------------&#010;&#010;I clone camel repository and can't find any test for netty-http4 and netty4 thats try to work&#010;with large content and test behavior of disableStreamCache=true, that seems not good.&#010;&#010;&gt; Double release of netty buffer&#010;&gt; ------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11151&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11151&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-netty4-http&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Valentin Tsvetkov&#010;&gt;&#010;&gt; I try to make simple proxy application with netty4-http component to transfer http request&#010;with large content.&#010;&gt; Example&#010;&gt;                 from(String.format(""netty4-http:http://0.0.0.0:%d?httpMethodRestrict=GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH&amp;chunkedMaxContentLength=100000000&amp;disableStreamCache=true"",&#010;8081))&#010;&gt;                         .toD(""netty4-http:http://somehost:8080/?bridgeEndpoint=true&amp;throwExceptionOnFailure=false&amp;useRelativePath=true"").end();&#010;&gt; So if i use &amp;disableStreamCache=true option then i get &#010;&gt; [Camel Thread #3 - NettyClientTCPWorker] WARN io.netty.util.concurrent.DefaultPromise&#010;- An exception was thrown by org.apache.camel.component.netty4.NettyProducer$ChannelConnectedListener.operationComplete()&#010;&gt; io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1&#010;&gt; &#009;at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:101)&#010;&gt; &#009;at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:89)&#010;&gt; &#009;at io.netty.handler.codec.http.DefaultFullHttpRequest.release(DefaultFullHttpRequest.java:102)&#010;&gt; &#009;at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:84)&#010;&gt; If i does not use  &amp;disableStreamCache=true, all works fine. But for large content&#010;i get heap space error.&#010;&gt; There are several resolved bugs in camel and netty4 that seems to be related&#010;&gt; https://issues.apache.org/jira/browse/CAMEL-10409&#010;&gt; and https://issues.apache.org/jira/browse/CAMEL-7638&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
529,532,Valentin Tsvetkov (JIRA),  [jira] [Comment Edited] (CAMEL-11151) Double release of netty buffer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064035.1492160993000.283206.1492161401521%40Atlassian.JIRA%3E,issues,"Fri, 14 Apr 2017 09:16:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11151?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15968818#comment-15968818&#010;] &#010;&#010;Valentin Tsvetkov edited comment on CAMEL-11151 at 4/14/17 9:15 AM:&#010;--------------------------------------------------------------------&#010;&#010;I clone camel repository and can't find any test for netty4-http and netty4 thats try to work&#010;with large content and test behavior of disableStreamCache=true, that seems not good.&#010;&#010;&#010;was (Author: tsvetval):&#010;I clone camel repository and can't find any test for netty-http4 and netty4 thats try to work&#010;with large content and test behavior of disableStreamCache=true, that seems not good.&#010;&#010;&gt; Double release of netty buffer&#010;&gt; ------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11151&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11151&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-netty4-http&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Valentin Tsvetkov&#010;&gt;&#010;&gt; I try to make simple proxy application with netty4-http component to transfer http request&#010;with large content.&#010;&gt; Example&#010;&gt;                 from(String.format(""netty4-http:http://0.0.0.0:%d?httpMethodRestrict=GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH&amp;chunkedMaxContentLength=100000000&amp;disableStreamCache=true"",&#010;8081))&#010;&gt;                         .toD(""netty4-http:http://somehost:8080/?bridgeEndpoint=true&amp;throwExceptionOnFailure=false&amp;useRelativePath=true"").end();&#010;&gt; So if i use &amp;disableStreamCache=true option then i get &#010;&gt; [Camel Thread #3 - NettyClientTCPWorker] WARN io.netty.util.concurrent.DefaultPromise&#010;- An exception was thrown by org.apache.camel.component.netty4.NettyProducer$ChannelConnectedListener.operationComplete()&#010;&gt; io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1&#010;&gt; &#009;at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:101)&#010;&gt; &#009;at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:89)&#010;&gt; &#009;at io.netty.handler.codec.http.DefaultFullHttpRequest.release(DefaultFullHttpRequest.java:102)&#010;&gt; &#009;at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:84)&#010;&gt; If i does not use  &amp;disableStreamCache=true, all works fine. But for large content&#010;i get heap space error.&#010;&gt; There are several resolved bugs in camel and netty4 that seems to be related&#010;&gt; https://issues.apache.org/jira/browse/CAMEL-10409&#010;&gt; and https://issues.apache.org/jira/browse/CAMEL-7638&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
530,533,,[jira] [Assigned] (CAMEL-10896) camel-infinispan - Stores result in header and not body,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064035.1492160993000.283206.1492161401521%40Atlassian.JIRA%3E,issues,"Fri, 14 Apr 2017 09:16:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11151?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15968818#comment-15968818&#010;] &#010;&#010;Valentin Tsvetkov edited comment on CAMEL-11151 at 4/14/17 9:15 AM:&#010;--------------------------------------------------------------------&#010;&#010;I clone camel repository and can't find any test for netty4-http and netty4 thats try to work&#010;with large content and test behavior of disableStreamCache=true, that seems not good.&#010;&#010;&#010;was (Author: tsvetval):&#010;I clone camel repository and can't find any test for netty-http4 and netty4 thats try to work&#010;with large content and test behavior of disableStreamCache=true, that seems not good.&#010;&#010;&gt; Double release of netty buffer&#010;&gt; ------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11151&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11151&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-netty4-http&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Valentin Tsvetkov&#010;&gt;&#010;&gt; I try to make simple proxy application with netty4-http component to transfer http request&#010;with large content.&#010;&gt; Example&#010;&gt;                 from(String.format(""netty4-http:http://0.0.0.0:%d?httpMethodRestrict=GET,HEAD,POST,PUT,DELETE,TRACE,OPTIONS,CONNECT,PATCH&amp;chunkedMaxContentLength=100000000&amp;disableStreamCache=true"",&#010;8081))&#010;&gt;                         .toD(""netty4-http:http://somehost:8080/?bridgeEndpoint=true&amp;throwExceptionOnFailure=false&amp;useRelativePath=true"").end();&#010;&gt; So if i use &amp;disableStreamCache=true option then i get &#010;&gt; [Camel Thread #3 - NettyClientTCPWorker] WARN io.netty.util.concurrent.DefaultPromise&#010;- An exception was thrown by org.apache.camel.component.netty4.NettyProducer$ChannelConnectedListener.operationComplete()&#010;&gt; io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1&#010;&gt; &#009;at io.netty.buffer.AbstractReferenceCountedByteBuf.release0(AbstractReferenceCountedByteBuf.java:101)&#010;&gt; &#009;at io.netty.buffer.AbstractReferenceCountedByteBuf.release(AbstractReferenceCountedByteBuf.java:89)&#010;&gt; &#009;at io.netty.handler.codec.http.DefaultFullHttpRequest.release(DefaultFullHttpRequest.java:102)&#010;&gt; &#009;at io.netty.util.ReferenceCountUtil.release(ReferenceCountUtil.java:84)&#010;&gt; If i does not use  &amp;disableStreamCache=true, all works fine. But for large content&#010;i get heap space error.&#010;&gt; There are several resolved bugs in camel and netty4 that seems to be related&#010;&gt; https://issues.apache.org/jira/browse/CAMEL-10409&#010;&gt; and https://issues.apache.org/jira/browse/CAMEL-7638&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
531,534,Luca Burgazzoli (JIRA),  [jira] [Assigned] (CAMEL-10896) camel-infinispan - Stores result in header and not body,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13046297.1488037837000.284086.1492175142467%40Atlassian.JIRA%3E,issues,"Fri, 14 Apr 2017 13:05:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10896?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli reassigned CAMEL-10896:&#010;---------------------------------------&#010;&#010;    Assignee: Luca Burgazzoli&#010;&#010;&gt; camel-infinispan - Stores result in header and not body&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10896&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10896&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-infinispan&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; This component sadly does not work like others like hazelcast etc where the result is&#010;by default in message body, so it stores all magically in some result header which you do&#010;not expect. &#010;&gt; So if you want to store some message body in a map cache you have to use headers and&#010;whatnot.&#010;&gt; We should add some way to configure this to work more like the others. Also it should&#010;have better NPE check as you can get NPEs such as&#010;&gt; {code}&#010;&gt; java.lang.NullPointerException&#010;&gt; &#009;at org.apache.camel.component.infinispan.InfinispanOperation$Operation$7.execute(InfinispanOperation.java:183)&#010;&gt; &#009;at org.apache.camel.component.infinispan.InfinispanOperation.process(InfinispanOperation.java:45)&#010;&gt; &#009;at org.apache.camel.component.infinispan.InfinispanProducer.process(InfinispanProducer.java:34)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
532,535,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-10896) camel-infinispan - Stores result in header and not body,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13046297.1488037837000.284083.1492175142443%40Atlassian.JIRA%3E,issues,"Fri, 14 Apr 2017 13:05:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10896?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-10896:&#010;------------------------------------&#010;    Fix Version/s: 2.20.0&#010;&#010;&gt; camel-infinispan - Stores result in header and not body&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10896&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10896&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-infinispan&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; This component sadly does not work like others like hazelcast etc where the result is&#010;by default in message body, so it stores all magically in some result header which you do&#010;not expect. &#010;&gt; So if you want to store some message body in a map cache you have to use headers and&#010;whatnot.&#010;&gt; We should add some way to configure this to work more like the others. Also it should&#010;have better NPE check as you can get NPEs such as&#010;&gt; {code}&#010;&gt; java.lang.NullPointerException&#010;&gt; &#009;at org.apache.camel.component.infinispan.InfinispanOperation$Operation$7.execute(InfinispanOperation.java:183)&#010;&gt; &#009;at org.apache.camel.component.infinispan.InfinispanOperation.process(InfinispanOperation.java:45)&#010;&gt; &#009;at org.apache.camel.component.infinispan.InfinispanProducer.process(InfinispanProducer.java:34)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
533,536,Luca Burgazzoli (JIRA),  [jira] [Work started] (CAMEL-10896) camel-infinispan - Stores result in header and not body,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13046297.1488037837000.303589.1492502201732%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 07:56:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10896?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Work on CAMEL-10896 started by Luca Burgazzoli.&#010;-----------------------------------------------&#010;&gt; camel-infinispan - Stores result in header and not body&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10896&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10896&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-infinispan&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; This component sadly does not work like others like hazelcast etc where the result is&#010;by default in message body, so it stores all magically in some result header which you do&#010;not expect. &#010;&gt; So if you want to store some message body in a map cache you have to use headers and&#010;whatnot.&#010;&gt; We should add some way to configure this to work more like the others. Also it should&#010;have better NPE check as you can get NPEs such as&#010;&gt; {code}&#010;&gt; java.lang.NullPointerException&#010;&gt; &#009;at org.apache.camel.component.infinispan.InfinispanOperation$Operation$7.execute(InfinispanOperation.java:183)&#010;&gt; &#009;at org.apache.camel.component.infinispan.InfinispanOperation.process(InfinispanOperation.java:45)&#010;&gt; &#009;at org.apache.camel.component.infinispan.InfinispanProducer.process(InfinispanProducer.java:34)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
534,538,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11152) camel-ssh - Allow to use message headers for username/password,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064259.1492327880000.291543.1492327901673%40Atlassian.JIRA%3E,issues,"Sun, 16 Apr 2017 07:31:41 GMT","Claus Ibsen created CAMEL-11152:&#010;-----------------------------------&#010;&#010;             Summary: camel-ssh - Allow to use message headers for username/password&#010;                 Key: CAMEL-11152&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11152&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-ssh&#010;            Reporter: Claus Ibsen&#010;            Priority: Minor&#010;             Fix For: Future&#010;&#010;&#010;See nabble&#010;http://camel.465427.n5.nabble.com/Camel-SSH-dynamic-values-tp5797435p5797545.html&#010;&#010;In the &#010;org.apache.camel.component.ssh.SshHelper#sendExecCommand&#010;&#010;We should allow the exchange to provide a username/password to be used, so you can more dynamic&#010;reuse the same ssh endpoint but for different logins.&#010;&#010;Using toD has a drawback of creating a new endpoint per username.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
535,539,onder sezgin (JIRA),  [jira] [Assigned] (CAMEL-11152) camel-ssh - Allow to use message headers for username/password,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064259.1492327880000.295602.1492428761672%40Atlassian.JIRA%3E,issues,"Mon, 17 Apr 2017 11:32:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11152?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;onder sezgin reassigned CAMEL-11152:&#010;------------------------------------&#010;&#010;    Assignee: onder sezgin&#010;&#010;&gt; camel-ssh - Allow to use message headers for username/password&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11152&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11152&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-ssh&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; See nabble&#010;&gt; http://camel.465427.n5.nabble.com/Camel-SSH-dynamic-values-tp5797435p5797545.html&#010;&gt; In the &#010;&gt; org.apache.camel.component.ssh.SshHelper#sendExecCommand&#010;&gt; We should allow the exchange to provide a username/password to be used, so you can more&#010;dynamic reuse the same ssh endpoint but for different logins.&#010;&gt; Using toD has a drawback of creating a new endpoint per username.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
536,540,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11152) camel-ssh - Allow to use message headers for username/password,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064259.1492327880000.303269.1492500162438%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 07:22:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11152?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972234#comment-15972234&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11152:&#010;----------------------------------------&#010;&#010;GitHub user onders86 opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1635&#010;&#010;    CAMEL-11152 - set credentials for ssh connection through headers&#010;&#010;    adoc updated and ut provided.&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/onders86/camel CAMEL-11152&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1635.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1635&#010;    &#010;----&#010;commit 89b1738e437df3ae3d79d424dc0dc0bb3b8b02f0&#010;Author: onders86 &lt;ondersezgin@gmail.com&gt;&#010;Date:   2017-04-18T06:06:39Z&#010;&#010;    CAMEL-11152 - set credentials for ssh connection through headers&#010;&#010;----&#010;&#010;&#010;&gt; camel-ssh - Allow to use message headers for username/password&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11152&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11152&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-ssh&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; See nabble&#010;&gt; http://camel.465427.n5.nabble.com/Camel-SSH-dynamic-values-tp5797435p5797545.html&#010;&gt; In the &#010;&gt; org.apache.camel.component.ssh.SshHelper#sendExecCommand&#010;&gt; We should allow the exchange to provide a username/password to be used, so you can more&#010;dynamic reuse the same ssh endpoint but for different logins.&#010;&gt; Using toD has a drawback of creating a new endpoint per username.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
537,541,Andrea Cosentino (JIRA),  [jira] [Updated] (CAMEL-11152) camel-ssh - Allow to use message headers for username/password,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064259.1492327880000.304954.1492514561681%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 11:22:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11152?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino updated CAMEL-11152:&#010;-------------------------------------&#010;    Fix Version/s:     (was: Future)&#010;                   2.19.0&#010;&#010;&gt; camel-ssh - Allow to use message headers for username/password&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11152&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11152&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-ssh&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See nabble&#010;&gt; http://camel.465427.n5.nabble.com/Camel-SSH-dynamic-values-tp5797435p5797545.html&#010;&gt; In the &#010;&gt; org.apache.camel.component.ssh.SshHelper#sendExecCommand&#010;&gt; We should allow the exchange to provide a username/password to be used, so you can more&#010;dynamic reuse the same ssh endpoint but for different logins.&#010;&gt; Using toD has a drawback of creating a new endpoint per username.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
538,542,Andrea Cosentino (JIRA),  [jira] [Resolved] (CAMEL-11152) camel-ssh - Allow to use message headers for username/password,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064259.1492327880000.304958.1492514621638%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 11:23:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11152?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino resolved CAMEL-11152.&#010;--------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; camel-ssh - Allow to use message headers for username/password&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11152&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11152&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-ssh&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See nabble&#010;&gt; http://camel.465427.n5.nabble.com/Camel-SSH-dynamic-values-tp5797435p5797545.html&#010;&gt; In the &#010;&gt; org.apache.camel.component.ssh.SshHelper#sendExecCommand&#010;&gt; We should allow the exchange to provide a username/password to be used, so you can more&#010;dynamic reuse the same ssh endpoint but for different logins.&#010;&gt; Using toD has a drawback of creating a new endpoint per username.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
539,543,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11152) camel-ssh - Allow to use message headers for username/password,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064259.1492327880000.304968.1492514741736%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 11:25:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11152?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972515#comment-15972515&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11152:&#010;----------------------------------------&#010;&#010;Github user onders86 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1635&#010;&#010;&#010;&gt; camel-ssh - Allow to use message headers for username/password&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11152&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11152&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-ssh&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See nabble&#010;&gt; http://camel.465427.n5.nabble.com/Camel-SSH-dynamic-values-tp5797435p5797545.html&#010;&gt; In the &#010;&gt; org.apache.camel.component.ssh.SshHelper#sendExecCommand&#010;&gt; We should allow the exchange to provide a username/password to be used, so you can more&#010;dynamic reuse the same ssh endpoint but for different logins.&#010;&gt; Using toD has a drawback of creating a new endpoint per username.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
540,544,,[jira] [Created] (CAMEL-11153) camel-protobuf - itest starts to fail again,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064259.1492327880000.304968.1492514741736%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 11:25:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11152?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972515#comment-15972515&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11152:&#010;----------------------------------------&#010;&#010;Github user onders86 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1635&#010;&#010;&#010;&gt; camel-ssh - Allow to use message headers for username/password&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11152&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11152&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-ssh&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: onder sezgin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See nabble&#010;&gt; http://camel.465427.n5.nabble.com/Camel-SSH-dynamic-values-tp5797435p5797545.html&#010;&gt; In the &#010;&gt; org.apache.camel.component.ssh.SshHelper#sendExecCommand&#010;&gt; We should allow the exchange to provide a username/password to be used, so you can more&#010;dynamic reuse the same ssh endpoint but for different logins.&#010;&gt; Using toD has a drawback of creating a new endpoint per username.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
541,545,Tadayoshi Sato (JIRA),  [jira] [Created] (CAMEL-11153) camel-protobuf - itest starts to fail again,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064549.1492479333000.301583.1492479342576%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 01:35:42 GMT",Tadayoshi Sato created CAMEL-11153:&#010;--------------------------------------&#010;&#010;             Summary: camel-protobuf - itest starts to fail again&#010;                 Key: CAMEL-11153&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11153&#010;             Project: Camel&#010;          Issue Type: Bug&#010;            Reporter: Tadayoshi Sato&#010;             Fix For: 2.19.0&#010;&#010;&#010;{{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason (I&#010;mean not just flaky):&#010;https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/activity&#010;&#010;I remember it worked fine locally a few days ago but now it even fails locally. Test it with:&#010;{code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
542,546,Tadayoshi Sato (JIRA),  [jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to fail again,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064549.1492479333000.301586.1492479401545%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 01:36:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11153?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tadayoshi Sato updated CAMEL-11153:&#010;-----------------------------------&#010;    Affects Version/s: 2.19.0&#010;&#010;&gt; camel-protobuf - itest starts to fail again&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11153&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11153&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason&#010;(I mean not just flaky):&#010;&gt; https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/activity&#010;&gt; I remember it worked fine locally a few days ago but now it even fails locally. Test&#010;it with:&#010;&gt; {code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;&gt; in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
543,547,Tadayoshi Sato (JIRA),  [jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to fail again,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064549.1492479333000.301590.1492479461724%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 01:37:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11153?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tadayoshi Sato updated CAMEL-11153:&#010;-----------------------------------&#010;    Labels: protobuf  (was: )&#010;&#010;&gt; camel-protobuf - itest starts to fail again&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11153&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11153&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;              Labels: protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason&#010;(I mean not just flaky):&#010;&gt; https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/activity&#010;&gt; I remember it worked fine locally a few days ago but now it even fails locally. Test&#010;it with:&#010;&gt; {code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;&gt; in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
544,548,Tadayoshi Sato (JIRA),  [jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to fail again,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064549.1492479333000.301588.1492479461707%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 01:37:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11153?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tadayoshi Sato updated CAMEL-11153:&#010;-----------------------------------&#010;    Component/s: tests&#010;&#010;&gt; camel-protobuf - itest starts to fail again&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11153&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11153&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;              Labels: protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason&#010;(I mean not just flaky):&#010;&gt; https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/activity&#010;&gt; I remember it worked fine locally a few days ago but now it even fails locally. Test&#010;it with:&#010;&gt; {code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;&gt; in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
545,549,Tadayoshi Sato (JIRA),  [jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to fail again,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064549.1492479333000.301680.1492480361700%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 01:52:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11153?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tadayoshi Sato updated CAMEL-11153:&#010;-----------------------------------&#010;    Description: &#010;{{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason (I&#010;mean not just flaky):&#010;https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/activity&#010;&#010;{code}&#010;Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 sec &lt;&lt;&lt; FAILURE!&#010;- in org.apache.camel.itest.karaf.CamelProtobufTest&#010;test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.212 sec  &lt;&lt;&lt;&#010;ERROR!&#010;org.apache.karaf.features.internal.util.MultiException: Error&#010;&#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager$MavenDownloader.&lt;init&gt;(MavenDownloadManager.java:84)&#010;&#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager.createDownloader(MavenDownloadManager.java:72)&#010;&#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:375)&#010;&#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:372)&#010;&#009;at org.apache.karaf.features.internal.region.SubsystemResolver.resolve(SubsystemResolver.java:187)&#010;&#009;at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:285)&#010;&#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1170)&#010;&#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$0(FeaturesServiceImpl.java:1069)&#010;&#009;at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;&#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&#009;at java.lang.Thread.run(Thread.java:745)&#010;&#010;&#010;Results :&#010;&#010;Tests in error: &#010;  CamelProtobufTest.test » Multi Error&#010;&#010;Tests run: 1, Failures: 0, Errors: 1, Skipped: 0&#010;&#010;[INFO] ------------------------------------------------------------------------&#010;[INFO] BUILD FAILURE&#010;[INFO] ------------------------------------------------------------------------&#010;[INFO] Total time: 02:07 min&#010;[INFO] Finished at: 2017-04-18T10:26:57+09:00&#010;[INFO] Final Memory: 41M/2875M&#010;[INFO] ------------------------------------------------------------------------&#010;{code}&#010;&#010;I remember it worked fine locally a few days ago but now it even fails locally. Test it with:&#010;{code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;  was:&#010;{{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason (I&#010;mean not just flaky):&#010;https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/activity&#010;&#010;I remember it worked fine locally a few days ago but now it even fails locally. Test it with:&#010;{code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;&#010;&gt; camel-protobuf - itest starts to fail again&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11153&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11153&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;              Labels: protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason&#010;(I mean not just flaky):&#010;&gt; https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/activity&#010;&gt; {code}&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 sec &lt;&lt;&lt;&#010;FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest&#010;&gt; test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.212 sec  &lt;&lt;&lt;&#010;ERROR!&#010;&gt; org.apache.karaf.features.internal.util.MultiException: Error&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager$MavenDownloader.&lt;init&gt;(MavenDownloadManager.java:84)&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager.createDownloader(MavenDownloadManager.java:72)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:375)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:372)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.SubsystemResolver.resolve(SubsystemResolver.java:187)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:285)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1170)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$0(FeaturesServiceImpl.java:1069)&#010;&gt; &#009;at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Results :&#010;&gt; Tests in error: &#010;&gt;   CamelProtobufTest.test » Multi Error&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] BUILD FAILURE&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] Total time: 02:07 min&#010;&gt; [INFO] Finished at: 2017-04-18T10:26:57+09:00&#010;&gt; [INFO] Final Memory: 41M/2875M&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; {code}&#010;&gt; I remember it worked fine locally a few days ago but now it even fails locally. Test&#010;it with:&#010;&gt; {code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;&gt; in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
546,550,Tadayoshi Sato (JIRA),  [jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to fail again,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064549.1492479333000.301682.1492480421582%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 01:53:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11153?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tadayoshi Sato updated CAMEL-11153:&#010;-----------------------------------&#010;    Description: &#010;{{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason (I&#010;mean not just flaky):&#010;https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/detail/Camel.trunk.itest.karaf/1569/pipeline&#010;&#010;{code}&#010;Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 sec &lt;&lt;&lt; FAILURE!&#010;- in org.apache.camel.itest.karaf.CamelProtobufTest&#010;test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.212 sec  &lt;&lt;&lt;&#010;ERROR!&#010;org.apache.karaf.features.internal.util.MultiException: Error&#010;&#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager$MavenDownloader.&lt;init&gt;(MavenDownloadManager.java:84)&#010;&#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager.createDownloader(MavenDownloadManager.java:72)&#010;&#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:375)&#010;&#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:372)&#010;&#009;at org.apache.karaf.features.internal.region.SubsystemResolver.resolve(SubsystemResolver.java:187)&#010;&#009;at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:285)&#010;&#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1170)&#010;&#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$0(FeaturesServiceImpl.java:1069)&#010;&#009;at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;&#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&#009;at java.lang.Thread.run(Thread.java:745)&#010;&#010;&#010;Results :&#010;&#010;Tests in error: &#010;  CamelProtobufTest.test » Multi Error&#010;&#010;Tests run: 1, Failures: 0, Errors: 1, Skipped: 0&#010;&#010;[INFO] ------------------------------------------------------------------------&#010;[INFO] BUILD FAILURE&#010;[INFO] ------------------------------------------------------------------------&#010;[INFO] Total time: 02:07 min&#010;[INFO] Finished at: 2017-04-18T10:26:57+09:00&#010;[INFO] Final Memory: 41M/2875M&#010;[INFO] ------------------------------------------------------------------------&#010;{code}&#010;&#010;I remember it worked fine locally a few days ago but now it even fails locally. Test it with:&#010;{code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;  was:&#010;{{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason (I&#010;mean not just flaky):&#010;https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/activity&#010;&#010;{code}&#010;Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 sec &lt;&lt;&lt; FAILURE!&#010;- in org.apache.camel.itest.karaf.CamelProtobufTest&#010;test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.212 sec  &lt;&lt;&lt;&#010;ERROR!&#010;org.apache.karaf.features.internal.util.MultiException: Error&#010;&#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager$MavenDownloader.&lt;init&gt;(MavenDownloadManager.java:84)&#010;&#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager.createDownloader(MavenDownloadManager.java:72)&#010;&#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:375)&#010;&#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:372)&#010;&#009;at org.apache.karaf.features.internal.region.SubsystemResolver.resolve(SubsystemResolver.java:187)&#010;&#009;at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:285)&#010;&#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1170)&#010;&#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$0(FeaturesServiceImpl.java:1069)&#010;&#009;at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;&#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&#009;at java.lang.Thread.run(Thread.java:745)&#010;&#010;&#010;Results :&#010;&#010;Tests in error: &#010;  CamelProtobufTest.test » Multi Error&#010;&#010;Tests run: 1, Failures: 0, Errors: 1, Skipped: 0&#010;&#010;[INFO] ------------------------------------------------------------------------&#010;[INFO] BUILD FAILURE&#010;[INFO] ------------------------------------------------------------------------&#010;[INFO] Total time: 02:07 min&#010;[INFO] Finished at: 2017-04-18T10:26:57+09:00&#010;[INFO] Final Memory: 41M/2875M&#010;[INFO] ------------------------------------------------------------------------&#010;{code}&#010;&#010;I remember it worked fine locally a few days ago but now it even fails locally. Test it with:&#010;{code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;&#010;&gt; camel-protobuf - itest starts to fail again&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11153&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11153&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;              Labels: protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason&#010;(I mean not just flaky):&#010;&gt; https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/detail/Camel.trunk.itest.karaf/1569/pipeline&#010;&gt; {code}&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 sec &lt;&lt;&lt;&#010;FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest&#010;&gt; test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.212 sec  &lt;&lt;&lt;&#010;ERROR!&#010;&gt; org.apache.karaf.features.internal.util.MultiException: Error&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager$MavenDownloader.&lt;init&gt;(MavenDownloadManager.java:84)&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager.createDownloader(MavenDownloadManager.java:72)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:375)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:372)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.SubsystemResolver.resolve(SubsystemResolver.java:187)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:285)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1170)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$0(FeaturesServiceImpl.java:1069)&#010;&gt; &#009;at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Results :&#010;&gt; Tests in error: &#010;&gt;   CamelProtobufTest.test » Multi Error&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] BUILD FAILURE&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] Total time: 02:07 min&#010;&gt; [INFO] Finished at: 2017-04-18T10:26:57+09:00&#010;&gt; [INFO] Final Memory: 41M/2875M&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; {code}&#010;&gt; I remember it worked fine locally a few days ago but now it even fails locally. Test&#010;it with:&#010;&gt; {code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;&gt; in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
547,551,Tadayoshi Sato (JIRA),  [jira] [Assigned] (CAMEL-11153) camel-protobuf - itest starts to fail again,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064549.1492479333000.301847.1492482162385%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 02:22:42 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11153?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Tadayoshi Sato reassigned CAMEL-11153:&#010;--------------------------------------&#010;&#010;    Assignee: Tadayoshi Sato&#010;&#010;&gt; camel-protobuf - itest starts to fail again&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11153&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11153&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;              Labels: protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason&#010;(I mean not just flaky):&#010;&gt; https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/detail/Camel.trunk.itest.karaf/1569/pipeline&#010;&gt; {code}&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 sec &lt;&lt;&lt;&#010;FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest&#010;&gt; test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.212 sec  &lt;&lt;&lt;&#010;ERROR!&#010;&gt; org.apache.karaf.features.internal.util.MultiException: Error&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager$MavenDownloader.&lt;init&gt;(MavenDownloadManager.java:84)&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager.createDownloader(MavenDownloadManager.java:72)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:375)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:372)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.SubsystemResolver.resolve(SubsystemResolver.java:187)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:285)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1170)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$0(FeaturesServiceImpl.java:1069)&#010;&gt; &#009;at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Results :&#010;&gt; Tests in error: &#010;&gt;   CamelProtobufTest.test Â» Multi Error&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] BUILD FAILURE&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] Total time: 02:07 min&#010;&gt; [INFO] Finished at: 2017-04-18T10:26:57+09:00&#010;&gt; [INFO] Final Memory: 41M/2875M&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; {code}&#010;&gt; I remember it worked fine locally a few days ago but now it even fails locally. Test&#010;it with:&#010;&gt; {code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;&gt; in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
548,552,Tadayoshi Sato (JIRA),  [jira] [Commented] (CAMEL-11153) camel-protobuf - itest starts to fail again,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064549.1492479333000.301861.1492482341760%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 02:25:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11153?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972013#comment-15972013&#010;] &#010;&#010;Tadayoshi Sato commented on CAMEL-11153:&#010;----------------------------------------&#010;&#010;Oops, my bad!  I missed one dependency {{protobuf-guava-version}} for the fix of CAMEL-11130.&#010;Will send a pull req soon.&#010;&#010;&gt; camel-protobuf - itest starts to fail again&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11153&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11153&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;              Labels: protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason&#010;(I mean not just flaky):&#010;&gt; https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/detail/Camel.trunk.itest.karaf/1569/pipeline&#010;&gt; {code}&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 sec &lt;&lt;&lt;&#010;FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest&#010;&gt; test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.212 sec  &lt;&lt;&lt;&#010;ERROR!&#010;&gt; org.apache.karaf.features.internal.util.MultiException: Error&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager$MavenDownloader.&lt;init&gt;(MavenDownloadManager.java:84)&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager.createDownloader(MavenDownloadManager.java:72)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:375)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:372)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.SubsystemResolver.resolve(SubsystemResolver.java:187)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:285)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1170)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$0(FeaturesServiceImpl.java:1069)&#010;&gt; &#009;at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Results :&#010;&gt; Tests in error: &#010;&gt;   CamelProtobufTest.test Â» Multi Error&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] BUILD FAILURE&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] Total time: 02:07 min&#010;&gt; [INFO] Finished at: 2017-04-18T10:26:57+09:00&#010;&gt; [INFO] Final Memory: 41M/2875M&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; {code}&#010;&gt; I remember it worked fine locally a few days ago but now it even fails locally. Test&#010;it with:&#010;&gt; {code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;&gt; in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
549,553,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11153) camel-protobuf - itest starts to fail again,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064549.1492479333000.301898.1492482522520%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 02:28:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11153?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972017#comment-15972017&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11153:&#010;----------------------------------------&#010;&#010;GitHub user tadayosi opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1634&#010;&#010;    CAMEL-11153: Add missing protobuf-guava-version declaration for camel-protobuf karaf feature&#010;&#010;    https://issues.apache.org/jira/browse/CAMEL-11153&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/tadayosi/camel CAMEL-11153&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1634.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1634&#010;    &#010;----&#010;commit ecee62a8147c77c757d796d6301e8f9c1fb59308&#010;Author: Tadayoshi Sato &lt;sato.tadayoshi@gmail.com&gt;&#010;Date:   2017-04-18T02:25:56Z&#010;&#010;    CAMEL-11153: Add missing protobuf-guava-version declaration for camel-protobuf karaf feature&#010;&#010;----&#010;&#010;&#010;&gt; camel-protobuf - itest starts to fail again&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11153&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11153&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;              Labels: protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason&#010;(I mean not just flaky):&#010;&gt; https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/detail/Camel.trunk.itest.karaf/1569/pipeline&#010;&gt; {code}&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 sec &lt;&lt;&lt;&#010;FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest&#010;&gt; test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.212 sec  &lt;&lt;&lt;&#010;ERROR!&#010;&gt; org.apache.karaf.features.internal.util.MultiException: Error&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager$MavenDownloader.&lt;init&gt;(MavenDownloadManager.java:84)&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager.createDownloader(MavenDownloadManager.java:72)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:375)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:372)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.SubsystemResolver.resolve(SubsystemResolver.java:187)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:285)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1170)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$0(FeaturesServiceImpl.java:1069)&#010;&gt; &#009;at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Results :&#010;&gt; Tests in error: &#010;&gt;   CamelProtobufTest.test Â» Multi Error&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] BUILD FAILURE&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] Total time: 02:07 min&#010;&gt; [INFO] Finished at: 2017-04-18T10:26:57+09:00&#010;&gt; [INFO] Final Memory: 41M/2875M&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; {code}&#010;&gt; I remember it worked fine locally a few days ago but now it even fails locally. Test&#010;it with:&#010;&gt; {code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;&gt; in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
550,554,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11153) camel-protobuf - itest starts to fail again,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064549.1492479333000.303034.1492498061651%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 06:47:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11153?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972204#comment-15972204&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11153:&#010;----------------------------------------&#010;&#010;Github user asfgit closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1634&#010;&#010;&#010;&gt; camel-protobuf - itest starts to fail again&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11153&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11153&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;              Labels: protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason&#010;(I mean not just flaky):&#010;&gt; https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/detail/Camel.trunk.itest.karaf/1569/pipeline&#010;&gt; {code}&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 sec &lt;&lt;&lt;&#010;FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest&#010;&gt; test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.212 sec  &lt;&lt;&lt;&#010;ERROR!&#010;&gt; org.apache.karaf.features.internal.util.MultiException: Error&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager$MavenDownloader.&lt;init&gt;(MavenDownloadManager.java:84)&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager.createDownloader(MavenDownloadManager.java:72)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:375)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:372)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.SubsystemResolver.resolve(SubsystemResolver.java:187)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:285)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1170)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$0(FeaturesServiceImpl.java:1069)&#010;&gt; &#009;at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Results :&#010;&gt; Tests in error: &#010;&gt;   CamelProtobufTest.test Â» Multi Error&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] BUILD FAILURE&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] Total time: 02:07 min&#010;&gt; [INFO] Finished at: 2017-04-18T10:26:57+09:00&#010;&gt; [INFO] Final Memory: 41M/2875M&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; {code}&#010;&gt; I remember it worked fine locally a few days ago but now it even fails locally. Test&#010;it with:&#010;&gt; {code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;&gt; in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
551,555,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11153) camel-protobuf - itest starts to fail again,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064549.1492479333000.303219.1492499261824%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 07:07:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11153?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11153.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; camel-protobuf - itest starts to fail again&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11153&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11153&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;              Labels: protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason&#010;(I mean not just flaky):&#010;&gt; https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/detail/Camel.trunk.itest.karaf/1569/pipeline&#010;&gt; {code}&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 sec &lt;&lt;&lt;&#010;FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest&#010;&gt; test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.212 sec  &lt;&lt;&lt;&#010;ERROR!&#010;&gt; org.apache.karaf.features.internal.util.MultiException: Error&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager$MavenDownloader.&lt;init&gt;(MavenDownloadManager.java:84)&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager.createDownloader(MavenDownloadManager.java:72)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:375)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:372)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.SubsystemResolver.resolve(SubsystemResolver.java:187)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:285)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1170)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$0(FeaturesServiceImpl.java:1069)&#010;&gt; &#009;at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Results :&#010;&gt; Tests in error: &#010;&gt;   CamelProtobufTest.test Â» Multi Error&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] BUILD FAILURE&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] Total time: 02:07 min&#010;&gt; [INFO] Finished at: 2017-04-18T10:26:57+09:00&#010;&gt; [INFO] Final Memory: 41M/2875M&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; {code}&#010;&gt; I remember it worked fine locally a few days ago but now it even fails locally. Test&#010;it with:&#010;&gt; {code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;&gt; in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
552,556,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to fail again,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064549.1492479333000.303216.1492499261796%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 07:07:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11153?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11153:&#010;--------------------------------&#010;    Issue Type: Test  (was: Bug)&#010;&#010;&gt; camel-protobuf - itest starts to fail again&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11153&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11153&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;              Labels: protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason&#010;(I mean not just flaky):&#010;&gt; https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/detail/Camel.trunk.itest.karaf/1569/pipeline&#010;&gt; {code}&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 sec &lt;&lt;&lt;&#010;FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest&#010;&gt; test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.212 sec  &lt;&lt;&lt;&#010;ERROR!&#010;&gt; org.apache.karaf.features.internal.util.MultiException: Error&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager$MavenDownloader.&lt;init&gt;(MavenDownloadManager.java:84)&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager.createDownloader(MavenDownloadManager.java:72)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:375)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:372)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.SubsystemResolver.resolve(SubsystemResolver.java:187)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:285)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1170)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$0(FeaturesServiceImpl.java:1069)&#010;&gt; &#009;at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Results :&#010;&gt; Tests in error: &#010;&gt;   CamelProtobufTest.test Â» Multi Error&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] BUILD FAILURE&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] Total time: 02:07 min&#010;&gt; [INFO] Finished at: 2017-04-18T10:26:57+09:00&#010;&gt; [INFO] Final Memory: 41M/2875M&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; {code}&#010;&gt; I remember it worked fine locally a few days ago but now it even fails locally. Test&#010;it with:&#010;&gt; {code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;&gt; in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
553,557,,[jira] [Created] (CAMEL-11154) itest - spring-boot fails for camel-hbase,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064549.1492479333000.303216.1492499261796%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 07:07:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11153?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11153:&#010;--------------------------------&#010;    Issue Type: Test  (was: Bug)&#010;&#010;&gt; camel-protobuf - itest starts to fail again&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11153&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11153&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Tadayoshi Sato&#010;&gt;              Labels: protobuf&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason&#010;(I mean not just flaky):&#010;&gt; https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/detail/Camel.trunk.itest.karaf/1569/pipeline&#010;&gt; {code}&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 sec &lt;&lt;&lt;&#010;FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest&#010;&gt; test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.212 sec  &lt;&lt;&lt;&#010;ERROR!&#010;&gt; org.apache.karaf.features.internal.util.MultiException: Error&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager$MavenDownloader.&lt;init&gt;(MavenDownloadManager.java:84)&#010;&gt; &#009;at org.apache.karaf.features.internal.download.impl.MavenDownloadManager.createDownloader(MavenDownloadManager.java:72)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:375)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(Subsystem.java:372)&#010;&gt; &#009;at org.apache.karaf.features.internal.region.SubsystemResolver.resolve(SubsystemResolver.java:187)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:285)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1170)&#010;&gt; &#009;at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$0(FeaturesServiceImpl.java:1069)&#010;&gt; &#009;at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745)&#010;&gt; Results :&#010;&gt; Tests in error: &#010;&gt;   CamelProtobufTest.test Â» Multi Error&#010;&gt; Tests run: 1, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] BUILD FAILURE&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; [INFO] Total time: 02:07 min&#010;&gt; [INFO] Finished at: 2017-04-18T10:26:57+09:00&#010;&gt; [INFO] Final Memory: 41M/2875M&#010;&gt; [INFO] ------------------------------------------------------------------------&#010;&gt; {code}&#010;&gt; I remember it worked fine locally a few days ago but now it even fails locally. Test&#010;it with:&#010;&gt; {code}$ mvn test -Dtest=CamelProtobufTest{code}&#010;&gt; in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
554,558,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11154) itest - spring-boot fails for camel-hbase,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064597.1492499068000.303202.1492499082527%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 07:04:42 GMT","Claus Ibsen created CAMEL-11154:&#010;-----------------------------------&#010;&#010;             Summary: itest - spring-boot fails for camel-hbase&#010;                 Key: CAMEL-11154&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11154&#010;             Project: Camel&#010;          Issue Type: Test&#010;    Affects Versions: 2.19.0&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.19.0&#010;&#010;&#010;Tests in error: &#010;org.apache.camel.itest.springboot.CamelHbaseTest.componentTests(org.apache.camel.itest.springboot.CamelHbaseTest)&#010;  Run 1: CamelHbaseTest&gt;AbstractSpringBootTestSupport.startSpringBoot:44 » InvocationTarget&#010;  Run 2: CamelHbaseTest&gt;AbstractSpringBootTestSupport.startSpringBoot:44 » InvocationTarget&#010;&#010;&#010;Tests run: 217, Failures: 0, Errors: 1, Skipped: 0&#010;&#010;[ERROR] There are test failures.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
555,559,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11154) itest - spring-boot fails for camel-hbase,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064597.1492499068000.303490.1492501362440%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 07:42:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11154?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972262#comment-15972262&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11154:&#010;-------------------------------------&#010;&#010;[~nferraro] wonder if you could take a look?&#010;&#010;&gt; itest - spring-boot fails for camel-hbase&#010;&gt; -----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11154&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11154&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Tests in error: &#010;&gt; org.apache.camel.itest.springboot.CamelHbaseTest.componentTests(org.apache.camel.itest.springboot.CamelHbaseTest)&#010;&gt;   Run 1: CamelHbaseTest&gt;AbstractSpringBootTestSupport.startSpringBoot:44 » InvocationTarget&#010;&gt;   Run 2: CamelHbaseTest&gt;AbstractSpringBootTestSupport.startSpringBoot:44 » InvocationTarget&#010;&gt; Tests run: 217, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; [ERROR] There are test failures.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
556,560,Nicola Ferraro (JIRA),  [jira] [Commented] (CAMEL-11154) itest - spring-boot fails for camel-hbase,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064597.1492499068000.303697.1492502922106%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 08:08:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11154?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972298#comment-15972298&#010;] &#010;&#010;Nicola Ferraro commented on CAMEL-11154:&#010;----------------------------------------&#010;&#010;Checking...&#010;&#010;&gt; itest - spring-boot fails for camel-hbase&#010;&gt; -----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11154&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11154&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Tests in error: &#010;&gt; org.apache.camel.itest.springboot.CamelHbaseTest.componentTests(org.apache.camel.itest.springboot.CamelHbaseTest)&#010;&gt;   Run 1: CamelHbaseTest&gt;AbstractSpringBootTestSupport.startSpringBoot:44 » InvocationTarget&#010;&gt;   Run 2: CamelHbaseTest&gt;AbstractSpringBootTestSupport.startSpringBoot:44 » InvocationTarget&#010;&gt; Tests run: 217, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; [ERROR] There are test failures.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
557,561,Nicola Ferraro (JIRA),  [jira] [Commented] (CAMEL-11154) itest - spring-boot fails for camel-hbase,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064597.1492499068000.304278.1492507901605%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 09:31:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11154?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972396#comment-15972396&#010;] &#010;&#010;Nicola Ferraro commented on CAMEL-11154:&#010;----------------------------------------&#010;&#010;The problem is not happening locally, but current build is going to fail. I've changed the&#010;test not to try to embed test dependencies (that include a hbase server) inside spring-boot.&#010;The problem seems to be related to a transitive import of log4j...&#010;&#010;&gt; itest - spring-boot fails for camel-hbase&#010;&gt; -----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11154&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11154&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Tests in error: &#010;&gt; org.apache.camel.itest.springboot.CamelHbaseTest.componentTests(org.apache.camel.itest.springboot.CamelHbaseTest)&#010;&gt;   Run 1: CamelHbaseTest&gt;AbstractSpringBootTestSupport.startSpringBoot:44 » InvocationTarget&#010;&gt;   Run 2: CamelHbaseTest&gt;AbstractSpringBootTestSupport.startSpringBoot:44 » InvocationTarget&#010;&gt; Tests run: 217, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; [ERROR] There are test failures.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
558,562,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11154) itest - spring-boot fails for camel-hbase,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064597.1492499068000.315264.1492587161726%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 07:32:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11154?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11154:&#010;--------------------------------&#010;    Component/s: tests&#010;&#010;&gt; itest - spring-boot fails for camel-hbase&#010;&gt; -----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11154&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11154&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Tests in error: &#010;&gt; org.apache.camel.itest.springboot.CamelHbaseTest.componentTests(org.apache.camel.itest.springboot.CamelHbaseTest)&#010;&gt;   Run 1: CamelHbaseTest&gt;AbstractSpringBootTestSupport.startSpringBoot:44 » InvocationTarget&#010;&gt;   Run 2: CamelHbaseTest&gt;AbstractSpringBootTestSupport.startSpringBoot:44 » InvocationTarget&#010;&gt; Tests run: 217, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; [ERROR] There are test failures.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
559,563,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11154) itest - spring-boot fails for camel-hbase,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064597.1492499068000.315266.1492587161739%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 07:32:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11154?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11154.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; itest - spring-boot fails for camel-hbase&#010;&gt; -----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11154&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11154&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Tests in error: &#010;&gt; org.apache.camel.itest.springboot.CamelHbaseTest.componentTests(org.apache.camel.itest.springboot.CamelHbaseTest)&#010;&gt;   Run 1: CamelHbaseTest&gt;AbstractSpringBootTestSupport.startSpringBoot:44 » InvocationTarget&#010;&gt;   Run 2: CamelHbaseTest&gt;AbstractSpringBootTestSupport.startSpringBoot:44 » InvocationTarget&#010;&gt; Tests run: 217, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; [ERROR] There are test failures.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
560,564,Claus Ibsen (JIRA),  [jira] [Assigned] (CAMEL-11154) itest - spring-boot fails for camel-hbase,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064597.1492499068000.315262.1492587161711%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 07:32:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11154?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reassigned CAMEL-11154:&#010;-----------------------------------&#010;&#010;    Assignee: Nicola Ferraro&#010;&#010;&gt; itest - spring-boot fails for camel-hbase&#010;&gt; -----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11154&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11154&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Tests in error: &#010;&gt; org.apache.camel.itest.springboot.CamelHbaseTest.componentTests(org.apache.camel.itest.springboot.CamelHbaseTest)&#010;&gt;   Run 1: CamelHbaseTest&gt;AbstractSpringBootTestSupport.startSpringBoot:44 » InvocationTarget&#010;&gt;   Run 2: CamelHbaseTest&gt;AbstractSpringBootTestSupport.startSpringBoot:44 » InvocationTarget&#010;&gt; Tests run: 217, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; [ERROR] There are test failures.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
561,565,,[jira] [Created] (CAMEL-11155) camel-infinispan: command and operation should match,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064597.1492499068000.315262.1492587161711%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 07:32:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11154?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reassigned CAMEL-11154:&#010;-----------------------------------&#010;&#010;    Assignee: Nicola Ferraro&#010;&#010;&gt; itest - spring-boot fails for camel-hbase&#010;&gt; -----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11154&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11154&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: tests&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Tests in error: &#010;&gt; org.apache.camel.itest.springboot.CamelHbaseTest.componentTests(org.apache.camel.itest.springboot.CamelHbaseTest)&#010;&gt;   Run 1: CamelHbaseTest&gt;AbstractSpringBootTestSupport.startSpringBoot:44 » InvocationTarget&#010;&gt;   Run 2: CamelHbaseTest&gt;AbstractSpringBootTestSupport.startSpringBoot:44 » InvocationTarget&#010;&gt; Tests run: 217, Failures: 0, Errors: 1, Skipped: 0&#010;&gt; [ERROR] There are test failures.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
562,566,Luca Burgazzoli (JIRA),  [jira] [Created] (CAMEL-11155) camel-infinispan: command and operation should match,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064616.1492502072000.303571.1492502081884%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 07:54:41 GMT","Luca Burgazzoli created CAMEL-11155:&#010;---------------------------------------&#010;&#010;             Summary: camel-infinispan: command and operation should match&#010;                 Key: CAMEL-11155&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11155&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-infinispan&#010;            Reporter: Luca Burgazzoli&#010;            Assignee: Luca Burgazzoli&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;As today in camel-infinispan you can configure which operation the producer should perform&#010;in two ways:&#010;- by setting the CamelInfinispanOperation header&#010;- by setting the command option in the endpoint&#010;&#010;The first thing to notice is that they use a different naming but for consistency we should&#010;use either operation or command but not both. The second thing is that if you set the operation&#010;on header you should use i.e. CamelInfinispanOperationPut but the same ""operation"" set to&#010;the command uri option is PUT so again there is a discrepancy in the naming used.&#010;&#010;As solution we should use:&#010;- CamelInfinispanOperation for the header&#010;- operation as endpoint option&#010;- the operation should be in the simple form like PUT, GET, etc as it is clear from the context&#010;that we are targeting Infinispan. &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
563,567,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-11155) camel-infinispan - producer command and operation discrepancies,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064616.1492502072000.303574.1492502141708%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 07:55:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11155?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-11155:&#010;------------------------------------&#010;    Summary: camel-infinispan - producer command and operation discrepancies  (was: camel-infinispan:&#010;command and operation should match)&#010;&#010;&gt; camel-infinispan - producer command and operation discrepancies&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11155&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11155&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-infinispan&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; As today in camel-infinispan you can configure which operation the producer should perform&#010;in two ways:&#010;&gt; - by setting the CamelInfinispanOperation header&#010;&gt; - by setting the command option in the endpoint&#010;&gt; The first thing to notice is that they use a different naming but for consistency we&#010;should use either operation or command but not both. The second thing is that if you set the&#010;operation on header you should use i.e. CamelInfinispanOperationPut but the same ""operation""&#010;set to the command uri option is PUT so again there is a discrepancy in the naming used.&#010;&gt; As solution we should use:&#010;&gt; - CamelInfinispanOperation for the header&#010;&gt; - operation as endpoint option&#010;&gt; - the operation should be in the simple form like PUT, GET, etc as it is clear from the&#010;context that we are targeting Infinispan. &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
564,568,,[jira] [Created] (CAMEL-11156) Camel-Kubernetes: Add support for Deployment resources,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064616.1492502072000.303574.1492502141708%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 07:55:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11155?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-11155:&#010;------------------------------------&#010;    Summary: camel-infinispan - producer command and operation discrepancies  (was: camel-infinispan:&#010;command and operation should match)&#010;&#010;&gt; camel-infinispan - producer command and operation discrepancies&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11155&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11155&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-infinispan&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; As today in camel-infinispan you can configure which operation the producer should perform&#010;in two ways:&#010;&gt; - by setting the CamelInfinispanOperation header&#010;&gt; - by setting the command option in the endpoint&#010;&gt; The first thing to notice is that they use a different naming but for consistency we&#010;should use either operation or command but not both. The second thing is that if you set the&#010;operation on header you should use i.e. CamelInfinispanOperationPut but the same ""operation""&#010;set to the command uri option is PUT so again there is a discrepancy in the naming used.&#010;&gt; As solution we should use:&#010;&gt; - CamelInfinispanOperation for the header&#010;&gt; - operation as endpoint option&#010;&gt; - the operation should be in the simple form like PUT, GET, etc as it is clear from the&#010;context that we are targeting Infinispan. &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
565,569,Andrea Cosentino (JIRA),  [jira] [Created] (CAMEL-11156) Camel-Kubernetes: Add support for Deployment resources,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064619.1492503045000.303734.1492503101591%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 08:11:41 GMT",Andrea Cosentino created CAMEL-11156:&#010;----------------------------------------&#010;&#010;             Summary: Camel-Kubernetes: Add support for Deployment resources&#010;                 Key: CAMEL-11156&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11156&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-kubernetes&#010;            Reporter: Andrea Cosentino&#010;            Assignee: Andrea Cosentino&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
566,570,,[jira] [Created] (CAMEL-11157) Camel-Kubernetes: Add Support for DaemonSet resources,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064619.1492503045000.303734.1492503101591%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 08:11:41 GMT",Andrea Cosentino created CAMEL-11156:&#010;----------------------------------------&#010;&#010;             Summary: Camel-Kubernetes: Add support for Deployment resources&#010;                 Key: CAMEL-11156&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11156&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-kubernetes&#010;            Reporter: Andrea Cosentino&#010;            Assignee: Andrea Cosentino&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
567,571,Andrea Cosentino (JIRA),  [jira] [Created] (CAMEL-11157) Camel-Kubernetes: Add Support for DaemonSet resources,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064621.1492503424000.303763.1492503461631%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 08:17:41 GMT",Andrea Cosentino created CAMEL-11157:&#010;----------------------------------------&#010;&#010;             Summary: Camel-Kubernetes: Add Support for DaemonSet resources&#010;                 Key: CAMEL-11157&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11157&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-kubernetes&#010;            Reporter: Andrea Cosentino&#010;            Assignee: Andrea Cosentino&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
568,572,,[jira] [Created] (CAMEL-11158) Camel-Kubernetes: Add support for Job resources,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064621.1492503424000.303763.1492503461631%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 08:17:41 GMT",Andrea Cosentino created CAMEL-11157:&#010;----------------------------------------&#010;&#010;             Summary: Camel-Kubernetes: Add Support for DaemonSet resources&#010;                 Key: CAMEL-11157&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11157&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-kubernetes&#010;            Reporter: Andrea Cosentino&#010;            Assignee: Andrea Cosentino&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
569,573,Andrea Cosentino (JIRA),  [jira] [Created] (CAMEL-11158) Camel-Kubernetes: Add support for Job resources,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064624.1492503555000.303784.1492503581591%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 08:19:41 GMT",Andrea Cosentino created CAMEL-11158:&#010;----------------------------------------&#010;&#010;             Summary: Camel-Kubernetes: Add support for Job resources&#010;                 Key: CAMEL-11158&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11158&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-kubernetes&#010;            Reporter: Andrea Cosentino&#010;            Assignee: Andrea Cosentino&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
570,574,,[jira] [Created] (CAMEL-11159) Camel-Kubernetes: Add support for Ingress resources,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064624.1492503555000.303784.1492503581591%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 08:19:41 GMT",Andrea Cosentino created CAMEL-11158:&#010;----------------------------------------&#010;&#010;             Summary: Camel-Kubernetes: Add support for Job resources&#010;                 Key: CAMEL-11158&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11158&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-kubernetes&#010;            Reporter: Andrea Cosentino&#010;            Assignee: Andrea Cosentino&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
571,575,Andrea Cosentino (JIRA),  [jira] [Created] (CAMEL-11159) Camel-Kubernetes: Add support for Ingress resources,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064625.1492503664000.303799.1492503701765%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 08:21:41 GMT",Andrea Cosentino created CAMEL-11159:&#010;----------------------------------------&#010;&#010;             Summary: Camel-Kubernetes: Add support for Ingress resources&#010;                 Key: CAMEL-11159&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11159&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-kubernetes&#010;            Reporter: Andrea Cosentino&#010;            Assignee: Andrea Cosentino&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
572,576,,[jira] [Commented] (CAMEL-11000) Property 'accessExternalDTD' is not recognized by (all) Xerces,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064625.1492503664000.303799.1492503701765%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 08:21:41 GMT",Andrea Cosentino created CAMEL-11159:&#010;----------------------------------------&#010;&#010;             Summary: Camel-Kubernetes: Add support for Ingress resources&#010;                 Key: CAMEL-11159&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11159&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-kubernetes&#010;            Reporter: Andrea Cosentino&#010;            Assignee: Andrea Cosentino&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
573,577,Bjørn Hilstad (JIRA),  [jira] [Commented] (CAMEL-11000) Property 'accessExternalDTD' is not recognized by (all) Xerces,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050532.1489405412000.304013.1492505861849%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 08:57:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11000?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972349#comment-15972349&#010;] &#010;&#010;Bjørn Hilstad commented on CAMEL-11000:&#010;---------------------------------------&#010;&#010;This change does not actually seem to be in the 2.17.6 version. Something has gone wrong.&#010;&#010;&gt; Property 'accessExternalDTD' is not recognized by (all) Xerces&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11000&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11000&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-validator&#010;&gt;    Affects Versions: 2.17.5, 2.18.3&#010;&gt;            Reporter: Bernard Ligny&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;             Fix For: 2.17.6, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When upgrading from v2.18.1 to 2.18.3, we encounter a (blocking) regression, preventing&#010;routes involving validator component to successfully start.&#010;&gt; Indeed, one of the recent validation-related changes is not fully compatible with all&#010;versions of Xerces. Especially when deployed on JBoss Wildlfy 10.1.0.Final :-(&#010;&gt; *Stack trace*:&#010;&gt; {code:java}&#010;&gt; Caused by: java.lang.IllegalStateException: org.xml.sax.SAXNotRecognizedException: Property&#010;'http://javax.xml.XMLConstants/property/accessExternalDTD' is not recognized.&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.createSchemaFactory(SchemaReader.java:181)&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.getSchemaFactory(SchemaReader.java:152)&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.createSchema(SchemaReader.java:192)&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.loadSchema(SchemaReader.java:84)&#010;&gt; &#009;at org.apache.camel.component.validator.ValidatorEndpoint.createProducer(ValidatorEndpoint.java:119)&#010;&gt; &#009;at org.apache.camel.impl.ProducerCache.doGetProducer(ProducerCache.java:574)&#010;&gt; &#009;... 78 more&#010;&gt; Caused by: org.xml.sax.SAXNotRecognizedException: Property 'http://javax.xml.XMLConstants/property/accessExternalDTD'&#010;is not recognized.&#010;&gt; &#009;at org.apache.xerces.jaxp.validation.XMLSchemaFactory.setProperty(XMLSchemaFactory.java:436)&#010;&gt; &#009;at __redirected.__SchemaFactory.setProperty(__SchemaFactory.java:143)&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.createSchemaFactory(SchemaReader.java:178)&#010;&gt; &#009;... 83 more&#010;&gt; {code}&#010;&gt; In particular, in the following code:&#010;&gt; {code:java}&#010;&gt; protected SchemaFactory createSchemaFactory() {&#010;&gt;    ...&#010;&gt; &#009;try {&#010;&gt; &#009;&#009;factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, """");&#010;&gt; &#009;} catch (SAXException e) {&#010;&gt; &#009;&#009;LOG.error(e.getMessage(), e);&#010;&gt; &#009;&#009;throw new IllegalStateException(e);&#010;&gt; &#009;} &#010;&gt;  &#010;&gt; }   &#010;&gt; {code} &#010;&gt;    &#010;&gt; Would it be possible to issue a simple warning, rather then raising an exception ?&#010;&gt; (&gt;see Oracle recommandations: https://docs.oracle.com/javase/tutorial/jaxp/properties/error.html)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
574,578,Andrea Cosentino (JIRA),  [jira] [Updated] (CAMEL-11000) Property 'accessExternalDTD' is not recognized by (all) Xerces,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050532.1489405412000.304039.1492505981789%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 08:59:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11000?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino updated CAMEL-11000:&#010;-------------------------------------&#010;    Fix Version/s:     (was: 2.17.6)&#010;                   2.17.7&#010;&#010;&gt; Property 'accessExternalDTD' is not recognized by (all) Xerces&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11000&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11000&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-validator&#010;&gt;    Affects Versions: 2.17.5, 2.18.3&#010;&gt;            Reporter: Bernard Ligny&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When upgrading from v2.18.1 to 2.18.3, we encounter a (blocking) regression, preventing&#010;routes involving validator component to successfully start.&#010;&gt; Indeed, one of the recent validation-related changes is not fully compatible with all&#010;versions of Xerces. Especially when deployed on JBoss Wildlfy 10.1.0.Final :-(&#010;&gt; *Stack trace*:&#010;&gt; {code:java}&#010;&gt; Caused by: java.lang.IllegalStateException: org.xml.sax.SAXNotRecognizedException: Property&#010;'http://javax.xml.XMLConstants/property/accessExternalDTD' is not recognized.&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.createSchemaFactory(SchemaReader.java:181)&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.getSchemaFactory(SchemaReader.java:152)&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.createSchema(SchemaReader.java:192)&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.loadSchema(SchemaReader.java:84)&#010;&gt; &#009;at org.apache.camel.component.validator.ValidatorEndpoint.createProducer(ValidatorEndpoint.java:119)&#010;&gt; &#009;at org.apache.camel.impl.ProducerCache.doGetProducer(ProducerCache.java:574)&#010;&gt; &#009;... 78 more&#010;&gt; Caused by: org.xml.sax.SAXNotRecognizedException: Property 'http://javax.xml.XMLConstants/property/accessExternalDTD'&#010;is not recognized.&#010;&gt; &#009;at org.apache.xerces.jaxp.validation.XMLSchemaFactory.setProperty(XMLSchemaFactory.java:436)&#010;&gt; &#009;at __redirected.__SchemaFactory.setProperty(__SchemaFactory.java:143)&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.createSchemaFactory(SchemaReader.java:178)&#010;&gt; &#009;... 83 more&#010;&gt; {code}&#010;&gt; In particular, in the following code:&#010;&gt; {code:java}&#010;&gt; protected SchemaFactory createSchemaFactory() {&#010;&gt;    ...&#010;&gt; &#009;try {&#010;&gt; &#009;&#009;factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, """");&#010;&gt; &#009;} catch (SAXException e) {&#010;&gt; &#009;&#009;LOG.error(e.getMessage(), e);&#010;&gt; &#009;&#009;throw new IllegalStateException(e);&#010;&gt; &#009;} &#010;&gt;  &#010;&gt; }   &#010;&gt; {code} &#010;&gt;    &#010;&gt; Would it be possible to issue a simple warning, rather then raising an exception ?&#010;&gt; (&gt;see Oracle recommandations: https://docs.oracle.com/javase/tutorial/jaxp/properties/error.html)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
575,579,Andrea Cosentino (JIRA),  [jira] [Commented] (CAMEL-11000) Property 'accessExternalDTD' is not recognized by (all) Xerces,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050532.1489405412000.304044.1492506050169%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 09:00:50 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11000?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972351#comment-15972351&#010;] &#010;&#010;Andrea Cosentino commented on CAMEL-11000:&#010;------------------------------------------&#010;&#010;It will be in 2.17.7 is we will release it. Thanks for spotting this.&#010;&#010;&gt; Property 'accessExternalDTD' is not recognized by (all) Xerces&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11000&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11000&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-validator&#010;&gt;    Affects Versions: 2.17.5, 2.18.3&#010;&gt;            Reporter: Bernard Ligny&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When upgrading from v2.18.1 to 2.18.3, we encounter a (blocking) regression, preventing&#010;routes involving validator component to successfully start.&#010;&gt; Indeed, one of the recent validation-related changes is not fully compatible with all&#010;versions of Xerces. Especially when deployed on JBoss Wildlfy 10.1.0.Final :-(&#010;&gt; *Stack trace*:&#010;&gt; {code:java}&#010;&gt; Caused by: java.lang.IllegalStateException: org.xml.sax.SAXNotRecognizedException: Property&#010;'http://javax.xml.XMLConstants/property/accessExternalDTD' is not recognized.&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.createSchemaFactory(SchemaReader.java:181)&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.getSchemaFactory(SchemaReader.java:152)&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.createSchema(SchemaReader.java:192)&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.loadSchema(SchemaReader.java:84)&#010;&gt; &#009;at org.apache.camel.component.validator.ValidatorEndpoint.createProducer(ValidatorEndpoint.java:119)&#010;&gt; &#009;at org.apache.camel.impl.ProducerCache.doGetProducer(ProducerCache.java:574)&#010;&gt; &#009;... 78 more&#010;&gt; Caused by: org.xml.sax.SAXNotRecognizedException: Property 'http://javax.xml.XMLConstants/property/accessExternalDTD'&#010;is not recognized.&#010;&gt; &#009;at org.apache.xerces.jaxp.validation.XMLSchemaFactory.setProperty(XMLSchemaFactory.java:436)&#010;&gt; &#009;at __redirected.__SchemaFactory.setProperty(__SchemaFactory.java:143)&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.createSchemaFactory(SchemaReader.java:178)&#010;&gt; &#009;... 83 more&#010;&gt; {code}&#010;&gt; In particular, in the following code:&#010;&gt; {code:java}&#010;&gt; protected SchemaFactory createSchemaFactory() {&#010;&gt;    ...&#010;&gt; &#009;try {&#010;&gt; &#009;&#009;factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, """");&#010;&gt; &#009;} catch (SAXException e) {&#010;&gt; &#009;&#009;LOG.error(e.getMessage(), e);&#010;&gt; &#009;&#009;throw new IllegalStateException(e);&#010;&gt; &#009;} &#010;&gt;  &#010;&gt; }   &#010;&gt; {code} &#010;&gt;    &#010;&gt; Would it be possible to issue a simple warning, rather then raising an exception ?&#010;&gt; (&gt;see Oracle recommandations: https://docs.oracle.com/javase/tutorial/jaxp/properties/error.html)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
576,580,,[jira] [Created] (CAMEL-11160) Component docs - ascii doc warns,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050532.1489405412000.304044.1492506050169%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 09:00:50 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11000?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15972351#comment-15972351&#010;] &#010;&#010;Andrea Cosentino commented on CAMEL-11000:&#010;------------------------------------------&#010;&#010;It will be in 2.17.7 is we will release it. Thanks for spotting this.&#010;&#010;&gt; Property 'accessExternalDTD' is not recognized by (all) Xerces&#010;&gt; --------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11000&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11000&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-validator&#010;&gt;    Affects Versions: 2.17.5, 2.18.3&#010;&gt;            Reporter: Bernard Ligny&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When upgrading from v2.18.1 to 2.18.3, we encounter a (blocking) regression, preventing&#010;routes involving validator component to successfully start.&#010;&gt; Indeed, one of the recent validation-related changes is not fully compatible with all&#010;versions of Xerces. Especially when deployed on JBoss Wildlfy 10.1.0.Final :-(&#010;&gt; *Stack trace*:&#010;&gt; {code:java}&#010;&gt; Caused by: java.lang.IllegalStateException: org.xml.sax.SAXNotRecognizedException: Property&#010;'http://javax.xml.XMLConstants/property/accessExternalDTD' is not recognized.&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.createSchemaFactory(SchemaReader.java:181)&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.getSchemaFactory(SchemaReader.java:152)&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.createSchema(SchemaReader.java:192)&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.loadSchema(SchemaReader.java:84)&#010;&gt; &#009;at org.apache.camel.component.validator.ValidatorEndpoint.createProducer(ValidatorEndpoint.java:119)&#010;&gt; &#009;at org.apache.camel.impl.ProducerCache.doGetProducer(ProducerCache.java:574)&#010;&gt; &#009;... 78 more&#010;&gt; Caused by: org.xml.sax.SAXNotRecognizedException: Property 'http://javax.xml.XMLConstants/property/accessExternalDTD'&#010;is not recognized.&#010;&gt; &#009;at org.apache.xerces.jaxp.validation.XMLSchemaFactory.setProperty(XMLSchemaFactory.java:436)&#010;&gt; &#009;at __redirected.__SchemaFactory.setProperty(__SchemaFactory.java:143)&#010;&gt; &#009;at org.apache.camel.processor.validation.SchemaReader.createSchemaFactory(SchemaReader.java:178)&#010;&gt; &#009;... 83 more&#010;&gt; {code}&#010;&gt; In particular, in the following code:&#010;&gt; {code:java}&#010;&gt; protected SchemaFactory createSchemaFactory() {&#010;&gt;    ...&#010;&gt; &#009;try {&#010;&gt; &#009;&#009;factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, """");&#010;&gt; &#009;} catch (SAXException e) {&#010;&gt; &#009;&#009;LOG.error(e.getMessage(), e);&#010;&gt; &#009;&#009;throw new IllegalStateException(e);&#010;&gt; &#009;} &#010;&gt;  &#010;&gt; }   &#010;&gt; {code} &#010;&gt;    &#010;&gt; Would it be possible to issue a simple warning, rather then raising an exception ?&#010;&gt; (&gt;see Oracle recommandations: https://docs.oracle.com/javase/tutorial/jaxp/properties/error.html)&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
577,581,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11160) Component docs - ascii doc warns,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064637.1492505952000.304032.1492505981652%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 08:59:41 GMT","Claus Ibsen created CAMEL-11160:&#010;-----------------------------------&#010;&#010;             Summary: Component docs - ascii doc warns&#010;                 Key: CAMEL-11160&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11160&#010;             Project: Camel&#010;          Issue Type: Task&#010;          Components: documentation&#010;            Reporter: Claus Ibsen&#010;            Priority: Minor&#010;             Fix For: 2.19.0&#010;&#010;&#010;[INFO] ================================================================================&#010;[INFO] Copying all Camel documents (ascii docs)&#010;[INFO] Found 349 ascii document files&#010;asciidoctor: WARNING: ignite-component.adoc: line 44: section title out of sequence: expected&#010;level 2, got level 3&#010;asciidoctor: WARNING: ignite-component.adoc: line 136: section title out of sequence: expected&#010;level 2, got level 3&#010;asciidoctor: WARNING: ignite-component.adoc: line 213: section title out of sequence: expected&#010;level 2, got level 3&#010;asciidoctor: WARNING: ignite-component.adoc: line 258: section title out of sequence: expected&#010;level 2, got level 3&#010;asciidoctor: WARNING: ignite-component.adoc: line 287: section title out of sequence: expected&#010;level 2, got level 3&#010;asciidoctor: WARNING: ignite-component.adoc: line 327: section title out of sequence: expected&#010;level 2, got level 3&#010;asciidoctor: WARNING: ignite-component.adoc: line 384: section title out of sequence: expected&#010;level 2, got level 3&#010;asciidoctor: WARNING: ignite-component.adoc: line 415: section title out of sequence: expected&#010;level 2, got level 3&#010;asciidoctor: WARNING: ignite-component.adoc: line 460: section title out of sequence: expected&#010;level 2, got level 3&#010;asciidoctor: WARNING: ignite-component.adoc: line 474: section title out of sequence: expected&#010;level 2, got level 3&#010;asciidoctor: WARNING: ignite-component.adoc: line 486: list item index: expected 2, got 1&#010;asciidoctor: WARNING: ignite-component.adoc: line 492: section title out of sequence: expected&#010;level 2, got level 3&#010;asciidoctor: WARNING: test-spring.adoc: line 81: section title out of sequence: expected level&#010;2, got level 3&#010;asciidoctor: WARNING: test-spring.adoc: line 107: section title out of sequence: expected&#010;level 2, got level 3&#010;asciidoctor: WARNING: test-spring.adoc: line 245: invalid style for example block: INFO&#010;asciidoctor: WARNING: test-spring.adoc: line 274: invalid style for example block: INFO&#010;asciidoctor: WARNING: test-spring.adoc: line 303: section title out of sequence: expected&#010;level 2, got level 3&#010;asciidoctor: WARNING: test-spring.adoc: line 356: invalid style for example block: INFO&#010;asciidoctor: WARNING: test-spring.adoc: line 394: section title out of sequence: expected&#010;level 2, got level 3&#010;asciidoctor: WARNING: test-spring.adoc: line 417: section title out of sequence: expected&#010;level 2, got level 3&#010;asciidoctor: WARNING: test-spring.adoc: line 447: section title out of sequence: expected&#010;level 2, got level 3&#010;asciidoctor: WARNING: test-spring.adoc: line 471: section title out of sequence: expected&#010;level 2, got level 3&#010;[INFO] Converted 349 ascii documents to HTML&#010;[INFO] ================================================================================&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
578,582,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11160) Component docs - ascii doc warns,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064637.1492505952000.304222.1492507541675%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 09:25:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11160?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11160.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;&gt; Component docs - ascii doc warns&#010;&gt; --------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11160&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11160&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; [INFO] ================================================================================&#010;&gt; [INFO] Copying all Camel documents (ascii docs)&#010;&gt; [INFO] Found 349 ascii document files&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 44: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 136: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 213: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 258: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 287: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 327: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 384: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 415: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 460: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 474: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 486: list item index: expected 2, got&#010;1&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 492: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 81: section title out of sequence: expected&#010;level 2, got level 3&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 107: section title out of sequence: expected&#010;level 2, got level 3&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 245: invalid style for example block: INFO&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 274: invalid style for example block: INFO&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 303: section title out of sequence: expected&#010;level 2, got level 3&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 356: invalid style for example block: INFO&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 394: section title out of sequence: expected&#010;level 2, got level 3&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 417: section title out of sequence: expected&#010;level 2, got level 3&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 447: section title out of sequence: expected&#010;level 2, got level 3&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 471: section title out of sequence: expected&#010;level 2, got level 3&#010;&gt; [INFO] Converted 349 ascii documents to HTML&#010;&gt; [INFO] ================================================================================&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
579,583,,[jira] [Created] (CAMEL-11161) Service Call : allow to use properties to further customize the underlying camel component used to implement service-call concepts,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064637.1492505952000.304222.1492507541675%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 09:25:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11160?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11160.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;&gt; Component docs - ascii doc warns&#010;&gt; --------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11160&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11160&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: documentation&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; [INFO] ================================================================================&#010;&gt; [INFO] Copying all Camel documents (ascii docs)&#010;&gt; [INFO] Found 349 ascii document files&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 44: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 136: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 213: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 258: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 287: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 327: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 384: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 415: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 460: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 474: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 486: list item index: expected 2, got&#010;1&#010;&gt; asciidoctor: WARNING: ignite-component.adoc: line 492: section title out of sequence:&#010;expected level 2, got level 3&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 81: section title out of sequence: expected&#010;level 2, got level 3&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 107: section title out of sequence: expected&#010;level 2, got level 3&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 245: invalid style for example block: INFO&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 274: invalid style for example block: INFO&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 303: section title out of sequence: expected&#010;level 2, got level 3&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 356: invalid style for example block: INFO&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 394: section title out of sequence: expected&#010;level 2, got level 3&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 417: section title out of sequence: expected&#010;level 2, got level 3&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 447: section title out of sequence: expected&#010;level 2, got level 3&#010;&gt; asciidoctor: WARNING: test-spring.adoc: line 471: section title out of sequence: expected&#010;level 2, got level 3&#010;&gt; [INFO] Converted 349 ascii documents to HTML&#010;&gt; [INFO] ================================================================================&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
580,584,Luca Burgazzoli (JIRA),  [jira] [Created] (CAMEL-11161) Service Call : allow to use properties to further customize the underlying camel component used to implement service-call concepts,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064660.1492510699000.304643.1492510722119%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 10:18:42 GMT",Luca Burgazzoli created CAMEL-11161:&#010;---------------------------------------&#010;&#010;             Summary: Service Call : allow to use properties to further customize the underlying&#010;camel component used to implement service-call concepts&#010;                 Key: CAMEL-11161&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11161&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;            Reporter: Luca Burgazzoli&#010;            Assignee: Luca Burgazzoli&#010;             Fix For: 2.19.0&#010;&#010;&#010;As today the configuration via dsl of service call's concpetts (i.e. service discovery) is&#010;limited to the options we have hard coded into the dsl but it would be nice to leverage the&#010;available properties to further customize the underlying components.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
581,585,Luca Burgazzoli (JIRA),  [jira] [Work started] (CAMEL-11161) Service Call : allow to use properties to further customize the underlying camel component used to implement service-call concepts,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064660.1492510699000.305128.1492516721554%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 11:58:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11161?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Work on CAMEL-11161 started by Luca Burgazzoli.&#010;-----------------------------------------------&#010;&gt; Service Call : allow to use properties to further customize the underlying camel component&#010;used to implement service-call concepts&#010;&gt; ----------------------------------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11161&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11161&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; As today the configuration via dsl of service call's concpetts (i.e. service discovery)&#010;is limited to the options we have hard coded into the dsl but it would be nice to leverage&#010;the available properties to further customize the underlying components.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
582,586,Luca Burgazzoli (JIRA),  [jira] [Closed] (CAMEL-11161) Service Call : allow to use properties to further customize the underlying camel component used to implement service-call concepts,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064660.1492510699000.305325.1492519241560%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 12:40:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11161?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli closed CAMEL-11161.&#010;-----------------------------------&#010;    Resolution: Invalid&#010;&#010;Better have 1 to 1 mapping to options supported by the service call so you can have type-safe&#010;completion in ide and validation&#010;&#010;&gt; Service Call : allow to use properties to further customize the underlying camel component&#010;used to implement service-call concepts&#010;&gt; ----------------------------------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11161&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11161&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; As today the configuration via dsl of service call's concpetts (i.e. service discovery)&#010;is limited to the options we have hard coded into the dsl but it would be nice to leverage&#010;the available properties to further customize the underlying components.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
583,587,,[jira] [Created] (CAMEL-11162) camel-rest - Should we add content-type check for server side,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064660.1492510699000.305325.1492519241560%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 12:40:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11161?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli closed CAMEL-11161.&#010;-----------------------------------&#010;    Resolution: Invalid&#010;&#010;Better have 1 to 1 mapping to options supported by the service call so you can have type-safe&#010;completion in ide and validation&#010;&#010;&gt; Service Call : allow to use properties to further customize the underlying camel component&#010;used to implement service-call concepts&#010;&gt; ----------------------------------------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11161&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11161&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; As today the configuration via dsl of service call's concpetts (i.e. service discovery)&#010;is limited to the options we have hard coded into the dsl but it would be nice to leverage&#010;the available properties to further customize the underlying components.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
584,588,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11162) camel-rest - Should we add content-type check for server side,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064684.1492517629000.305209.1492517681637%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 12:14:41 GMT","Claus Ibsen created CAMEL-11162:&#010;-----------------------------------&#010;&#010;             Summary: camel-rest - Should we add content-type check for server side&#010;                 Key: CAMEL-11162&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11162&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.20.0&#010;&#010;&#010;For example setting up a rest-dsl which consumes application/json and then a client calls&#010;it with text/plain or application/xml, should we then automatic let rest consumer detect this&#010;and return a HTTP status 415 (unsuported media type)&#010;&#010;Not all the HTTP server components does this today, eg jetty etc. But when using restlet which&#010;is more natual REST it would do so.&#010;&#010;We could then add an option to turn this on|off. &#010;&#010;The check is only if the media-type is within the list that may have been specified on consumes&#010;in the rest-dsl.&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
585,589,,[jira] [Created] (CAMEL-11163) Add @Generated annotation in REST DSL Swagger generated code,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064684.1492517629000.305209.1492517681637%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 12:14:41 GMT","Claus Ibsen created CAMEL-11162:&#010;-----------------------------------&#010;&#010;             Summary: camel-rest - Should we add content-type check for server side&#010;                 Key: CAMEL-11162&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11162&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.20.0&#010;&#010;&#010;For example setting up a rest-dsl which consumes application/json and then a client calls&#010;it with text/plain or application/xml, should we then automatic let rest consumer detect this&#010;and return a HTTP status 415 (unsuported media type)&#010;&#010;Not all the HTTP server components does this today, eg jetty etc. But when using restlet which&#010;is more natual REST it would do so.&#010;&#010;We could then add an option to turn this on|off. &#010;&#010;The check is only if the media-type is within the list that may have been specified on consumes&#010;in the rest-dsl.&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
586,590,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11163) Add @Generated annotation in REST DSL Swagger generated code,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064693.1492521308000.305569.1492521341890%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 13:15:41 GMT",Zoran Regvart created CAMEL-11163:&#010;-------------------------------------&#010;&#010;             Summary: Add @Generated annotation in REST DSL Swagger generated code&#010;                 Key: CAMEL-11163&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11163&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: tooling&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;            Priority: Trivial&#010;&#010;&#010;REST DSL Swagger code generation should add {{@Generated}} annotation to the source code this&#010;will help IDEs and code analysis tools to treat the generated code as generated.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
587,591,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11163) Add @Generated annotation in REST DSL Swagger generated code,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064693.1492521308000.305582.1492521461631%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 13:17:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11163?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11163.&#010;-----------------------------------&#010;       Resolution: Implemented&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Add @Generated annotation in REST DSL Swagger generated code&#010;&gt; ------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11163&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11163&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; REST DSL Swagger code generation should add {{@Generated}} annotation to the source code&#010;this will help IDEs and code analysis tools to treat the generated code as generated.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
588,592,Zoran Regvart (JIRA),  [jira] [Reopened] (CAMEL-11163) Add @Generated annotation in REST DSL Swagger generated code,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064693.1492521308000.315761.1492591181591%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 08:39:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11163?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart reopened CAMEL-11163:&#010;-----------------------------------&#010;&#010;The {{date}} property on the {{@Generated}} annotation should be optional.&#010;&#010;&gt; Add @Generated annotation in REST DSL Swagger generated code&#010;&gt; ------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11163&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11163&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; REST DSL Swagger code generation should add {{@Generated}} annotation to the source code&#010;this will help IDEs and code analysis tools to treat the generated code as generated.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
589,593,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11163) Add @Generated annotation in REST DSL Swagger generated code,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064693.1492521308000.315801.1492591781564%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 08:49:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11163?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11163.&#010;-----------------------------------&#010;    Resolution: Fixed&#010;&#010;{{date}} member of {{@Generated}} annotation made optional and it's generation turned off&#010;by default&#010;&#010;&gt; Add @Generated annotation in REST DSL Swagger generated code&#010;&gt; ------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11163&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11163&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; REST DSL Swagger code generation should add {{@Generated}} annotation to the source code&#010;this will help IDEs and code analysis tools to treat the generated code as generated.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
590,594,,[jira] [Created] (CAMEL-11164) Add @Generated annotation Salesforce generated code,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064693.1492521308000.315801.1492591781564%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 08:49:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11163?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11163.&#010;-----------------------------------&#010;    Resolution: Fixed&#010;&#010;{{date}} member of {{@Generated}} annotation made optional and it's generation turned off&#010;by default&#010;&#010;&gt; Add @Generated annotation in REST DSL Swagger generated code&#010;&gt; ------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11163&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11163&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; REST DSL Swagger code generation should add {{@Generated}} annotation to the source code&#010;this will help IDEs and code analysis tools to treat the generated code as generated.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
591,595,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11164) Add @Generated annotation Salesforce generated code,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064723.1492525172000.306176.1492525181634%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 14:19:41 GMT",Zoran Regvart created CAMEL-11164:&#010;-------------------------------------&#010;&#010;             Summary: Add @Generated annotation Salesforce generated code&#010;                 Key: CAMEL-11164&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11164&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;            Priority: Trivial&#010;&#010;&#010;The Salesforce Maven plugin generates source code for data transfer objects (DTOs) that can&#010;be used to exchange data with the Salesforce API. To help IDEs and code analysis tools they&#010;should be annotated with {{@Generated}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
592,596,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11164) Add @Generated annotation Salesforce generated code,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064723.1492525172000.316254.1492595201704%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 09:46:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11164?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11164.&#010;-----------------------------------&#010;       Resolution: Implemented&#010;    Fix Version/s: 2.19.0&#010;&#010;Added {{@Generated}} annotation to DTO source code generated by Salesforce Maven plugin.&#010;&#010;&gt; Add @Generated annotation Salesforce generated code&#010;&gt; ---------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11164&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11164&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The Salesforce Maven plugin generates source code for data transfer objects (DTOs) that&#010;can be used to exchange data with the Salesforce API. To help IDEs and code analysis tools&#010;they should be annotated with {{@Generated}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
593,597,,[jira] [Created] (CAMEL-11165) Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064723.1492525172000.316254.1492595201704%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 09:46:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11164?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11164.&#010;-----------------------------------&#010;       Resolution: Implemented&#010;    Fix Version/s: 2.19.0&#010;&#010;Added {{@Generated}} annotation to DTO source code generated by Salesforce Maven plugin.&#010;&#010;&gt; Add @Generated annotation Salesforce generated code&#010;&gt; ---------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11164&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11164&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The Salesforce Maven plugin generates source code for data transfer objects (DTOs) that&#010;can be used to exchange data with the Salesforce API. To help IDEs and code analysis tools&#010;they should be annotated with {{@Generated}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
594,598,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11165) Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064724.1492525323000.306194.1492525361672%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 14:22:41 GMT",Zoran Regvart created CAMEL-11165:&#010;-------------------------------------&#010;&#010;             Summary: Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo&#010;                 Key: CAMEL-11165&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11165&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: tooling&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;            Priority: Trivial&#010;&#010;&#010;To help IDEs and code analysis tools classes generated by the Camel Maven plugin for Spring&#010;Boot configuration support should be annotated with {{@Generated}}.&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
595,599,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11165) Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064724.1492525323000.306505.1492526441536%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 14:40:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11165?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11165.&#010;-----------------------------------&#010;       Resolution: Implemented&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo&#010;&gt; ------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11165&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11165&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; To help IDEs and code analysis tools classes generated by the Camel Maven plugin for&#010;Spring Boot configuration support should be annotated with {{@Generated}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
596,600,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11165) Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064724.1492525323000.315126.1492585541584%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 07:05:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11165?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15974201#comment-15974201&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11165:&#010;-------------------------------------&#010;&#010;I dont think we should include timestamp as it causes the source files to change on each build,&#010;eg&#010;&#010;+    @Generated(value = ""org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo"",&#010;date = ""2017-04-19T07:04:18.056Z"")&#010;&#010;should just be&#010;&#010;+    @Generated(value = ""org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo"")&#010;&#010;&gt; Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo&#010;&gt; ------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11165&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11165&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; To help IDEs and code analysis tools classes generated by the Camel Maven plugin for&#010;Spring Boot configuration support should be annotated with {{@Generated}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
597,601,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11165) Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064724.1492525323000.315130.1492585601624%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 07:06:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11165?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15974202#comment-15974202&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11165:&#010;-------------------------------------&#010;&#010;The same for the other places it has been added.&#010;&#010;&gt; Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo&#010;&gt; ------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11165&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11165&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; To help IDEs and code analysis tools classes generated by the Camel Maven plugin for&#010;Spring Boot configuration support should be annotated with {{@Generated}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
598,602,Claus Ibsen (JIRA),  [jira] [Reopened] (CAMEL-11165) Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064724.1492525323000.315129.1492585601616%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 07:06:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11165?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reopened CAMEL-11165:&#010;---------------------------------&#010;&#010;&gt; Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo&#010;&gt; ------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11165&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11165&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; To help IDEs and code analysis tools classes generated by the Camel Maven plugin for&#010;Spring Boot configuration support should be annotated with {{@Generated}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
599,603,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11165) Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064724.1492525323000.315758.1492591121578%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 08:38:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11165?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11165.&#010;-----------------------------------&#010;    Resolution: Fixed&#010;&#010;The {{date}} annotation member was removed and the Spring Boot auto configuration source files&#010;have been updated.&#010;&#010;&gt; Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo&#010;&gt; ------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11165&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11165&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; To help IDEs and code analysis tools classes generated by the Camel Maven plugin for&#010;Spring Boot configuration support should be annotated with {{@Generated}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
600,604,,[jira] [Commented] (CAMEL-10948) Camel-hdfs2: initialDelay option is overwritten with default value,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13064724.1492525323000.315758.1492591121578%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 08:38:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11165?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11165.&#010;-----------------------------------&#010;    Resolution: Fixed&#010;&#010;The {{date}} annotation member was removed and the Spring Boot auto configuration source files&#010;have been updated.&#010;&#010;&gt; Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo&#010;&gt; ------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11165&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11165&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; To help IDEs and code analysis tools classes generated by the Camel Maven plugin for&#010;Spring Boot configuration support should be annotated with {{@Generated}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
601,605,Lyuben Milev (JIRA),  [jira] [Commented] (CAMEL-10948) Camel-hdfs2: initialDelay option is overwritten with default value,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048508.1488802579000.311106.1492550021739%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 21:13:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10948?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15973525#comment-15973525&#010;] &#010;&#010;Lyuben Milev commented on CAMEL-10948:&#010;--------------------------------------&#010;&#010;Hello, we had an issue running hdfs test.&#010;Reportedly it also fails in CI, although sure-fire doesn't treat it as error.&#010;&#010;This is an irc log:&#010;&#010;zregvart&gt; OneOneOneOne: I think this line should be removed&#010;           https://github.com/apache/camel/blob/master/components/camel-hdfs2/s&#010;           rc/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java#L44&#010;&#010;&gt; Camel-hdfs2: initialDelay option is overwritten with default value&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10948&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10948&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-hdfs2&#010;&gt;            Reporter: Andrea Cosentino&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need to use the same trick as the mail component in the consumer side.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
602,606,Zoran Regvart (JIRA),  [jira] [Commented] (CAMEL-10948) Camel-hdfs2: initialDelay option is overwritten with default value,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048508.1488802579000.311151.1492550142188%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 21:15:42 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10948?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15973531#comment-15973531&#010;] &#010;&#010;Zoran Regvart commented on CAMEL-10948:&#010;---------------------------------------&#010;&#010;[~ancosen] This seems to overwrite the URI parameter value given with default value, I think&#010;this [HdfsEndpoint.java#L44|https://github.com/apache/camel/blob/master/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java#L44]&#010;line needs to be removed as the {{initialDelay}} is already set to {{HdfsConsumer.DEFAULT_CONSUMER_INITIAL_DELAY}}&#010;in field initialization at [HdfsConfiguration.java#L74|https://github.com/apache/camel/blob/master/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsConfiguration.java#L74].&#010;The tests actually fail on CI (see [Build #1288 Console output|https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.fulltest.java8/1288/org.apache.camel$camel-hdfs2/console])&#010;but are not reported as failed, which is strange.&#010;It fails with:  {{\[ERROR\] There was a timeout or other error in the fork}}&#010;&#010;&gt; Camel-hdfs2: initialDelay option is overwritten with default value&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10948&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10948&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-hdfs2&#010;&gt;            Reporter: Andrea Cosentino&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need to use the same trick as the mail component in the consumer side.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
603,607,Andrea Cosentino (JIRA),  [jira] [Commented] (CAMEL-10948) Camel-hdfs2: initialDelay option is overwritten with default value,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048508.1488802579000.311168.1492550321660%40Atlassian.JIRA%3E,issues,"Tue, 18 Apr 2017 21:18:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10948?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15973536#comment-15973536&#010;] &#010;&#010;Andrea Cosentino commented on CAMEL-10948:&#010;------------------------------------------&#010;&#010;Thanks for spotting this. I will fix it tomorrow :-)&#010;&#010;&gt; Camel-hdfs2: initialDelay option is overwritten with default value&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10948&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10948&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-hdfs2&#010;&gt;            Reporter: Andrea Cosentino&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need to use the same trick as the mail component in the consumer side.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
604,608,Andrea Cosentino (JIRA),  [jira] [Commented] (CAMEL-10948) Camel-hdfs2: initialDelay option is overwritten with default value,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048508.1488802579000.315596.1492589441657%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 08:10:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10948?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15974288#comment-15974288&#010;] &#010;&#010;Andrea Cosentino commented on CAMEL-10948:&#010;------------------------------------------&#010;&#010;Fixed.&#010;&#010;&gt; Camel-hdfs2: initialDelay option is overwritten with default value&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10948&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10948&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-hdfs2&#010;&gt;            Reporter: Andrea Cosentino&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need to use the same trick as the mail component in the consumer side.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
605,609,,[jira] [Created] (CAMEL-11166) @Generated annotation and java 9 problem,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13048508.1488802579000.315596.1492589441657%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 08:10:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10948?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15974288#comment-15974288&#010;] &#010;&#010;Andrea Cosentino commented on CAMEL-10948:&#010;------------------------------------------&#010;&#010;Fixed.&#010;&#010;&gt; Camel-hdfs2: initialDelay option is overwritten with default value&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10948&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10948&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-hdfs2&#010;&gt;            Reporter: Andrea Cosentino&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; We need to use the same trick as the mail component in the consumer side.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
606,610,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11166) @Generated annotation and java 9 problem,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065011.1492588059000.315416.1492588061900%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 07:47:41 GMT",Claus Ibsen created CAMEL-11166:&#010;-----------------------------------&#010;&#010;             Summary: @Generated annotation and java 9 problem&#010;                 Key: CAMEL-11166&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11166&#010;             Project: Camel&#010;          Issue Type: Task&#010;            Reporter: Claus Ibsen&#010;&#010;&#010;Just noticed this on the JDK9 build&#010;&#010;[ERROR] -&gt; [Help 1]&#010;org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;(validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration:&#010;javax/annotation/Generated&#010;&#010;[~jpoth] do you have time to help look into this?&#010;&#010;It fails when building camel-core due a recent addition of adding `@generated` annotation&#010;to the generated source code for spring-boot starters and whatnot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
607,611,Zoran Regvart (JIRA),  [jira] [Assigned] (CAMEL-11166) @Generated annotation and java 9 problem,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065011.1492588059000.315466.1492588601548%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 07:56:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11166?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart reassigned CAMEL-11166:&#010;-------------------------------------&#010;&#010;    Assignee: Zoran Regvart&#010;&#010;&gt; @Generated annotation and java 9 problem&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11166&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11166&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;&#010;&gt; Just noticed this on the JDK9 build&#010;&gt; [ERROR] -&gt; [Help 1]&#010;&gt; org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;(validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration:&#010;javax/annotation/Generated&#010;&gt; [~jpoth] do you have time to help look into this?&#010;&gt; It fails when building camel-core due a recent addition of adding `@generated` annotation&#010;to the generated source code for spring-boot starters and whatnot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
608,612,John Poth (JIRA),  [jira] [Commented] (CAMEL-11166) @Generated annotation and java 9 problem,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065011.1492588059000.315526.1492588901781%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 08:01:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11166?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15974278#comment-15974278&#010;] &#010;&#010;John Poth commented on CAMEL-11166:&#010;-----------------------------------&#010;&#010;Sure, will try this out on the latest build.&#010;&#010;&gt; @Generated annotation and java 9 problem&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11166&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11166&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;&#010;&gt; Just noticed this on the JDK9 build&#010;&gt; [ERROR] -&gt; [Help 1]&#010;&gt; org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;(validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration:&#010;javax/annotation/Generated&#010;&gt; [~jpoth] do you have time to help look into this?&#010;&gt; It fails when building camel-core due a recent addition of adding `@generated` annotation&#010;to the generated source code for spring-boot starters and whatnot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
609,613,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11166) @Generated annotation and java 9 problem,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065011.1492588059000.316492.1492598021594%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 10:33:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11166?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15974432#comment-15974432&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11166:&#010;----------------------------------------&#010;&#010;GitHub user johnpoth opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1639&#010;&#010;    CAMEL-11166: make camel-package-maven-plugin work on Java 9&#010;&#010;    https://issues.apache.org/jira/browse/CAMEL-11166&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/johnpoth/camel CAMEL-11166&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1639.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1639&#010;    &#010;----&#010;commit 4f415029d7fb58976264ce22654b290053a84949&#010;Author: jpoth &lt;poth.john@gmail.com&gt;&#010;Date:   2017-04-19T10:32:06Z&#010;&#010;    CAMEL-11166: make camel-package-maven-plugin work on Java 9&#010;&#010;----&#010;&#010;&#010;&gt; @Generated annotation and java 9 problem&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11166&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11166&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;&#010;&gt; Just noticed this on the JDK9 build&#010;&gt; [ERROR] -&gt; [Help 1]&#010;&gt; org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;(validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration:&#010;javax/annotation/Generated&#010;&gt; [~jpoth] do you have time to help look into this?&#010;&gt; It fails when building camel-core due a recent addition of adding `@generated` annotation&#010;to the generated source code for spring-boot starters and whatnot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
610,614,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11166) @Generated annotation and java 9 problem,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065011.1492588059000.316528.1492599161616%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 10:52:41 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11166?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15974443#comment-15974443&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11166:&#010;----------------------------------------&#010;&#010;Github user asfgit closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1639&#010;&#010;&#010;&gt; @Generated annotation and java 9 problem&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11166&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11166&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;&#010;&gt; Just noticed this on the JDK9 build&#010;&gt; [ERROR] -&gt; [Help 1]&#010;&gt; org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;(validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration:&#010;javax/annotation/Generated&#010;&gt; [~jpoth] do you have time to help look into this?&#010;&gt; It fails when building camel-core due a recent addition of adding `@generated` annotation&#010;to the generated source code for spring-boot starters and whatnot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
611,615,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11166) @Generated annotation and java 9 problem,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065011.1492588059000.316552.1492599647969%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 11:00:47 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11166?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11166.&#010;-----------------------------------&#010;    Resolution: Fixed&#010;&#010;Great work [~jpoth]!&#010;&#010;&gt; @Generated annotation and java 9 problem&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11166&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11166&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: John Poth&#010;&gt;&#010;&gt; Just noticed this on the JDK9 build&#010;&gt; [ERROR] -&gt; [Help 1]&#010;&gt; org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;(validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration:&#010;javax/annotation/Generated&#010;&gt; [~jpoth] do you have time to help look into this?&#010;&gt; It fails when building camel-core due a recent addition of adding `@generated` annotation&#010;to the generated source code for spring-boot starters and whatnot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
612,616,Zoran Regvart (JIRA),  [jira] [Assigned] (CAMEL-11166) @Generated annotation and java 9 problem,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065011.1492588059000.316546.1492599647621%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 11:00:47 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11166?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart reassigned CAMEL-11166:&#010;-------------------------------------&#010;&#010;    Assignee: John Poth  (was: Zoran Regvart)&#010;&#010;&gt; @Generated annotation and java 9 problem&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11166&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11166&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: John Poth&#010;&gt;&#010;&gt; Just noticed this on the JDK9 build&#010;&gt; [ERROR] -&gt; [Help 1]&#010;&gt; org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;(validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration:&#010;javax/annotation/Generated&#010;&gt; [~jpoth] do you have time to help look into this?&#010;&gt; It fails when building camel-core due a recent addition of adding `@generated` annotation&#010;to the generated source code for spring-boot starters and whatnot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
613,617,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11166) @Generated annotation and java 9 problem,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065011.1492588059000.4264.1492680064138%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 09:21:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11166?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976357#comment-15976357&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11166:&#010;----------------------------------------&#010;&#010;GitHub user zregvart opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1643&#010;&#010;    CAMEL-11166 make camel-package-maven-plugin work on Java 9&#010;&#010;    I propose a different solution to [CAMEL-11166](https://issues.apache.org/jira/browse/CAMEL-11166).&#010;@johnpoth and @davsclaus can you take a look, thanks ðŸ¥‡ &#010;    &#010;    This changes the dependency to `javax.annotation:javax.annotation-api:1.3` from `javax.xml.ws:jaxws-api:2.2.11`&#010;to have a smaller footprint, and places the dependency on the plugin instead of in the parent&#010;POM.&#010;&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/zregvart/camel CAMEL-11166&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1643.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1643&#010;    &#010;----&#010;commit 0b5b3f71f61c1236e5100d3953c958bbc28e0fc1&#010;Author: Zoran Regvart &lt;zregvart@apache.org&gt;&#010;Date:   2017-04-20T09:04:01Z&#010;&#010;    CAMEL-11166 make camel-package-maven-plugin wor...&#010;    &#010;    ...k on Java 9&#010;    &#010;    This changes the dependency to&#010;    `javax.annotation:javax.annotation-api:1.3` from&#010;    `javax.xml.ws:jaxws-api:2.2.11` to have a smaller footprint, and places&#010;    the dependency on the plugin instead of in the parent POM.&#010;&#010;----&#010;&#010;&#010;&gt; @Generated annotation and java 9 problem&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11166&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11166&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: John Poth&#010;&gt;&#010;&gt; Just noticed this on the JDK9 build&#010;&gt; [ERROR] -&gt; [Help 1]&#010;&gt; org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;(validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration:&#010;javax/annotation/Generated&#010;&gt; [~jpoth] do you have time to help look into this?&#010;&gt; It fails when building camel-core due a recent addition of adding `@generated` annotation&#010;to the generated source code for spring-boot starters and whatnot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
614,618,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11166) @Generated annotation and java 9 problem,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065011.1492588059000.4862.1492684564110%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 10:36:04 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11166?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976466#comment-15976466&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11166:&#010;----------------------------------------&#010;&#010;Github user zregvart closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1643&#010;&#010;&#010;&gt; @Generated annotation and java 9 problem&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11166&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11166&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: John Poth&#010;&gt;&#010;&gt; Just noticed this on the JDK9 build&#010;&gt; [ERROR] -&gt; [Help 1]&#010;&gt; org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;(validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration:&#010;javax/annotation/Generated&#010;&gt; [~jpoth] do you have time to help look into this?&#010;&gt; It fails when building camel-core due a recent addition of adding `@generated` annotation&#010;to the generated source code for spring-boot starters and whatnot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
615,619,,[jira] [Created] (CAMEL-11167) Include Camel name in spring boot health check,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065011.1492588059000.4862.1492684564110%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 10:36:04 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11166?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976466#comment-15976466&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11166:&#010;----------------------------------------&#010;&#010;Github user zregvart closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1643&#010;&#010;&#010;&gt; @Generated annotation and java 9 problem&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11166&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11166&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: John Poth&#010;&gt;&#010;&gt; Just noticed this on the JDK9 build&#010;&gt; [ERROR] -&gt; [Help 1]&#010;&gt; org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;(validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration&#010;failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration:&#010;javax/annotation/Generated&#010;&gt; [~jpoth] do you have time to help look into this?&#010;&gt; It fails when building camel-core due a recent addition of adding `@generated` annotation&#010;to the generated source code for spring-boot starters and whatnot.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
616,620,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11167) Include Camel name in spring boot health check,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065026.1492592863000.315923.1492592921617%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 09:08:41 GMT","Claus Ibsen created CAMEL-11167:&#010;-----------------------------------&#010;&#010;             Summary: Include Camel name in spring boot health check&#010;                 Key: CAMEL-11167&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11167&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-spring-boot&#010;            Reporter: Claus Ibsen&#010;            Assignee: Claus Ibsen&#010;             Fix For: 2.19.0&#010;&#010;&#010;It can help see which Camel is being checked, currently we only see the version.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
617,621,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11167) Include Camel name in spring boot health check,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065026.1492592863000.316094.1492593401721%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 09:16:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11167?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11167.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Include Camel name in spring boot health check&#010;&gt; ----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11167&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11167&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-spring-boot&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; It can help see which Camel is being checked, currently we only see the version.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
618,622,,[jira] [Created] (CAMEL-11168) Add deprecationNote to @Metadata,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065026.1492592863000.316094.1492593401721%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 09:16:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11167?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11167.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Include Camel name in spring boot health check&#010;&gt; ----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11167&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11167&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-spring-boot&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; It can help see which Camel is being checked, currently we only see the version.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
619,623,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11168) Add deprecationNote to @Metadata,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065054.1492600432000.316629.1492600481532%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 11:14:41 GMT","Claus Ibsen created CAMEL-11168:&#010;-----------------------------------&#010;&#010;             Summary: Add deprecationNote to @Metadata&#010;                 Key: CAMEL-11168&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11168&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: tooling&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.20.0&#010;&#010;&#010;So we can add a note that can refer the user to something else, eg mina -&gt; mina2 etc. Then&#010;we can use the tooling to grab that note and add to the readme files etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
620,624,,[jira] [Assigned] (CAMEL-7519) camel-bindy - CSV unbinding does not escape embedded quote character,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065054.1492600432000.316629.1492600481532%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 11:14:41 GMT","Claus Ibsen created CAMEL-11168:&#010;-----------------------------------&#010;&#010;             Summary: Add deprecationNote to @Metadata&#010;                 Key: CAMEL-11168&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11168&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: tooling&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.20.0&#010;&#010;&#010;So we can add a note that can refer the user to something else, eg mina -&gt; mina2 etc. Then&#010;we can use the tooling to grab that note and add to the readme files etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
621,625,onder sezgin (JIRA),  [jira] [Assigned] (CAMEL-7519) camel-bindy - CSV unbinding does not escape embedded quote character,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12721833.1403061820000.316732.1492601861573%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 11:37:41 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-7519?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;onder sezgin reassigned CAMEL-7519:&#010;-----------------------------------&#010;&#010;    Assignee: onder sezgin&#010;&#010;&gt; camel-bindy - CSV unbinding does not escape embedded quote character&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-7519&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-7519&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-bindy&#010;&gt;            Reporter: James Birchfield&#010;&gt;            Assignee: onder sezgin&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; If you have String field that contains the same character (String) as the quote character,&#010;and quoting is set to true, the embedded character should be escaped.&#010;&gt; val s:String = ""\""foo\""""&#010;&gt; Bindy will unmarshal to the CSV stream """"foo"""",""..."",""..."",""..."",...&#010;&gt; it should be ""\""foo\"""",""..."",""..."",""..."",...&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
622,626,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-7519) camel-bindy - CSV unbinding does not escape embedded quote character,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12721833.1403061820000.316738.1492601921678%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 11:38:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-7519?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15974475#comment-15974475&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-7519:&#010;---------------------------------------&#010;&#010;GitHub user onders86 opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1640&#010;&#010;    CAMEL-7519 - new option quotingEscaped added for marshalling/unmarsha…&#010;&#010;    …lling with escape char and fix some typo&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/onders86/camel CAMEL-7519&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1640.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1640&#010;    &#010;----&#010;commit dea74cc06c6aca27102c8e4dfa0c3b5737892756&#010;Author: onders86 &lt;ondersezgin@gmail.com&gt;&#010;Date:   2017-04-19T11:34:05Z&#010;&#010;    CAMEL-7519 - new option quotingEscaped added for marshalling/unmarshalling with escape&#010;char and fix some typo&#010;&#010;----&#010;&#010;&#010;&gt; camel-bindy - CSV unbinding does not escape embedded quote character&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-7519&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-7519&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-bindy&#010;&gt;            Reporter: James Birchfield&#010;&gt;            Assignee: onder sezgin&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; If you have String field that contains the same character (String) as the quote character,&#010;and quoting is set to true, the embedded character should be escaped.&#010;&gt; val s:String = ""\""foo\""""&#010;&gt; Bindy will unmarshal to the CSV stream """"foo"""",""..."",""..."",""..."",...&#010;&gt; it should be ""\""foo\"""",""..."",""..."",""..."",...&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
623,627,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-7519) camel-bindy - CSV unbinding does not escape embedded quote character,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12721833.1403061820000.3603.1492673404477%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 07:30:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-7519?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-7519:&#010;-------------------------------&#010;    Fix Version/s:     (was: Future)&#010;                   2.19.0&#010;&#010;&gt; camel-bindy - CSV unbinding does not escape embedded quote character&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-7519&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-7519&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-bindy&#010;&gt;            Reporter: James Birchfield&#010;&gt;            Assignee: onder sezgin&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; If you have String field that contains the same character (String) as the quote character,&#010;and quoting is set to true, the embedded character should be escaped.&#010;&gt; val s:String = ""\""foo\""""&#010;&gt; Bindy will unmarshal to the CSV stream """"foo"""",""..."",""..."",""..."",...&#010;&gt; it should be ""\""foo\"""",""..."",""..."",""..."",...&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
624,628,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-7519) camel-bindy - CSV unbinding does not escape embedded quote character,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12721833.1403061820000.3758.1492674484562%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 07:48:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-7519?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-7519.&#010;--------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; camel-bindy - CSV unbinding does not escape embedded quote character&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-7519&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-7519&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-bindy&#010;&gt;            Reporter: James Birchfield&#010;&gt;            Assignee: onder sezgin&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; If you have String field that contains the same character (String) as the quote character,&#010;and quoting is set to true, the embedded character should be escaped.&#010;&gt; val s:String = ""\""foo\""""&#010;&gt; Bindy will unmarshal to the CSV stream """"foo"""",""..."",""..."",""..."",...&#010;&gt; it should be ""\""foo\"""",""..."",""..."",""..."",...&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
625,629,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-7519) camel-bindy - CSV unbinding does not escape embedded quote character,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12721833.1403061820000.3852.1492675564311%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 08:06:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-7519?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976278#comment-15976278&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-7519:&#010;---------------------------------------&#010;&#010;Github user onders86 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1640&#010;&#010;&#010;&gt; camel-bindy - CSV unbinding does not escape embedded quote character&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-7519&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-7519&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-bindy&#010;&gt;            Reporter: James Birchfield&#010;&gt;            Assignee: onder sezgin&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; If you have String field that contains the same character (String) as the quote character,&#010;and quoting is set to true, the embedded character should be escaped.&#010;&gt; val s:String = ""\""foo\""""&#010;&gt; Bindy will unmarshal to the CSV stream """"foo"""",""..."",""..."",""..."",...&#010;&gt; it should be ""\""foo\"""",""..."",""..."",""..."",...&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
626,630,,[jira] [Created] (CAMEL-11169) Create camel-example-swagger-spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12721833.1403061820000.3852.1492675564311%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 08:06:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-7519?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976278#comment-15976278&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-7519:&#010;---------------------------------------&#010;&#010;Github user onders86 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1640&#010;&#010;&#010;&gt; camel-bindy - CSV unbinding does not escape embedded quote character&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-7519&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-7519&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-bindy&#010;&gt;            Reporter: James Birchfield&#010;&gt;            Assignee: onder sezgin&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; If you have String field that contains the same character (String) as the quote character,&#010;and quoting is set to true, the embedded character should be escaped.&#010;&gt; val s:String = ""\""foo\""""&#010;&gt; Bindy will unmarshal to the CSV stream """"foo"""",""..."",""..."",""..."",...&#010;&gt; it should be ""\""foo\"""",""..."",""..."",""..."",...&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
627,631,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11169) Create camel-example-swagger-spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065091.1492608576000.317685.1492608582018%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 13:29:42 GMT",Claus Ibsen created CAMEL-11169:&#010;-----------------------------------&#010;&#010;             Summary: Create camel-example-swagger-spring-boot&#010;                 Key: CAMEL-11169&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11169&#010;             Project: Camel&#010;          Issue Type: Task&#010;          Components: examples&#010;            Reporter: Claus Ibsen&#010;&#010;&#010;So we have an example running on spring boot of&#010;https://github.com/apache/camel/tree/master/examples/camel-example-swagger-cdi&#010;&#010;There has been a report about swagger-java having a problem to run easily with spring boot.&#010;By having an example we can help ensure this.&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
628,632,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11169) Create camel-example-swagger-spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065091.1492608576000.317748.1492608881753%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 13:34:41 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11169?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11169:&#010;--------------------------------&#010;    Estimated Complexity: Novice  (was: Unknown)&#010;&#010;&gt; Create camel-example-swagger-spring-boot&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11169&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11169&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: examples&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;&#010;&gt; So we have an example running on spring boot of&#010;&gt; https://github.com/apache/camel/tree/master/examples/camel-example-swagger-cdi&#010;&gt; There has been a report about swagger-java having a problem to run easily with spring&#010;boot. By having an example we can help ensure this.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
629,633,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11169) Create camel-example-swagger-spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065091.1492608576000.3637.1492673584186%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 07:33:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11169?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976241#comment-15976241&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11169:&#010;-------------------------------------&#010;&#010;[~zregvart] wonder if you can want to create this example, so we can see how it works before&#010;we try to do the 2.19 release?&#010;&#010;&gt; Create camel-example-swagger-spring-boot&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11169&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11169&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: examples&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;&#010;&gt; So we have an example running on spring boot of&#010;&gt; https://github.com/apache/camel/tree/master/examples/camel-example-swagger-cdi&#010;&gt; There has been a report about swagger-java having a problem to run easily with spring&#010;boot. By having an example we can help ensure this.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
630,634,Zoran Regvart (JIRA),  [jira] [Assigned] (CAMEL-11169) Create camel-example-swagger-spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065091.1492608576000.3779.1492674664080%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 07:51:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11169?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart reassigned CAMEL-11169:&#010;-------------------------------------&#010;&#010;    Assignee: Zoran Regvart&#010;&#010;&gt; Create camel-example-swagger-spring-boot&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11169&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11169&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: examples&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;&#010;&gt; So we have an example running on spring boot of&#010;&gt; https://github.com/apache/camel/tree/master/examples/camel-example-swagger-cdi&#010;&gt; There has been a report about swagger-java having a problem to run easily with spring&#010;boot. By having an example we can help ensure this.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
631,635,Zoran Regvart (JIRA),  [jira] [Commented] (CAMEL-11169) Create camel-example-swagger-spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065091.1492608576000.3800.1492674844105%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 07:54:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11169?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976265#comment-15976265&#010;] &#010;&#010;Zoran Regvart commented on CAMEL-11169:&#010;---------------------------------------&#010;&#010;[~davsclaus] sure, this could showcase the {{camel-restdsl-swagger-plugin}} plugin under Spring&#010;Boot also.&#010;&#010;&gt; Create camel-example-swagger-spring-boot&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11169&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11169&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: examples&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;&#010;&gt; So we have an example running on spring boot of&#010;&gt; https://github.com/apache/camel/tree/master/examples/camel-example-swagger-cdi&#010;&gt; There has been a report about swagger-java having a problem to run easily with spring&#010;boot. By having an example we can help ensure this.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
632,636,Zoran Regvart (JIRA),  [jira] [Commented] (CAMEL-11169) Create camel-example-swagger-spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065091.1492608576000.5946.1492694644102%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 13:24:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11169?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976672#comment-15976672&#010;] &#010;&#010;Zoran Regvart commented on CAMEL-11169:&#010;---------------------------------------&#010;&#010;[~davsclaus] hmm, we have {{camel-example-spring-boot-rest-swagger}}, is a new example necessary?&#010;I think it showcases both REST and Swagger support well and works out of the box. I could&#010;create a new example for the Maven plugin, but there are integration tests there we can point&#010;users to.&#010;&#010;&gt; Create camel-example-swagger-spring-boot&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11169&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11169&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: examples&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;&#010;&gt; So we have an example running on spring boot of&#010;&gt; https://github.com/apache/camel/tree/master/examples/camel-example-swagger-cdi&#010;&gt; There has been a report about swagger-java having a problem to run easily with spring&#010;boot. By having an example we can help ensure this.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
633,637,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11169) Create camel-example-swagger-spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065091.1492608576000.6016.1492695304110%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 13:35:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11169?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976687#comment-15976687&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11169:&#010;-------------------------------------&#010;&#010;Ah yeah that is fine, forgot that Gregor already created one.&#010;&#010;&#010;&gt; Create camel-example-swagger-spring-boot&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11169&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11169&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: examples&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;&#010;&gt; So we have an example running on spring boot of&#010;&gt; https://github.com/apache/camel/tree/master/examples/camel-example-swagger-cdi&#010;&gt; There has been a report about swagger-java having a problem to run easily with spring&#010;boot. By having an example we can help ensure this.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
634,638,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11169) Create camel-example-swagger-spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065091.1492608576000.6159.1492696024211%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 13:47:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11169?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11169.&#010;---------------------------------&#010;       Resolution: Duplicate&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Create camel-example-swagger-spring-boot&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11169&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11169&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: examples&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; So we have an example running on spring boot of&#010;&gt; https://github.com/apache/camel/tree/master/examples/camel-example-swagger-cdi&#010;&gt; There has been a report about swagger-java having a problem to run easily with spring&#010;boot. By having an example we can help ensure this.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
635,639,,[jira] [Created] (CAMEL-11170) Service Call : add a spi for component to provide a custom expression to build the camel uri,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065091.1492608576000.6159.1492696024211%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 13:47:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11169?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11169.&#010;---------------------------------&#010;       Resolution: Duplicate&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Create camel-example-swagger-spring-boot&#010;&gt; ----------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11169&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11169&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: examples&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; So we have an example running on spring boot of&#010;&gt; https://github.com/apache/camel/tree/master/examples/camel-example-swagger-cdi&#010;&gt; There has been a report about swagger-java having a problem to run easily with spring&#010;boot. By having an example we can help ensure this.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
636,640,Luca Burgazzoli (JIRA),  [jira] [Created] (CAMEL-11170) Service Call : add a spi for component to provide a custom expression to build the camel uri,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065133.1492615162000.319055.1492615181693%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 15:19:41 GMT",Luca Burgazzoli created CAMEL-11170:&#010;---------------------------------------&#010;&#010;             Summary: Service Call : add a spi for component to provide a custom expression&#010;to build the camel uri&#010;                 Key: CAMEL-11170&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11170&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;            Reporter: Luca Burgazzoli&#010;            Assignee: Luca Burgazzoli&#010;             Fix For: 2.20.0&#010;&#010;&#010;As today the service call eip creates the an uri which is compatible with camel-http4 and&#010;has the form of component:host:port/path?options but if you want to use a different component&#010;like jetty/undertow you need to tweak also how the uri is created using the uri/expression&#010;directives as they expect the uri to be in the form component:http://host:port.&#010;&#010;It would be nice if the service call can use a spi/service-loader to provide its own expression&#010;so that a user needs to specify the component name only.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
637,641,Luca Burgazzoli (JIRA),  [jira] [Work started] (CAMEL-11170) Service Call : add a spi for component to provide a custom expression to build the camel uri,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065133.1492615162000.323014.1492635702248%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 21:01:42 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11170?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Work on CAMEL-11170 started by Luca Burgazzoli.&#010;-----------------------------------------------&#010;&gt; Service Call : add a spi for component to provide a custom expression to build the camel&#010;uri&#010;&gt; --------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11170&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11170&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; As today the service call eip creates the an uri which is compatible with camel-http4&#010;and has the form of component:host:port/path?options but if you want to use a different component&#010;like jetty/undertow you need to tweak also how the uri is created using the uri/expression&#010;directives as they expect the uri to be in the form component:http://host:port.&#010;&gt; It would be nice if the service call can use a spi/service-loader to provide its own&#010;expression so that a user needs to specify the component name only.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
638,642,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-11170) Service Call : add a spi for component to provide a custom expression to build the camel uri,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065133.1492615162000.3826.1492675264046%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 08:01:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11170?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-11170:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.20.0)&#010;                   2.19.0&#010;&#010;&gt; Service Call : add a spi for component to provide a custom expression to build the camel&#010;uri&#010;&gt; --------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11170&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11170&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; As today the service call eip creates the an uri which is compatible with camel-http4&#010;and has the form of component:host:port/path?options but if you want to use a different component&#010;like jetty/undertow you need to tweak also how the uri is created using the uri/expression&#010;directives as they expect the uri to be in the form component:http://host:port.&#010;&gt; It would be nice if the service call can use a spi/service-loader to provide its own&#010;expression so that a user needs to specify the component name only.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
639,643,Luca Burgazzoli (JIRA),  [jira] [Resolved] (CAMEL-11170) Service Call : add a spi for component to provide a custom expression to build the camel uri,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065133.1492615162000.3855.1492675744382%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 08:09:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11170?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-11170.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Service Call : add a spi for component to provide a custom expression to build the camel&#010;uri&#010;&gt; --------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11170&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11170&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; As today the service call eip creates the an uri which is compatible with camel-http4&#010;and has the form of component:host:port/path?options but if you want to use a different component&#010;like jetty/undertow you need to tweak also how the uri is created using the uri/expression&#010;directives as they expect the uri to be in the form component:http://host:port.&#010;&gt; It would be nice if the service call can use a spi/service-loader to provide its own&#010;expression so that a user needs to specify the component name only.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
640,644,,[jira] [Created] (CAMEL-11171) camel-zookeeper-master - RAW() and child endpoint issue,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065133.1492615162000.3855.1492675744382%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 08:09:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11170?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-11170.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Service Call : add a spi for component to provide a custom expression to build the camel&#010;uri&#010;&gt; --------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11170&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11170&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luca Burgazzoli&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; As today the service call eip creates the an uri which is compatible with camel-http4&#010;and has the form of component:host:port/path?options but if you want to use a different component&#010;like jetty/undertow you need to tweak also how the uri is created using the uri/expression&#010;directives as they expect the uri to be in the form component:http://host:port.&#010;&gt; It would be nice if the service call can use a spi/service-loader to provide its own&#010;expression so that a user needs to specify the component name only.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
641,645,Paolo Antinori (JIRA),  [jira] [Created] (CAMEL-11171) camel-zookeeper-master - RAW() and child endpoint issue,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065139.1492617311000.319414.1492617341802%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 15:55:41 GMT","Paolo Antinori created CAMEL-11171:&#010;--------------------------------------&#010;&#010;             Summary: camel-zookeeper-master - RAW() and child endpoint issue&#010;                 Key: CAMEL-11171&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11171&#010;             Project: Camel&#010;          Issue Type: Bug&#010;    Affects Versions: 2.18.3&#010;            Reporter: Paolo Antinori&#010;            Assignee: Luca Burgazzoli&#010;&#010;&#010;{{camel-zookeeper-master}} component has an issue with the usage of {{RAW()}} function in&#010;child endpoint configuration.&#010;&#010;{{zookeeper-master://name:sftp://myhost/inbox?password=RAW(_BEFORE_AMPERSAND_&amp;_AFTER_AMPERSAND_)&amp;username=jdoe}}&#010;will mishandle the the content of {{RAW()}} , when at some point the escaped ampersand symbol&#010;is unescaped, and a wrong set of parameters is used.&#010;&#010;The attached PR fixed the issues and adds a unit test to verify the behavior before and after&#010;the fix.&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
642,646,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11171) camel-zookeeper-master - RAW() and child endpoint issue,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065139.1492617311000.319447.1492617521805%40Atlassian.JIRA%3E,issues,"Wed, 19 Apr 2017 15:58:41 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11171?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15974958#comment-15974958&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11171:&#010;----------------------------------------&#010;&#010;GitHub user paoloantinori opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1642&#010;&#010;    CAMEL-11171 - camel-zookeeper-master, fix to support RAW() function&#010;&#010;    &#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/paoloantinori/camel CAMEL-11171&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1642.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1642&#010;    &#010;----&#010;commit 2cd3287e07c6e25976f5d87b8c6c5356ca8dc7a1&#010;Author: Paolo Antinori &lt;pantinor@redhat.com&gt;&#010;Date:   2017-04-19T15:56:40Z&#010;&#010;    CAMEL-11171 - camel-zookeeper-master, fix to support RAW() function&#010;&#010;----&#010;&#010;&#010;&gt; camel-zookeeper-master - RAW() and child endpoint issue&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11171&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11171&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Paolo Antinori&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;&#010;&gt; {{camel-zookeeper-master}} component has an issue with the usage of {{RAW()}} function&#010;in child endpoint configuration.&#010;&gt; {{zookeeper-master://name:sftp://myhost/inbox?password=RAW(_BEFORE_AMPERSAND_&amp;_AFTER_AMPERSAND_)&amp;username=jdoe}}&#010;will mishandle the the content of {{RAW()}} , when at some point the escaped ampersand symbol&#010;is unescaped, and a wrong set of parameters is used.&#010;&gt; The attached PR fixed the issues and adds a unit test to verify the behavior before and&#010;after the fix.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
643,647,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11171) camel-zookeeper-master - RAW() and child endpoint issue,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065139.1492617311000.3573.1492673344583%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 07:29:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11171?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11171:&#010;--------------------------------&#010;    Affects Version/s:     (was: 2.18.3)&#010;&#010;&gt; camel-zookeeper-master - RAW() and child endpoint issue&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11171&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11171&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Paolo Antinori&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-zookeeper-master}} component has an issue with the usage of {{RAW()}} function&#010;in child endpoint configuration.&#010;&gt; {{zookeeper-master://name:sftp://myhost/inbox?password=RAW(_BEFORE_AMPERSAND_&amp;_AFTER_AMPERSAND_)&amp;username=jdoe}}&#010;will mishandle the the content of {{RAW()}} , when at some point the escaped ampersand symbol&#010;is unescaped, and a wrong set of parameters is used.&#010;&gt; The attached PR fixed the issues and adds a unit test to verify the behavior before and&#010;after the fix.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
644,648,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11171) camel-zookeeper-master - RAW() and child endpoint issue,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065139.1492617311000.3590.1492673344720%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 07:29:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11171?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11171:&#010;--------------------------------&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; camel-zookeeper-master - RAW() and child endpoint issue&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11171&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11171&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Paolo Antinori&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-zookeeper-master}} component has an issue with the usage of {{RAW()}} function&#010;in child endpoint configuration.&#010;&gt; {{zookeeper-master://name:sftp://myhost/inbox?password=RAW(_BEFORE_AMPERSAND_&amp;_AFTER_AMPERSAND_)&amp;username=jdoe}}&#010;will mishandle the the content of {{RAW()}} , when at some point the escaped ampersand symbol&#010;is unescaped, and a wrong set of parameters is used.&#010;&gt; The attached PR fixed the issues and adds a unit test to verify the behavior before and&#010;after the fix.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
645,649,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11171) camel-zookeeper-master - RAW() and child endpoint issue,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065139.1492617311000.3587.1492673344695%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 07:29:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11171?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11171:&#010;--------------------------------&#010;    Affects Version/s: 2.19.0&#010;&#010;&gt; camel-zookeeper-master - RAW() and child endpoint issue&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11171&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11171&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Paolo Antinori&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-zookeeper-master}} component has an issue with the usage of {{RAW()}} function&#010;in child endpoint configuration.&#010;&gt; {{zookeeper-master://name:sftp://myhost/inbox?password=RAW(_BEFORE_AMPERSAND_&amp;_AFTER_AMPERSAND_)&amp;username=jdoe}}&#010;will mishandle the the content of {{RAW()}} , when at some point the escaped ampersand symbol&#010;is unescaped, and a wrong set of parameters is used.&#010;&gt; The attached PR fixed the issues and adds a unit test to verify the behavior before and&#010;after the fix.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
646,650,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11171) camel-zookeeper-master - RAW() and child endpoint issue,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065139.1492617311000.3775.1492674604338%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 07:50:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11171?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11171.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; camel-zookeeper-master - RAW() and child endpoint issue&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11171&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11171&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Paolo Antinori&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-zookeeper-master}} component has an issue with the usage of {{RAW()}} function&#010;in child endpoint configuration.&#010;&gt; {{zookeeper-master://name:sftp://myhost/inbox?password=RAW(_BEFORE_AMPERSAND_&amp;_AFTER_AMPERSAND_)&amp;username=jdoe}}&#010;will mishandle the the content of {{RAW()}} , when at some point the escaped ampersand symbol&#010;is unescaped, and a wrong set of parameters is used.&#010;&gt; The attached PR fixed the issues and adds a unit test to verify the behavior before and&#010;after the fix.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
647,651,Paolo Antinori (JIRA),  [jira] [Closed] (CAMEL-11171) camel-zookeeper-master - RAW() and child endpoint issue,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065139.1492617311000.3828.1492675324122%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 08:02:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11171?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Paolo Antinori closed CAMEL-11171.&#010;----------------------------------&#010;&#010;&gt; camel-zookeeper-master - RAW() and child endpoint issue&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11171&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11171&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Paolo Antinori&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-zookeeper-master}} component has an issue with the usage of {{RAW()}} function&#010;in child endpoint configuration.&#010;&gt; {{zookeeper-master://name:sftp://myhost/inbox?password=RAW(_BEFORE_AMPERSAND_&amp;_AFTER_AMPERSAND_)&amp;username=jdoe}}&#010;will mishandle the the content of {{RAW()}} , when at some point the escaped ampersand symbol&#010;is unescaped, and a wrong set of parameters is used.&#010;&gt; The attached PR fixed the issues and adds a unit test to verify the behavior before and&#010;after the fix.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
648,652,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11171) camel-zookeeper-master - RAW() and child endpoint issue,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065139.1492617311000.3837.1492675384168%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 08:03:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11171?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976275#comment-15976275&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11171:&#010;----------------------------------------&#010;&#010;Github user paoloantinori closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1642&#010;&#010;&#010;&gt; camel-zookeeper-master - RAW() and child endpoint issue&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11171&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11171&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Paolo Antinori&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-zookeeper-master}} component has an issue with the usage of {{RAW()}} function&#010;in child endpoint configuration.&#010;&gt; {{zookeeper-master://name:sftp://myhost/inbox?password=RAW(_BEFORE_AMPERSAND_&amp;_AFTER_AMPERSAND_)&amp;username=jdoe}}&#010;will mishandle the the content of {{RAW()}} , when at some point the escaped ampersand symbol&#010;is unescaped, and a wrong set of parameters is used.&#010;&gt; The attached PR fixed the issues and adds a unit test to verify the behavior before and&#010;after the fix.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
649,653,,[jira] [Created] (CAMEL-11172) Java 9 - camel-restdsl-swagger-plugin cannot compile,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065139.1492617311000.3837.1492675384168%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 08:03:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11171?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976275#comment-15976275&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11171:&#010;----------------------------------------&#010;&#010;Github user paoloantinori closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1642&#010;&#010;&#010;&gt; camel-zookeeper-master - RAW() and child endpoint issue&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11171&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11171&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Paolo Antinori&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; {{camel-zookeeper-master}} component has an issue with the usage of {{RAW()}} function&#010;in child endpoint configuration.&#010;&gt; {{zookeeper-master://name:sftp://myhost/inbox?password=RAW(_BEFORE_AMPERSAND_&amp;_AFTER_AMPERSAND_)&amp;username=jdoe}}&#010;will mishandle the the content of {{RAW()}} , when at some point the escaped ampersand symbol&#010;is unescaped, and a wrong set of parameters is used.&#010;&gt; The attached PR fixed the issues and adds a unit test to verify the behavior before and&#010;after the fix.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
650,654,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11172) Java 9 - camel-restdsl-swagger-plugin cannot compile,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065423.1492672756000.3464.1492672804020%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 07:20:04 GMT",Claus Ibsen created CAMEL-11172:&#010;-----------------------------------&#010;&#010;             Summary: Java 9 - camel-restdsl-swagger-plugin cannot compile&#010;                 Key: CAMEL-11172&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11172&#010;             Project: Camel&#010;          Issue Type: Task&#010;          Components: build system&#010;            Reporter: Claus Ibsen&#010;&#010;&#010;See the CI output&#010;https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/consoleText&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
651,655,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11172) Java 9 - camel-restdsl-swagger-plugin cannot compile,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065423.1492672756000.3465.1492672864121%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 07:21:04 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11172?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976219#comment-15976219&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11172:&#010;-------------------------------------&#010;&#010;[~zregvart] [~jpoth] there is a few more Java 9 issues.&#010;&#010;The camel-example-kotlin can also not compile. Maybe we can skip this on java 9 (its deprecated&#010;anyway)&#010;&#010;&gt; Java 9 - camel-restdsl-swagger-plugin cannot compile&#010;&gt; ----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11172&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11172&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;&#010;&gt; See the CI output&#010;&gt; https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/consoleText&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
652,656,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11172) Java 9 - camel-restdsl-swagger-plugin cannot compile,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065423.1492672756000.3476.1492672984123%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 07:23:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11172?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11172:&#010;--------------------------------&#010;    Affects Version/s: 2.19.0&#010;&#010;&gt; Java 9 - camel-restdsl-swagger-plugin cannot compile&#010;&gt; ----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11172&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11172&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0, 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; See the CI output&#010;&gt; https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/consoleText&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
653,657,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11172) Java 9 - camel-restdsl-swagger-plugin cannot compile,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065423.1492672756000.3480.1492672984157%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 07:23:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11172?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11172:&#010;--------------------------------&#010;    Fix Version/s: 2.20.0&#010;                   2.19.0&#010;&#010;&gt; Java 9 - camel-restdsl-swagger-plugin cannot compile&#010;&gt; ----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11172&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11172&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0, 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; See the CI output&#010;&gt; https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/consoleText&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
654,658,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11172) Java 9 - camel-restdsl-swagger-plugin fails integration test and camel-example-kotlin cannot compile,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065423.1492672756000.3481.1492672984164%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 07:23:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11172?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11172:&#010;--------------------------------&#010;    Summary: Java 9 - camel-restdsl-swagger-plugin fails integration test and camel-example-kotlin&#010;cannot compile  (was: Java 9 - camel-restdsl-swagger-plugin cannot compile)&#010;&#010;&gt; Java 9 - camel-restdsl-swagger-plugin fails integration test and camel-example-kotlin&#010;cannot compile&#010;&gt; ----------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11172&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11172&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0, 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; See the CI output&#010;&gt; https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/consoleText&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
655,659,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11172) Java 9 - camel-restdsl-swagger-plugin fails integration test and camel-example-kotlin cannot compile,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065423.1492672756000.3482.1492673044290%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 07:24:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11172?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976222#comment-15976222&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11172:&#010;-------------------------------------&#010;&#010;And there is some integration test failure in the new restdsl-swagger maven plugin.&#010;&#010;&gt; Java 9 - camel-restdsl-swagger-plugin fails integration test and camel-example-kotlin&#010;cannot compile&#010;&gt; ----------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11172&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11172&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0, 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; See the CI output&#010;&gt; https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/consoleText&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
656,660,John Poth (JIRA),  [jira] [Commented] (CAMEL-11172) Java 9 - camel-restdsl-swagger-plugin fails integration test and camel-example-kotlin cannot compile,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065423.1492672756000.3812.1492675084050%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 07:58:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11172?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976269#comment-15976269&#010;] &#010;&#010;John Poth commented on CAMEL-11172:&#010;-----------------------------------&#010;&#010;Hi [~cibsen@e-ma.net], I have the Kotlin fix ready locally (skip tests) along with some other&#010;fixes which I plan to push soon. Looks like the latest Java build broke a few things too,&#010;currently investigating failures.&#010;&#010;&gt; Java 9 - camel-restdsl-swagger-plugin fails integration test and camel-example-kotlin&#010;cannot compile&#010;&gt; ----------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11172&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11172&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0, 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; See the CI output&#010;&gt; https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/consoleText&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
657,661,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11172) Java 9 - camel-restdsl-swagger-plugin fails integration test and camel-example-kotlin cannot compile,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065423.1492672756000.16169.1492762504736%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 08:15:04 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11172?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978277#comment-15978277&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11172:&#010;-------------------------------------&#010;&#010;I fixed the kotlin example.&#010;&#010;&gt; Java 9 - camel-restdsl-swagger-plugin fails integration test and camel-example-kotlin&#010;cannot compile&#010;&gt; ----------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11172&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11172&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See the CI output&#010;&gt; https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/consoleText&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
658,662,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11172) Java 9 - camel-restdsl-swagger-plugin fails integration test and camel-example-kotlin cannot compile,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065423.1492672756000.16180.1492762504908%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 08:15:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11172?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11172:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.20.0)&#010;&#010;&gt; Java 9 - camel-restdsl-swagger-plugin fails integration test and camel-example-kotlin&#010;cannot compile&#010;&gt; ----------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11172&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11172&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See the CI output&#010;&gt; https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/consoleText&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
659,663,John Poth (JIRA),  [jira] [Commented] (CAMEL-11172) Java 9 - camel-restdsl-swagger-plugin fails integration test and camel-example-kotlin cannot compile,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065423.1492672756000.16275.1492762924329%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 08:22:04 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11172?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978297#comment-15978297&#010;] &#010;&#010;John Poth commented on CAMEL-11172:&#010;-----------------------------------&#010;&#010;Great! I think I'll have my fixes ready by the EOD.&#010;&#010;&gt; Java 9 - camel-restdsl-swagger-plugin fails integration test and camel-example-kotlin&#010;cannot compile&#010;&gt; ----------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11172&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11172&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See the CI output&#010;&gt; https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/consoleText&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
660,664,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11172) Java 9 - camel-restdsl-swagger-plugin fails integration test and camel-example-kotlin cannot compile,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065423.1492672756000.25274.1492846984261%40Atlassian.JIRA%3E,issues,"Sat, 22 Apr 2017 07:43:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11172?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11172.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;We have Johns fixes now&#010;&#010;&gt; Java 9 - camel-restdsl-swagger-plugin fails integration test and camel-example-kotlin&#010;cannot compile&#010;&gt; ----------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11172&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11172&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See the CI output&#010;&gt; https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/consoleText&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
661,665,,[jira] [Created] (CAMEL-11173) Integration tests for camel-restdsl-swagger-plugin fail on JDK 9,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065423.1492672756000.25274.1492846984261%40Atlassian.JIRA%3E,issues,"Sat, 22 Apr 2017 07:43:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11172?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11172.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;We have Johns fixes now&#010;&#010;&gt; Java 9 - camel-restdsl-swagger-plugin fails integration test and camel-example-kotlin&#010;cannot compile&#010;&gt; ----------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11172&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11172&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See the CI output&#010;&gt; https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/consoleText&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
662,666,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11173) Integration tests for camel-restdsl-swagger-plugin fail on JDK 9,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065437.1492677091000.3979.1492677124019%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 08:32:04 GMT","Zoran Regvart created CAMEL-11173:&#010;-------------------------------------&#010;&#010;             Summary: Integration tests for camel-restdsl-swagger-plugin fail on JDK 9&#010;                 Key: CAMEL-11173&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11173&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: tooling&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;&#010;&#010;The integration tests when run on JDK 9 fail with:&#010;{code}&#010;[INFO] --- maven-invoker-plugin:2.0.0:verify (integration-test) @ camel-restdsl-swagger-plugin&#010;---&#010;[INFO] -------------------------------------------------&#010;[INFO] Build Summary:&#010;[INFO]   Passed: 0, Failed: 2, Errors: 0, Skipped: 0&#010;[INFO] -------------------------------------------------&#010;[ERROR] The following builds failed:&#010;[ERROR] *  simple/pom.xml&#010;[ERROR] *  customized/pom.xml&#010;{code}&#010;&#010;See [build 185|https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/org.apache.camel$camel-restdsl-swagger-plugin/console]&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
663,667,Zoran Regvart (JIRA),  [jira] [Commented] (CAMEL-11173) Integration tests for camel-restdsl-swagger-plugin fail on JDK 9,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065437.1492677091000.4092.1492677844198%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 08:44:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11173?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976316#comment-15976316&#010;] &#010;&#010;Zoran Regvart commented on CAMEL-11173:&#010;---------------------------------------&#010;&#010;This is OK on in my environment, I run:&#010;{code}&#010;$ docker run -it -v $HOME/.m2:/tmp/.m2:z -v `pwd`:/w:z -u $(id -u):$(id -u):$(id -g) -e HOME=/tmp&#010;-e USER=$(whoami) -e MAVEN_OPTS=""-Xms3072m -Xmx3072m -Dmaven.artifact.threads=5 -Duser.home=/tmp""&#010;docker.io/maven:3.5.0-jdk-9 bash&#010;I have no name!@...:/$ cd /w/tooling/maven/camel-restdsl-swagger-plugin&#010;I have no name!@...:/w/tooling/maven/camel-restdsl-swagger-plugin$ mvn clean verify&#010;{code}&#010;&#010;Let's wait for the CI to pass to resolve this.&#010;&#010;&gt; Integration tests for camel-restdsl-swagger-plugin fail on JDK 9&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11173&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11173&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;&#010;&gt; The integration tests when run on JDK 9 fail with:&#010;&gt; {code}&#010;&gt; [INFO] --- maven-invoker-plugin:2.0.0:verify (integration-test) @ camel-restdsl-swagger-plugin&#010;---&#010;&gt; [INFO] -------------------------------------------------&#010;&gt; [INFO] Build Summary:&#010;&gt; [INFO]   Passed: 0, Failed: 2, Errors: 0, Skipped: 0&#010;&gt; [INFO] -------------------------------------------------&#010;&gt; [ERROR] The following builds failed:&#010;&gt; [ERROR] *  simple/pom.xml&#010;&gt; [ERROR] *  customized/pom.xml&#010;&gt; {code}&#010;&gt; See [build 185|https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/org.apache.camel$camel-restdsl-swagger-plugin/console]&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
664,668,Zoran Regvart (JIRA),  [jira] [Updated] (CAMEL-11173) Integration tests for camel-restdsl-swagger-plugin fail on JDK 9,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065437.1492677091000.4249.1492679944027%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 09:19:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11173?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart updated CAMEL-11173:&#010;----------------------------------&#010;    Affects Version/s: 2.19.0&#010;&#010;&gt; Integration tests for camel-restdsl-swagger-plugin fail on JDK 9&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11173&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11173&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: tooling&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;&#010;&gt; The integration tests when run on JDK 9 fail with:&#010;&gt; {code}&#010;&gt; [INFO] --- maven-invoker-plugin:2.0.0:verify (integration-test) @ camel-restdsl-swagger-plugin&#010;---&#010;&gt; [INFO] -------------------------------------------------&#010;&gt; [INFO] Build Summary:&#010;&gt; [INFO]   Passed: 0, Failed: 2, Errors: 0, Skipped: 0&#010;&gt; [INFO] -------------------------------------------------&#010;&gt; [ERROR] The following builds failed:&#010;&gt; [ERROR] *  simple/pom.xml&#010;&gt; [ERROR] *  customized/pom.xml&#010;&gt; {code}&#010;&gt; See [build 185|https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/org.apache.camel$camel-restdsl-swagger-plugin/console]&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
665,669,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11173) Integration tests for camel-restdsl-swagger-plugin fail on JDK 9,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065437.1492677091000.9267.1492711444092%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 18:04:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11173?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11173.&#010;-----------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.19.0&#010;       Regression: Unit Test Broken&#010;&#010;Fixed and verified in CI (see [build 189|https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/189/org.apache.camel$camel-restdsl-swagger-plugin/console])&#010;&#010;&gt; Integration tests for camel-restdsl-swagger-plugin fail on JDK 9&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11173&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11173&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: tooling&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The integration tests when run on JDK 9 fail with:&#010;&gt; {code}&#010;&gt; [INFO] --- maven-invoker-plugin:2.0.0:verify (integration-test) @ camel-restdsl-swagger-plugin&#010;---&#010;&gt; [INFO] -------------------------------------------------&#010;&gt; [INFO] Build Summary:&#010;&gt; [INFO]   Passed: 0, Failed: 2, Errors: 0, Skipped: 0&#010;&gt; [INFO] -------------------------------------------------&#010;&gt; [ERROR] The following builds failed:&#010;&gt; [ERROR] *  simple/pom.xml&#010;&gt; [ERROR] *  customized/pom.xml&#010;&gt; {code}&#010;&gt; See [build 185|https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/org.apache.camel$camel-restdsl-swagger-plugin/console]&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
666,670,,[jira] [Created] (CAMEL-11174) RSL support for Google Protobuf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065437.1492677091000.9267.1492711444092%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 18:04:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11173?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11173.&#010;-----------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.19.0&#010;       Regression: Unit Test Broken&#010;&#010;Fixed and verified in CI (see [build 189|https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/189/org.apache.camel$camel-restdsl-swagger-plugin/console])&#010;&#010;&gt; Integration tests for camel-restdsl-swagger-plugin fail on JDK 9&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11173&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11173&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: tooling&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The integration tests when run on JDK 9 fail with:&#010;&gt; {code}&#010;&gt; [INFO] --- maven-invoker-plugin:2.0.0:verify (integration-test) @ camel-restdsl-swagger-plugin&#010;---&#010;&gt; [INFO] -------------------------------------------------&#010;&gt; [INFO] Build Summary:&#010;&gt; [INFO]   Passed: 0, Failed: 2, Errors: 0, Skipped: 0&#010;&gt; [INFO] -------------------------------------------------&#010;&gt; [ERROR] The following builds failed:&#010;&gt; [ERROR] *  simple/pom.xml&#010;&gt; [ERROR] *  customized/pom.xml&#010;&gt; {code}&#010;&gt; See [build 185|https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.notest.java9/185/org.apache.camel$camel-restdsl-swagger-plugin/console]&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
667,671,Luis (JIRA),  [jira] [Created] (CAMEL-11174) RSL support for Google Protobuf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065466.1492682807000.4657.1492682824287%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 10:07:04 GMT","Luis created CAMEL-11174:&#010;----------------------------&#010;&#010;             Summary: RSL support for Google Protobuf&#010;                 Key: CAMEL-11174&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11174&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-core&#010;            Reporter: Luis&#010;&#010;&#010;It would be nice to be able to output something other that just XML/JSON&#010;from a camel rest dsl route, namely Google Protobuf or Apache thrift.&#010;The idea would be that one could have addional MIME types add one could define how they are&#010;handled.&#010;So for example application/x-protobuf could be handle by Protobuf.&#010;&#010;One example article that comes to mind is:&#010;https://javarants.com/using-jax-rs-with-protocol-buffers-for-high-performance-rest-apis-563ce40d15d9&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
668,672,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11174) REST-DSL support for Google Protobuf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065466.1492682807000.6170.1492696024307%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 13:47:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11174?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11174:&#010;--------------------------------&#010;    Summary: REST-DSL support for Google Protobuf  (was: RSL support for Google Protobuf)&#010;&#010;&gt; REST-DSL support for Google Protobuf&#010;&gt; ------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11174&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11174&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luis&#010;&gt;&#010;&gt; It would be nice to be able to output something other that just XML/JSON&#010;&gt; from a camel rest dsl route, namely Google Protobuf or Apache thrift.&#010;&gt; The idea would be that one could have addional MIME types add one could define how they&#010;are handled.&#010;&gt; So for example application/x-protobuf could be handle by Protobuf.&#010;&gt; One example article that comes to mind is:&#010;&gt; https://javarants.com/using-jax-rs-with-protocol-buffers-for-high-performance-rest-apis-563ce40d15d9&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
669,673,Dmitry Volodin (JIRA),  [jira] [Commented] (CAMEL-11174) REST-DSL support for Google Protobuf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065466.1492682807000.58042.1493229064326%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 17:51:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11174?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15985253#comment-15985253&#010;] &#010;&#010;Dmitry Volodin commented on CAMEL-11174:&#010;----------------------------------------&#010;&#010;Hi Luis!&#010;&#010;It's a not a good idea to overload core and rest-dsl subsystems with non-typical functions,&#010;i.e. marshal/unmarshal third-party binary formats, etc. As camel supports protobuf format&#010;OOB, you could create a very simple route like this for implementing described scenario:&#010;&lt;camelContext id=""camelContext-47e82289-6ff4-4210-a7f0-5e93f397b04a"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;    &lt;restConfiguration component=""restlet"" port=""8181""/&gt;&#010;    &lt;rest bindingMode=""off"" id=""_rest1"" path=""/test"" produces=""application/octetstream""&gt;&#010;        &lt;get uri=""/id""&gt;&#010;            &lt;to uri=""direct:test-id""/&gt;&#010;        &lt;/get&gt;&#010;    &lt;/rest&gt;&#010;    &lt;route id=""_route1""&gt;&#010;        &lt;from id=""_from1"" uri=""direct:test-id""/&gt;&#010;        &lt;bean id=""_bean1"" method=""buildPongResponse"" ref=""messageBuilder""/&gt;&#010;        &lt;marshal id=""_marshal1""&gt;&#010;            &lt;protobuf/&gt;&#010;        &lt;/marshal&gt;&#010;    &lt;/route&gt;&#010;&lt;/camelContext&gt;&#010;&#010;P.S. The gRPC or Thrift RPC are working much quickly, however your case is good example to&#010;be implemented as sample.  &#010;&#010;&gt; REST-DSL support for Google Protobuf&#010;&gt; ------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11174&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11174&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luis&#010;&gt;&#010;&gt; It would be nice to be able to output something other that just XML/JSON&#010;&gt; from a camel rest dsl route, namely Google Protobuf or Apache thrift.&#010;&gt; The idea would be that one could have addional MIME types add one could define how they&#010;are handled.&#010;&gt; So for example application/x-protobuf could be handle by Protobuf.&#010;&gt; One example article that comes to mind is:&#010;&gt; https://javarants.com/using-jax-rs-with-protocol-buffers-for-high-performance-rest-apis-563ce40d15d9&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
670,674,Dmitry Volodin (JIRA),  [jira] [Comment Edited] (CAMEL-11174) REST-DSL support for Google Protobuf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065466.1492682807000.58135.1493229904561%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 18:05:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11174?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15985253#comment-15985253&#010;] &#010;&#010;Dmitry Volodin edited comment on CAMEL-11174 at 4/26/17 6:05 PM:&#010;-----------------------------------------------------------------&#010;&#010;Hi Luis!&#010;&#010;It's a not a good idea to overload core and rest-dsl subsystems with non-typical functions,&#010;i.e. marshal/unmarshal third-party binary formats, etc. As camel supports protobuf format&#010;OOB, you could create a very simple route like this for implementing described scenario:&#010;{code:xml}&#010;&lt;camelContext id=""camelContext-47e82289-6ff4-4210-a7f0-5e93f397b04a"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;    &lt;restConfiguration component=""restlet"" port=""8181""/&gt;&#010;    &lt;rest bindingMode=""off"" id=""_rest1"" path=""/test"" produces=""application/octetstream""&gt;&#010;        &lt;get uri=""/id""&gt;&#010;            &lt;to uri=""direct:test-id""/&gt;&#010;        &lt;/get&gt;&#010;    &lt;/rest&gt;&#010;    &lt;route id=""_route1""&gt;&#010;        &lt;from id=""_from1"" uri=""direct:test-id""/&gt;&#010;        &lt;bean id=""_bean1"" method=""buildPongResponse"" ref=""messageBuilder""/&gt;&#010;        &lt;marshal id=""_marshal1""&gt;&#010;            &lt;protobuf/&gt;&#010;        &lt;/marshal&gt;&#010;    &lt;/route&gt;&#010;&lt;/camelContext&gt;&#010;{code}&#010;&#010;P.S. The gRPC or Thrift RPC are working much quickly, however your case is good example to&#010;be implemented as sample.  &#010;&#010;&#010;was (Author: dmvolod):&#010;Hi Luis!&#010;&#010;It's a not a good idea to overload core and rest-dsl subsystems with non-typical functions,&#010;i.e. marshal/unmarshal third-party binary formats, etc. As camel supports protobuf format&#010;OOB, you could create a very simple route like this for implementing described scenario:&#010;&lt;camelContext id=""camelContext-47e82289-6ff4-4210-a7f0-5e93f397b04a"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;    &lt;restConfiguration component=""restlet"" port=""8181""/&gt;&#010;    &lt;rest bindingMode=""off"" id=""_rest1"" path=""/test"" produces=""application/octetstream""&gt;&#010;        &lt;get uri=""/id""&gt;&#010;            &lt;to uri=""direct:test-id""/&gt;&#010;        &lt;/get&gt;&#010;    &lt;/rest&gt;&#010;    &lt;route id=""_route1""&gt;&#010;        &lt;from id=""_from1"" uri=""direct:test-id""/&gt;&#010;        &lt;bean id=""_bean1"" method=""buildPongResponse"" ref=""messageBuilder""/&gt;&#010;        &lt;marshal id=""_marshal1""&gt;&#010;            &lt;protobuf/&gt;&#010;        &lt;/marshal&gt;&#010;    &lt;/route&gt;&#010;&lt;/camelContext&gt;&#010;&#010;P.S. The gRPC or Thrift RPC are working much quickly, however your case is good example to&#010;be implemented as sample.  &#010;&#010;&gt; REST-DSL support for Google Protobuf&#010;&gt; ------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11174&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11174&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luis&#010;&gt;&#010;&gt; It would be nice to be able to output something other that just XML/JSON&#010;&gt; from a camel rest dsl route, namely Google Protobuf or Apache thrift.&#010;&gt; The idea would be that one could have addional MIME types add one could define how they&#010;are handled.&#010;&gt; So for example application/x-protobuf could be handle by Protobuf.&#010;&gt; One example article that comes to mind is:&#010;&gt; https://javarants.com/using-jax-rs-with-protocol-buffers-for-high-performance-rest-apis-563ce40d15d9&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
671,675,Dmitry Volodin (JIRA),  [jira] [Comment Edited] (CAMEL-11174) REST-DSL support for Google Protobuf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065466.1492682807000.59155.1493235424172%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 19:37:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11174?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15985253#comment-15985253&#010;] &#010;&#010;Dmitry Volodin edited comment on CAMEL-11174 at 4/26/17 7:36 PM:&#010;-----------------------------------------------------------------&#010;&#010;Hi Luis!&#010;&#010;It's not a good idea to overload core and rest-dsl subsystems with non-typical functions,&#010;i.e. marshal/unmarshal third-party binary formats, etc. As camel supports protobuf format&#010;OOB, you could create a very simple route like this for implementing described scenario:&#010;{code:xml}&#010;&lt;camelContext id=""camelContext-47e82289-6ff4-4210-a7f0-5e93f397b04a"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;    &lt;restConfiguration component=""restlet"" port=""8181""/&gt;&#010;    &lt;rest bindingMode=""off"" id=""_rest1"" path=""/test"" produces=""application/octetstream""&gt;&#010;        &lt;get uri=""/id""&gt;&#010;            &lt;to uri=""direct:test-id""/&gt;&#010;        &lt;/get&gt;&#010;    &lt;/rest&gt;&#010;    &lt;route id=""_route1""&gt;&#010;        &lt;from id=""_from1"" uri=""direct:test-id""/&gt;&#010;        &lt;bean id=""_bean1"" method=""buildPongResponse"" ref=""messageBuilder""/&gt;&#010;        &lt;marshal id=""_marshal1""&gt;&#010;            &lt;protobuf/&gt;&#010;        &lt;/marshal&gt;&#010;    &lt;/route&gt;&#010;&lt;/camelContext&gt;&#010;{code}&#010;&#010;P.S. The gRPC or Thrift RPC are working much faster, however your case is good example to&#010;be implemented as sample.  &#010;&#010;&#010;was (Author: dmvolod):&#010;Hi Luis!&#010;&#010;It's a not a good idea to overload core and rest-dsl subsystems with non-typical functions,&#010;i.e. marshal/unmarshal third-party binary formats, etc. As camel supports protobuf format&#010;OOB, you could create a very simple route like this for implementing described scenario:&#010;{code:xml}&#010;&lt;camelContext id=""camelContext-47e82289-6ff4-4210-a7f0-5e93f397b04a"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;    &lt;restConfiguration component=""restlet"" port=""8181""/&gt;&#010;    &lt;rest bindingMode=""off"" id=""_rest1"" path=""/test"" produces=""application/octetstream""&gt;&#010;        &lt;get uri=""/id""&gt;&#010;            &lt;to uri=""direct:test-id""/&gt;&#010;        &lt;/get&gt;&#010;    &lt;/rest&gt;&#010;    &lt;route id=""_route1""&gt;&#010;        &lt;from id=""_from1"" uri=""direct:test-id""/&gt;&#010;        &lt;bean id=""_bean1"" method=""buildPongResponse"" ref=""messageBuilder""/&gt;&#010;        &lt;marshal id=""_marshal1""&gt;&#010;            &lt;protobuf/&gt;&#010;        &lt;/marshal&gt;&#010;    &lt;/route&gt;&#010;&lt;/camelContext&gt;&#010;{code}&#010;&#010;P.S. The gRPC or Thrift RPC are working much quickly, however your case is good example to&#010;be implemented as sample.  &#010;&#010;&gt; REST-DSL support for Google Protobuf&#010;&gt; ------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11174&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11174&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luis&#010;&gt;&#010;&gt; It would be nice to be able to output something other that just XML/JSON&#010;&gt; from a camel rest dsl route, namely Google Protobuf or Apache thrift.&#010;&gt; The idea would be that one could have addional MIME types add one could define how they&#010;are handled.&#010;&gt; So for example application/x-protobuf could be handle by Protobuf.&#010;&gt; One example article that comes to mind is:&#010;&gt; https://javarants.com/using-jax-rs-with-protocol-buffers-for-high-performance-rest-apis-563ce40d15d9&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
672,676,Luis (JIRA),  [jira] [Commented] (CAMEL-11174) REST-DSL support for Google Protobuf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065466.1492682807000.67701.1493309464343%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 16:11:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11174?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986908#comment-15986908&#010;] &#010;&#010;Luis commented on CAMEL-11174:&#010;------------------------------&#010;&#010;Hi [~dmvolod]:&#010;&#010;This is cool I did not knew this, but the use case that I am also thinking of is to be able&#010;to expose the swagger documentation of a gRCP IDL via camel rest swagger interface.&#010;This already exists done by Google example is: &#010;#https://github.com/grpc-ecosystem/grpc-gateway&#010;#https://speakerdeck.com/thesandlord/grpc-vs-rest-api-strat-2016&#010;&#010;&#010;&#010;&gt; REST-DSL support for Google Protobuf&#010;&gt; ------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11174&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11174&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luis&#010;&gt;&#010;&gt; It would be nice to be able to output something other that just XML/JSON&#010;&gt; from a camel rest dsl route, namely Google Protobuf or Apache thrift.&#010;&gt; The idea would be that one could have addional MIME types add one could define how they&#010;are handled.&#010;&gt; So for example application/x-protobuf could be handle by Protobuf.&#010;&gt; One example article that comes to mind is:&#010;&gt; https://javarants.com/using-jax-rs-with-protocol-buffers-for-high-performance-rest-apis-563ce40d15d9&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
673,677,Luis (JIRA),  [jira] [Comment Edited] (CAMEL-11174) REST-DSL support for Google Protobuf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065466.1492682807000.67709.1493309524255%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 16:12:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11174?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986908#comment-15986908&#010;] &#010;&#010;Luis edited comment on CAMEL-11174 at 4/27/17 4:11 PM:&#010;-------------------------------------------------------&#010;&#010;Hi [~dmvolod]:&#010;&#010;This is cool I did not knew this, but the use case that I am also thinking of is to be able&#010;to expose the swagger documentation of a gRCP IDL via camel rest swagger interface.&#010;This already exists done by Google example is: &#010;* https://github.com/grpc-ecosystem/grpc-gateway&#010;* https://speakerdeck.com/thesandlord/grpc-vs-rest-api-strat-2016&#010;&#010;&#010;&#010;&#010;was (Author: luistrigueiros):&#010;Hi [~dmvolod]:&#010;&#010;This is cool I did not knew this, but the use case that I am also thinking of is to be able&#010;to expose the swagger documentation of a gRCP IDL via camel rest swagger interface.&#010;This already exists done by Google example is: &#010;#https://github.com/grpc-ecosystem/grpc-gateway&#010;#https://speakerdeck.com/thesandlord/grpc-vs-rest-api-strat-2016&#010;&#010;&#010;&#010;&gt; REST-DSL support for Google Protobuf&#010;&gt; ------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11174&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11174&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luis&#010;&gt;&#010;&gt; It would be nice to be able to output something other that just XML/JSON&#010;&gt; from a camel rest dsl route, namely Google Protobuf or Apache thrift.&#010;&gt; The idea would be that one could have addional MIME types add one could define how they&#010;are handled.&#010;&gt; So for example application/x-protobuf could be handle by Protobuf.&#010;&gt; One example article that comes to mind is:&#010;&gt; https://javarants.com/using-jax-rs-with-protocol-buffers-for-high-performance-rest-apis-563ce40d15d9&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
674,678,Dmitry Volodin (JIRA),  [jira] [Commented] (CAMEL-11174) REST-DSL support for Google Protobuf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065466.1492682807000.68348.1493312408855%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 17:00:08 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11174?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15987025#comment-15987025&#010;] &#010;&#010;Dmitry Volodin commented on CAMEL-11174:&#010;----------------------------------------&#010;&#010;Thanks for ideas Luis!&#010;As camel-grpc client component will be released as part of 2.19 build, we are working on the&#010;native server implementation now.&#010;Looks like a new camel-grpc-gateway component need to be implemented and integrated with swagger-rest-dsl-generator&#010;Please also note, that starting 2.19 camel-protobuf data format able to marshal/unmarshal&#010;from/to JSON in advance to binary data.&#010;&#010;&gt; REST-DSL support for Google Protobuf&#010;&gt; ------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11174&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11174&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luis&#010;&gt;&#010;&gt; It would be nice to be able to output something other that just XML/JSON&#010;&gt; from a camel rest dsl route, namely Google Protobuf or Apache thrift.&#010;&gt; The idea would be that one could have addional MIME types add one could define how they&#010;are handled.&#010;&gt; So for example application/x-protobuf could be handle by Protobuf.&#010;&gt; One example article that comes to mind is:&#010;&gt; https://javarants.com/using-jax-rs-with-protocol-buffers-for-high-performance-rest-apis-563ce40d15d9&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
675,679,Luis (JIRA),  [jira] [Commented] (CAMEL-11174) REST-DSL support for Google Protobuf,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065466.1492682807000.68430.1493312764068%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 17:06:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11174?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15987037#comment-15987037&#010;] &#010;&#010;Luis commented on CAMEL-11174:&#010;------------------------------&#010;&#010;Hi [~dmvolod]:&#010;&#010;If would love to have a go at testing this component for something I am working on as I already&#010;have the the service proto defintions.&#010;Many thanks, kindly&#010;  Luis Oscar&#010;&#010;&gt; REST-DSL support for Google Protobuf&#010;&gt; ------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11174&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11174&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luis&#010;&gt;&#010;&gt; It would be nice to be able to output something other that just XML/JSON&#010;&gt; from a camel rest dsl route, namely Google Protobuf or Apache thrift.&#010;&gt; The idea would be that one could have addional MIME types add one could define how they&#010;are handled.&#010;&gt; So for example application/x-protobuf could be handle by Protobuf.&#010;&gt; One example article that comes to mind is:&#010;&gt; https://javarants.com/using-jax-rs-with-protocol-buffers-for-high-performance-rest-apis-563ce40d15d9&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
676,680,,[jira] [Created] (CAMEL-11175) REST DSL Swagger generator default generated class/package names,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065466.1492682807000.68430.1493312764068%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 17:06:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11174?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15987037#comment-15987037&#010;] &#010;&#010;Luis commented on CAMEL-11174:&#010;------------------------------&#010;&#010;Hi [~dmvolod]:&#010;&#010;If would love to have a go at testing this component for something I am working on as I already&#010;have the the service proto defintions.&#010;Many thanks, kindly&#010;  Luis Oscar&#010;&#010;&gt; REST-DSL support for Google Protobuf&#010;&gt; ------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11174&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11174&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Luis&#010;&gt;&#010;&gt; It would be nice to be able to output something other that just XML/JSON&#010;&gt; from a camel rest dsl route, namely Google Protobuf or Apache thrift.&#010;&gt; The idea would be that one could have addional MIME types add one could define how they&#010;are handled.&#010;&gt; So for example application/x-protobuf could be handle by Protobuf.&#010;&gt; One example article that comes to mind is:&#010;&gt; https://javarants.com/using-jax-rs-with-protocol-buffers-for-high-performance-rest-apis-563ce40d15d9&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
677,681,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11175) REST DSL Swagger generator default generated class/package names,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065491.1492687535000.5146.1492687564020%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 11:26:04 GMT",Zoran Regvart created CAMEL-11175:&#010;-------------------------------------&#010;&#010;             Summary: REST DSL Swagger generator default generated class/package names&#010;                 Key: CAMEL-11175&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11175&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;&#010;&#010;REST DSL Swagger generator should do a better job of picking class and package names for the&#010;generated RouteBuilder source code.&#010;Currently packages that contain port numbers are possible (for instance {{localhost:8080}});&#010;and class names could end up being empty.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
678,682,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11175) REST DSL Swagger generator default generated class/package names,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065491.1492687535000.5156.1492687684095%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 11:28:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11175?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11175.&#010;-----------------------------------&#010;       Resolution: Implemented&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; REST DSL Swagger generator default generated class/package names&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11175&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11175&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; REST DSL Swagger generator should do a better job of picking class and package names&#010;for the generated RouteBuilder source code.&#010;&gt; Currently packages that contain port numbers are possible (for instance {{localhost:8080}});&#010;and class names could end up being empty.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
679,683,Zoran Regvart (JIRA),  [jira] [Updated] (CAMEL-11175) REST DSL Swagger generator default generated class/package names,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065491.1492687535000.5160.1492687684129%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 11:28:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11175?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart updated CAMEL-11175:&#010;----------------------------------&#010;    Priority: Trivial  (was: Major)&#010;&#010;&gt; REST DSL Swagger generator default generated class/package names&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11175&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11175&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; REST DSL Swagger generator should do a better job of picking class and package names&#010;for the generated RouteBuilder source code.&#010;&gt; Currently packages that contain port numbers are possible (for instance {{localhost:8080}});&#010;and class names could end up being empty.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
680,684,,[jira] [Created] (CAMEL-11176) Remove @Ignore on Camel Catalog Maven tests,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065491.1492687535000.5160.1492687684129%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 11:28:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11175?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart updated CAMEL-11175:&#010;----------------------------------&#010;    Priority: Trivial  (was: Major)&#010;&#010;&gt; REST DSL Swagger generator default generated class/package names&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11175&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11175&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; REST DSL Swagger generator should do a better job of picking class and package names&#010;for the generated RouteBuilder source code.&#010;&gt; Currently packages that contain port numbers are possible (for instance {{localhost:8080}});&#010;and class names could end up being empty.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
681,685,Aurelien Pupier (JIRA),  [jira] [Created] (CAMEL-11176) Remove @Ignore on Camel Catalog Maven tests,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065522.1492692523000.5752.1492692544253%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 12:49:04 GMT",Aurelien Pupier created CAMEL-11176:&#010;---------------------------------------&#010;&#010;             Summary: Remove @Ignore on Camel Catalog Maven tests&#010;                 Key: CAMEL-11176&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11176&#010;             Project: Camel&#010;          Issue Type: Task&#010;    Affects Versions: 2.19.0&#010;            Reporter: Aurelien Pupier&#010;&#010;&#010;they currently have several requirements to work that are not expressed in the code:&#010;- my-foo-connector&#010;- dummy-component&#010;- several versions of  Camel Catalog&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
682,686,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11176) Remove @Ignore on Camel Catalog Maven tests,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065522.1492692523000.16166.1492762444431%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 08:14:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11176?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11176:&#010;--------------------------------&#010;    Fix Version/s: Future&#010;&#010;&gt; Remove @Ignore on Camel Catalog Maven tests&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11176&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11176&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-catalog&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Aurelien Pupier&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; they currently have several requirements to work that are not expressed in the code:&#010;&gt; - my-foo-connector&#010;&gt; - dummy-component&#010;&gt; - several versions of  Camel Catalog&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
683,687,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11176) Remove @Ignore on Camel Catalog Maven tests,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065522.1492692523000.16162.1492762444398%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 08:14:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11176?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11176:&#010;--------------------------------&#010;    Priority: Minor  (was: Major)&#010;&#010;&gt; Remove @Ignore on Camel Catalog Maven tests&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11176&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11176&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-catalog&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Aurelien Pupier&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; they currently have several requirements to work that are not expressed in the code:&#010;&gt; - my-foo-connector&#010;&gt; - dummy-component&#010;&gt; - several versions of  Camel Catalog&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
684,688,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11176) Remove @Ignore on Camel Catalog Maven tests,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065522.1492692523000.16160.1492762444381%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 08:14:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11176?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11176:&#010;--------------------------------&#010;    Component/s: camel-catalog&#010;&#010;&gt; Remove @Ignore on Camel Catalog Maven tests&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11176&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11176&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-catalog&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Aurelien Pupier&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; they currently have several requirements to work that are not expressed in the code:&#010;&gt; - my-foo-connector&#010;&gt; - dummy-component&#010;&gt; - several versions of  Camel Catalog&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
685,689,,[jira] [Created] (CAMEL-11177) CoAP component starts redundant server instance,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065522.1492692523000.16160.1492762444381%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 08:14:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11176?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11176:&#010;--------------------------------&#010;    Component/s: camel-catalog&#010;&#010;&gt; Remove @Ignore on Camel Catalog Maven tests&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11176&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11176&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-catalog&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Aurelien Pupier&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; they currently have several requirements to work that are not expressed in the code:&#010;&gt; - my-foo-connector&#010;&gt; - dummy-component&#010;&gt; - several versions of  Camel Catalog&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
686,690,James Netherton (JIRA),  [jira] [Created] (CAMEL-11177) CoAP component starts redundant server instance,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065525.1492693031000.5809.1492693084132%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 12:58:04 GMT","James Netherton created CAMEL-11177:&#010;---------------------------------------&#010;&#010;             Summary: CoAP component starts redundant server instance&#010;                 Key: CAMEL-11177&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11177&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-coap&#010;    Affects Versions: 2.18.3, 2.19.0&#010;            Reporter: James Netherton&#010;&#010;&#010;If I configure a simple camel-coap consumer endpoint like:&#010;&#010;{code}&#010;from(""coap://localhost:8080/foo"")&#010;{code}&#010;&#010;Logging reveals that two server instances were started:&#010;&#010;{code}&#010;[org.eclipse.californium.core.network.CoapEndpoint] (pool-3-thread-1) Stopping endpoint at&#010;address 0.0.0.0/0.0.0.0:52697&#010;[org.eclipse.californium.core.network.CoapEndpoint] (pool-3-thread-1) Stopping endpoint at&#010;address 0.0.0.0/0.0.0.0:8080 &#010;{code}&#010;&#010;[This|https://github.com/apache/camel/blob/master/components/camel-coap/src/main/java/org/apache/camel/coap/CoAPComponent.java#L148-L153]&#010;appears to be the logic that causes the behaviour. &#010;&#010;Do we need it? It seems to be a duplicate of what already happens in {{createConsumer()}}.&#010;Also, the creation of a default server can easily be done in the {{createServer()}} method,&#010;I don't think we need it in {{doStart()}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
687,691,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11177) CoAP component starts redundant server instance,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065525.1492693031000.6163.1492696024243%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 13:47:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11177?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976716#comment-15976716&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11177:&#010;-------------------------------------&#010;&#010;Yeah that code seems odd, you are welcome to provide a PR&#010;&#010;&gt; CoAP component starts redundant server instance&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11177&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11177&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.18.3, 2.19.0&#010;&gt;            Reporter: James Netherton&#010;&gt;&#010;&gt; If I configure a simple camel-coap consumer endpoint like:&#010;&gt; {code}&#010;&gt; from(""coap://localhost:8080/foo"")&#010;&gt; {code}&#010;&gt; Logging reveals that two server instances were started:&#010;&gt; {code}&#010;&gt; [org.eclipse.californium.core.network.CoapEndpoint] (pool-3-thread-1) Stopping endpoint&#010;at address 0.0.0.0/0.0.0.0:52697&#010;&gt; [org.eclipse.californium.core.network.CoapEndpoint] (pool-3-thread-1) Stopping endpoint&#010;at address 0.0.0.0/0.0.0.0:8080 &#010;&gt; {code}&#010;&gt; [This|https://github.com/apache/camel/blob/master/components/camel-coap/src/main/java/org/apache/camel/coap/CoAPComponent.java#L148-L153]&#010;appears to be the logic that causes the behaviour. &#010;&gt; Do we need it? It seems to be a duplicate of what already happens in {{createConsumer()}}.&#010;Also, the creation of a default server can easily be done in the {{createServer()}} method,&#010;I don't think we need it in {{doStart()}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
688,692,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11177) CoAP component starts redundant server instance,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065525.1492693031000.7830.1492703764367%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 15:56:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11177?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976950#comment-15976950&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11177:&#010;----------------------------------------&#010;&#010;GitHub user jamesnetherton opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1647&#010;&#010;    CAMEL-11177: CoAP component starts redundant server instance&#010;&#010;    &#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/jamesnetherton/camel CAMEL-11177&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1647.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1647&#010;    &#010;----&#010;commit 0ff5785a9e6034d8452cb1021b054211955ccebb&#010;Author: James Netherton &lt;jamesnetherton@gmail.com&gt;&#010;Date:   2017-04-20T15:31:54Z&#010;&#010;    CAMEL-11177: CoAP component starts redundant server instance&#010;&#010;----&#010;&#010;&#010;&gt; CoAP component starts redundant server instance&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11177&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11177&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.18.3, 2.19.0&#010;&gt;            Reporter: James Netherton&#010;&gt;&#010;&gt; If I configure a simple camel-coap consumer endpoint like:&#010;&gt; {code}&#010;&gt; from(""coap://localhost:8080/foo"")&#010;&gt; {code}&#010;&gt; Logging reveals that two server instances were started:&#010;&gt; {code}&#010;&gt; [org.eclipse.californium.core.network.CoapEndpoint] (pool-3-thread-1) Stopping endpoint&#010;at address 0.0.0.0/0.0.0.0:52697&#010;&gt; [org.eclipse.californium.core.network.CoapEndpoint] (pool-3-thread-1) Stopping endpoint&#010;at address 0.0.0.0/0.0.0.0:8080 &#010;&gt; {code}&#010;&gt; [This|https://github.com/apache/camel/blob/master/components/camel-coap/src/main/java/org/apache/camel/coap/CoAPComponent.java#L148-L153]&#010;appears to be the logic that causes the behaviour. &#010;&gt; Do we need it? It seems to be a duplicate of what already happens in {{createConsumer()}}.&#010;Also, the creation of a default server can easily be done in the {{createServer()}} method,&#010;I don't think we need it in {{doStart()}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
689,693,Andrea Cosentino (JIRA),  [jira] [Assigned] (CAMEL-11177) CoAP component starts redundant server instance,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065525.1492693031000.9929.1492715464082%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 19:11:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11177?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino reassigned CAMEL-11177:&#010;----------------------------------------&#010;&#010;    Assignee: Andrea Cosentino&#010;&#010;&gt; CoAP component starts redundant server instance&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11177&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11177&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.18.3, 2.19.0&#010;&gt;            Reporter: James Netherton&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;&#010;&gt; If I configure a simple camel-coap consumer endpoint like:&#010;&gt; {code}&#010;&gt; from(""coap://localhost:8080/foo"")&#010;&gt; {code}&#010;&gt; Logging reveals that two server instances were started:&#010;&gt; {code}&#010;&gt; [org.eclipse.californium.core.network.CoapEndpoint] (pool-3-thread-1) Stopping endpoint&#010;at address 0.0.0.0/0.0.0.0:52697&#010;&gt; [org.eclipse.californium.core.network.CoapEndpoint] (pool-3-thread-1) Stopping endpoint&#010;at address 0.0.0.0/0.0.0.0:8080 &#010;&gt; {code}&#010;&gt; [This|https://github.com/apache/camel/blob/master/components/camel-coap/src/main/java/org/apache/camel/coap/CoAPComponent.java#L148-L153]&#010;appears to be the logic that causes the behaviour. &#010;&gt; Do we need it? It seems to be a duplicate of what already happens in {{createConsumer()}}.&#010;Also, the creation of a default server can easily be done in the {{createServer()}} method,&#010;I don't think we need it in {{doStart()}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
690,694,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11177) CoAP component starts redundant server instance,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065525.1492693031000.15851.1492759204156%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 07:20:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11177?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978210#comment-15978210&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11177:&#010;----------------------------------------&#010;&#010;Github user asfgit closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1647&#010;&#010;&#010;&gt; CoAP component starts redundant server instance&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11177&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11177&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.18.3, 2.19.0&#010;&gt;            Reporter: James Netherton&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;&#010;&gt; If I configure a simple camel-coap consumer endpoint like:&#010;&gt; {code}&#010;&gt; from(""coap://localhost:8080/foo"")&#010;&gt; {code}&#010;&gt; Logging reveals that two server instances were started:&#010;&gt; {code}&#010;&gt; [org.eclipse.californium.core.network.CoapEndpoint] (pool-3-thread-1) Stopping endpoint&#010;at address 0.0.0.0/0.0.0.0:52697&#010;&gt; [org.eclipse.californium.core.network.CoapEndpoint] (pool-3-thread-1) Stopping endpoint&#010;at address 0.0.0.0/0.0.0.0:8080 &#010;&gt; {code}&#010;&gt; [This|https://github.com/apache/camel/blob/master/components/camel-coap/src/main/java/org/apache/camel/coap/CoAPComponent.java#L148-L153]&#010;appears to be the logic that causes the behaviour. &#010;&gt; Do we need it? It seems to be a duplicate of what already happens in {{createConsumer()}}.&#010;Also, the creation of a default server can easily be done in the {{createServer()}} method,&#010;I don't think we need it in {{doStart()}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
691,695,Andrea Cosentino (JIRA),  [jira] [Updated] (CAMEL-11177) CoAP component starts redundant server instance,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065525.1492693031000.15864.1492759264388%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 07:21:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11177?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino updated CAMEL-11177:&#010;-------------------------------------&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; CoAP component starts redundant server instance&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11177&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11177&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.18.3, 2.19.0&#010;&gt;            Reporter: James Netherton&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; If I configure a simple camel-coap consumer endpoint like:&#010;&gt; {code}&#010;&gt; from(""coap://localhost:8080/foo"")&#010;&gt; {code}&#010;&gt; Logging reveals that two server instances were started:&#010;&gt; {code}&#010;&gt; [org.eclipse.californium.core.network.CoapEndpoint] (pool-3-thread-1) Stopping endpoint&#010;at address 0.0.0.0/0.0.0.0:52697&#010;&gt; [org.eclipse.californium.core.network.CoapEndpoint] (pool-3-thread-1) Stopping endpoint&#010;at address 0.0.0.0/0.0.0.0:8080 &#010;&gt; {code}&#010;&gt; [This|https://github.com/apache/camel/blob/master/components/camel-coap/src/main/java/org/apache/camel/coap/CoAPComponent.java#L148-L153]&#010;appears to be the logic that causes the behaviour. &#010;&gt; Do we need it? It seems to be a duplicate of what already happens in {{createConsumer()}}.&#010;Also, the creation of a default server can easily be done in the {{createServer()}} method,&#010;I don't think we need it in {{doStart()}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
692,696,Andrea Cosentino (JIRA),  [jira] [Resolved] (CAMEL-11177) CoAP component starts redundant server instance,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065525.1492693031000.15868.1492759264421%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 07:21:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11177?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino resolved CAMEL-11177.&#010;--------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; CoAP component starts redundant server instance&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11177&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11177&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.18.3, 2.19.0&#010;&gt;            Reporter: James Netherton&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; If I configure a simple camel-coap consumer endpoint like:&#010;&gt; {code}&#010;&gt; from(""coap://localhost:8080/foo"")&#010;&gt; {code}&#010;&gt; Logging reveals that two server instances were started:&#010;&gt; {code}&#010;&gt; [org.eclipse.californium.core.network.CoapEndpoint] (pool-3-thread-1) Stopping endpoint&#010;at address 0.0.0.0/0.0.0.0:52697&#010;&gt; [org.eclipse.californium.core.network.CoapEndpoint] (pool-3-thread-1) Stopping endpoint&#010;at address 0.0.0.0/0.0.0.0:8080 &#010;&gt; {code}&#010;&gt; [This|https://github.com/apache/camel/blob/master/components/camel-coap/src/main/java/org/apache/camel/coap/CoAPComponent.java#L148-L153]&#010;appears to be the logic that causes the behaviour. &#010;&gt; Do we need it? It seems to be a duplicate of what already happens in {{createConsumer()}}.&#010;Also, the creation of a default server can easily be done in the {{createServer()}} method,&#010;I don't think we need it in {{doStart()}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
693,697,,[jira] [Created] (CAMEL-11178) Default method is invisible during Camel Simple evaluation,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065525.1492693031000.15868.1492759264421%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 07:21:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11177?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Andrea Cosentino resolved CAMEL-11177.&#010;--------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; CoAP component starts redundant server instance&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11177&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11177&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.18.3, 2.19.0&#010;&gt;            Reporter: James Netherton&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; If I configure a simple camel-coap consumer endpoint like:&#010;&gt; {code}&#010;&gt; from(""coap://localhost:8080/foo"")&#010;&gt; {code}&#010;&gt; Logging reveals that two server instances were started:&#010;&gt; {code}&#010;&gt; [org.eclipse.californium.core.network.CoapEndpoint] (pool-3-thread-1) Stopping endpoint&#010;at address 0.0.0.0/0.0.0.0:52697&#010;&gt; [org.eclipse.californium.core.network.CoapEndpoint] (pool-3-thread-1) Stopping endpoint&#010;at address 0.0.0.0/0.0.0.0:8080 &#010;&gt; {code}&#010;&gt; [This|https://github.com/apache/camel/blob/master/components/camel-coap/src/main/java/org/apache/camel/coap/CoAPComponent.java#L148-L153]&#010;appears to be the logic that causes the behaviour. &#010;&gt; Do we need it? It seems to be a duplicate of what already happens in {{createConsumer()}}.&#010;Also, the creation of a default server can easily be done in the {{createServer()}} method,&#010;I don't think we need it in {{doStart()}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
694,698,Anton Sulim (JIRA),  [jira] [Created] (CAMEL-11178) Default method is invisible during Camel Simple evaluation,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065535.1492694609000.5945.1492694644092%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 13:24:04 GMT","Anton Sulim created CAMEL-11178:&#010;-----------------------------------&#010;&#010;             Summary: Default method is invisible during Camel Simple evaluation&#010;                 Key: CAMEL-11178&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11178&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-core&#010;    Affects Versions: 2.16.1&#010;            Reporter: Anton Sulim&#010;&#010;&#010;Issue can be reproduced with below unit test, I have not found it in tracker. &#010;Essence: interface A has default method, interface B extends A, default method is invisible&#010;during Simple language evaluation. &#010;&#010;{code:java}&#010;import org.apache.camel.CamelContext;&#010;import org.apache.camel.Exchange;&#010;import org.apache.camel.builder.RouteBuilder;&#010;import org.apache.camel.impl.DefaultCamelContext;&#010;import org.apache.camel.impl.DefaultExchange;&#010;import org.junit.Assert;&#010;import org.junit.Test;&#010;&#010;public class DefaultMethodIsInvisibleTest {&#010;&#010;    public static interface A {&#010;        public default String defaultMethod() {&#010;            return ""default method result"";&#010;        }&#010;    }&#010;&#010;    public static interface B extends A {&#010;    }&#010;&#010;    @Test&#010;    public void camelSimpleDoesNotSeeDefaultMethod() throws Exception {&#010;        CamelContext context = new DefaultCamelContext();&#010;        context.addRoutes(new RouteBuilder() {&#010;            public void configure() {&#010;                from(""direct:camelSimpleDoesNotSeeDefaultMethod"").log(""Result of default method&#010;invocation is ${exchangeProperty.myObject.defaultMethod}"");&#010;            }&#010;        });&#010;        context.start();&#010;&#010;        Exchange incomingExchange = new DefaultExchange(context);&#010;        incomingExchange.setProperty(""myObject"", new B() {&#010;        });&#010;&#010;        Exchange result = context.createProducerTemplate().send(""direct:camelSimpleDoesNotSeeDefaultMethod"",&#010;incomingExchange);&#010;&#010;        Assert.assertNull(result.getException());&#010;    }&#010;&#010;}&#010;{code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
695,699,Anton Sulim (JIRA),  [jira] [Updated] (CAMEL-11178) Default method is invisible during Camel Simple evaluation,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065535.1492694609000.6027.1492695364592%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 13:36:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11178?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Anton Sulim updated CAMEL-11178:&#010;--------------------------------&#010;    Description: &#010;Issue can be reproduced with below unit test, I have not found it in tracker. &#010;Essence: interface A has default method, interface B extends A, default method is invisible&#010;during Simple language evaluation. &#010;&#010;{code:java}&#010;import org.apache.camel.CamelContext;&#010;import org.apache.camel.Exchange;&#010;import org.apache.camel.builder.RouteBuilder;&#010;import org.apache.camel.impl.DefaultCamelContext;&#010;import org.apache.camel.impl.DefaultExchange;&#010;import org.junit.Assert;&#010;import org.junit.Test;&#010;&#010;public class DefaultMethodIsInvisibleTest {&#010;&#010;    public static interface A {&#010;        public default String defaultMethod() {&#010;            return ""default method result"";&#010;        }&#010;    }&#010;&#010;    public static interface B extends A {&#010;    }&#010;&#010;    @Test&#010;    public void camelSimpleDoesNotSeeDefaultMethod() throws Exception {&#010;        CamelContext context = new DefaultCamelContext();&#010;        context.addRoutes(new RouteBuilder() {&#010;            public void configure() {&#010;                from(""direct:camelSimpleDoesNotSeeDefaultMethod"").log(""Result of default method&#010;invocation is ${exchangeProperty.myObject.defaultMethod}"");&#010;            }&#010;        });&#010;        context.start();&#010;&#010;        Exchange incomingExchange = new DefaultExchange(context);&#010;        incomingExchange.setProperty(""myObject"", new B() {&#010;        });&#010;&#010;        Exchange result = context.createProducerTemplate().send(""direct:camelSimpleDoesNotSeeDefaultMethod"",&#010;incomingExchange);&#010;&#010;        Assert.assertNull(result.getException());&#010;    }&#010;&#010;}&#010;{code}&#010;&#010;Stacktrace:&#010;{code}&#010;Caused by: org.apache.camel.language.bean.RuntimeBeanExpressionException: Failed to invoke&#010;method: defaultMethod on null due to: org.apache.camel.component.bean.MethodNotFoundException:&#010;Method with name: defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;    at org.apache.camel.language.bean.BeanExpression$OgnlInvokeProcessor.process(BeanExpression.java:290)&#010;    at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:114)&#010;    ... 46 common frames omitted&#010;Caused by: org.apache.camel.component.bean.MethodNotFoundException: Method with name: defaultMethod&#010;not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;    at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:269)&#010;    at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:183)&#010;    at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:159)&#010;{code}&#010;&#010;  was:&#010;Issue can be reproduced with below unit test, I have not found it in tracker. &#010;Essence: interface A has default method, interface B extends A, default method is invisible&#010;during Simple language evaluation. &#010;&#010;{code:java}&#010;import org.apache.camel.CamelContext;&#010;import org.apache.camel.Exchange;&#010;import org.apache.camel.builder.RouteBuilder;&#010;import org.apache.camel.impl.DefaultCamelContext;&#010;import org.apache.camel.impl.DefaultExchange;&#010;import org.junit.Assert;&#010;import org.junit.Test;&#010;&#010;public class DefaultMethodIsInvisibleTest {&#010;&#010;    public static interface A {&#010;        public default String defaultMethod() {&#010;            return ""default method result"";&#010;        }&#010;    }&#010;&#010;    public static interface B extends A {&#010;    }&#010;&#010;    @Test&#010;    public void camelSimpleDoesNotSeeDefaultMethod() throws Exception {&#010;        CamelContext context = new DefaultCamelContext();&#010;        context.addRoutes(new RouteBuilder() {&#010;            public void configure() {&#010;                from(""direct:camelSimpleDoesNotSeeDefaultMethod"").log(""Result of default method&#010;invocation is ${exchangeProperty.myObject.defaultMethod}"");&#010;            }&#010;        });&#010;        context.start();&#010;&#010;        Exchange incomingExchange = new DefaultExchange(context);&#010;        incomingExchange.setProperty(""myObject"", new B() {&#010;        });&#010;&#010;        Exchange result = context.createProducerTemplate().send(""direct:camelSimpleDoesNotSeeDefaultMethod"",&#010;incomingExchange);&#010;&#010;        Assert.assertNull(result.getException());&#010;    }&#010;&#010;}&#010;{code}&#010;&#010;&#010;&gt; Default method is invisible during Camel Simple evaluation&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11178&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11178&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Anton Sulim&#010;&gt;&#010;&gt; Issue can be reproduced with below unit test, I have not found it in tracker. &#010;&gt; Essence: interface A has default method, interface B extends A, default method is invisible&#010;during Simple language evaluation. &#010;&gt; {code:java}&#010;&gt; import org.apache.camel.CamelContext;&#010;&gt; import org.apache.camel.Exchange;&#010;&gt; import org.apache.camel.builder.RouteBuilder;&#010;&gt; import org.apache.camel.impl.DefaultCamelContext;&#010;&gt; import org.apache.camel.impl.DefaultExchange;&#010;&gt; import org.junit.Assert;&#010;&gt; import org.junit.Test;&#010;&gt; public class DefaultMethodIsInvisibleTest {&#010;&gt;     public static interface A {&#010;&gt;         public default String defaultMethod() {&#010;&gt;             return ""default method result"";&#010;&gt;         }&#010;&gt;     }&#010;&gt;     public static interface B extends A {&#010;&gt;     }&#010;&gt;     @Test&#010;&gt;     public void camelSimpleDoesNotSeeDefaultMethod() throws Exception {&#010;&gt;         CamelContext context = new DefaultCamelContext();&#010;&gt;         context.addRoutes(new RouteBuilder() {&#010;&gt;             public void configure() {&#010;&gt;                 from(""direct:camelSimpleDoesNotSeeDefaultMethod"").log(""Result of default&#010;method invocation is ${exchangeProperty.myObject.defaultMethod}"");&#010;&gt;             }&#010;&gt;         });&#010;&gt;         context.start();&#010;&gt;         Exchange incomingExchange = new DefaultExchange(context);&#010;&gt;         incomingExchange.setProperty(""myObject"", new B() {&#010;&gt;         });&#010;&gt;         Exchange result = context.createProducerTemplate().send(""direct:camelSimpleDoesNotSeeDefaultMethod"",&#010;incomingExchange);&#010;&gt;         Assert.assertNull(result.getException());&#010;&gt;     }&#010;&gt; }&#010;&gt; {code}&#010;&gt; Stacktrace:&#010;&gt; {code}&#010;&gt; Caused by: org.apache.camel.language.bean.RuntimeBeanExpressionException: Failed to invoke&#010;method: defaultMethod on null due to: org.apache.camel.component.bean.MethodNotFoundException:&#010;Method with name: defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.language.bean.BeanExpression$OgnlInvokeProcessor.process(BeanExpression.java:290)&#010;&gt;     at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:114)&#010;&gt;     ... 46 common frames omitted&#010;&gt; Caused by: org.apache.camel.component.bean.MethodNotFoundException: Method with name:&#010;defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:269)&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:183)&#010;&gt;     at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:159)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
696,700,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11178) Default method is invisible during Camel Simple evaluation,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065535.1492694609000.6127.1492695784738%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 13:43:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11178?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15976707#comment-15976707&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11178:&#010;-------------------------------------&#010;&#010;Can you try with latest 2.18.3 release as 2.16.x is EOL and no longer supported.&#010;&#010;&gt; Default method is invisible during Camel Simple evaluation&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11178&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11178&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Anton Sulim&#010;&gt;&#010;&gt; Issue can be reproduced with below unit test, I have not found it in tracker. &#010;&gt; Essence: interface A has default method, interface B extends A, default method is invisible&#010;during Simple language evaluation. &#010;&gt; {code:java}&#010;&gt; import org.apache.camel.CamelContext;&#010;&gt; import org.apache.camel.Exchange;&#010;&gt; import org.apache.camel.builder.RouteBuilder;&#010;&gt; import org.apache.camel.impl.DefaultCamelContext;&#010;&gt; import org.apache.camel.impl.DefaultExchange;&#010;&gt; import org.junit.Assert;&#010;&gt; import org.junit.Test;&#010;&gt; public class DefaultMethodIsInvisibleTest {&#010;&gt;     public static interface A {&#010;&gt;         public default String defaultMethod() {&#010;&gt;             return ""default method result"";&#010;&gt;         }&#010;&gt;     }&#010;&gt;     public static interface B extends A {&#010;&gt;     }&#010;&gt;     @Test&#010;&gt;     public void camelSimpleDoesNotSeeDefaultMethod() throws Exception {&#010;&gt;         CamelContext context = new DefaultCamelContext();&#010;&gt;         context.addRoutes(new RouteBuilder() {&#010;&gt;             public void configure() {&#010;&gt;                 from(""direct:camelSimpleDoesNotSeeDefaultMethod"").log(""Result of default&#010;method invocation is ${exchangeProperty.myObject.defaultMethod}"");&#010;&gt;             }&#010;&gt;         });&#010;&gt;         context.start();&#010;&gt;         Exchange incomingExchange = new DefaultExchange(context);&#010;&gt;         incomingExchange.setProperty(""myObject"", new B() {&#010;&gt;         });&#010;&gt;         Exchange result = context.createProducerTemplate().send(""direct:camelSimpleDoesNotSeeDefaultMethod"",&#010;incomingExchange);&#010;&gt;         Assert.assertNull(result.getException());&#010;&gt;     }&#010;&gt; }&#010;&gt; {code}&#010;&gt; Stacktrace:&#010;&gt; {code}&#010;&gt; Caused by: org.apache.camel.language.bean.RuntimeBeanExpressionException: Failed to invoke&#010;method: defaultMethod on null due to: org.apache.camel.component.bean.MethodNotFoundException:&#010;Method with name: defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.language.bean.BeanExpression$OgnlInvokeProcessor.process(BeanExpression.java:290)&#010;&gt;     at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:114)&#010;&gt;     ... 46 common frames omitted&#010;&gt; Caused by: org.apache.camel.component.bean.MethodNotFoundException: Method with name:&#010;defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:269)&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:183)&#010;&gt;     at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:159)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
697,701,Anton Sulim (JIRA),  [jira] [Commented] (CAMEL-11178) Default method is invisible during Camel Simple evaluation,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065535.1492694609000.11942.1492724764331%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 21:46:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11178?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15977600#comment-15977600&#010;] &#010;&#010;Anton Sulim commented on CAMEL-11178:&#010;-------------------------------------&#010;&#010;Yes, it works with 2.18.3.&#010;&#010;&gt; Default method is invisible during Camel Simple evaluation&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11178&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11178&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Anton Sulim&#010;&gt;&#010;&gt; Issue can be reproduced with below unit test, I have not found it in tracker. &#010;&gt; Essence: interface A has default method, interface B extends A, default method is invisible&#010;during Simple language evaluation. &#010;&gt; {code:java}&#010;&gt; import org.apache.camel.CamelContext;&#010;&gt; import org.apache.camel.Exchange;&#010;&gt; import org.apache.camel.builder.RouteBuilder;&#010;&gt; import org.apache.camel.impl.DefaultCamelContext;&#010;&gt; import org.apache.camel.impl.DefaultExchange;&#010;&gt; import org.junit.Assert;&#010;&gt; import org.junit.Test;&#010;&gt; public class DefaultMethodIsInvisibleTest {&#010;&gt;     public static interface A {&#010;&gt;         public default String defaultMethod() {&#010;&gt;             return ""default method result"";&#010;&gt;         }&#010;&gt;     }&#010;&gt;     public static interface B extends A {&#010;&gt;     }&#010;&gt;     @Test&#010;&gt;     public void camelSimpleDoesNotSeeDefaultMethod() throws Exception {&#010;&gt;         CamelContext context = new DefaultCamelContext();&#010;&gt;         context.addRoutes(new RouteBuilder() {&#010;&gt;             public void configure() {&#010;&gt;                 from(""direct:camelSimpleDoesNotSeeDefaultMethod"").log(""Result of default&#010;method invocation is ${exchangeProperty.myObject.defaultMethod}"");&#010;&gt;             }&#010;&gt;         });&#010;&gt;         context.start();&#010;&gt;         Exchange incomingExchange = new DefaultExchange(context);&#010;&gt;         incomingExchange.setProperty(""myObject"", new B() {&#010;&gt;         });&#010;&gt;         Exchange result = context.createProducerTemplate().send(""direct:camelSimpleDoesNotSeeDefaultMethod"",&#010;incomingExchange);&#010;&gt;         Assert.assertNull(result.getException());&#010;&gt;     }&#010;&gt; }&#010;&gt; {code}&#010;&gt; Stacktrace:&#010;&gt; {code}&#010;&gt; Caused by: org.apache.camel.language.bean.RuntimeBeanExpressionException: Failed to invoke&#010;method: defaultMethod on null due to: org.apache.camel.component.bean.MethodNotFoundException:&#010;Method with name: defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.language.bean.BeanExpression$OgnlInvokeProcessor.process(BeanExpression.java:290)&#010;&gt;     at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:114)&#010;&gt;     ... 46 common frames omitted&#010;&gt; Caused by: org.apache.camel.component.bean.MethodNotFoundException: Method with name:&#010;defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:269)&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:183)&#010;&gt;     at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:159)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
698,702,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11178) Default method is invisible during Camel Simple evaluation,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065535.1492694609000.16147.1492762324137%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 08:12:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11178?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978273#comment-15978273&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11178:&#010;-------------------------------------&#010;&#010;Okay that is fine then you likely need to upgrade to have it working for you. It may also&#010;work on latest 2.17.x but I dont know.&#010;&#010;&gt; Default method is invisible during Camel Simple evaluation&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11178&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11178&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Anton Sulim&#010;&gt;&#010;&gt; Issue can be reproduced with below unit test, I have not found it in tracker. &#010;&gt; Essence: interface A has default method, interface B extends A, default method is invisible&#010;during Simple language evaluation. &#010;&gt; {code:java}&#010;&gt; import org.apache.camel.CamelContext;&#010;&gt; import org.apache.camel.Exchange;&#010;&gt; import org.apache.camel.builder.RouteBuilder;&#010;&gt; import org.apache.camel.impl.DefaultCamelContext;&#010;&gt; import org.apache.camel.impl.DefaultExchange;&#010;&gt; import org.junit.Assert;&#010;&gt; import org.junit.Test;&#010;&gt; public class DefaultMethodIsInvisibleTest {&#010;&gt;     public static interface A {&#010;&gt;         public default String defaultMethod() {&#010;&gt;             return ""default method result"";&#010;&gt;         }&#010;&gt;     }&#010;&gt;     public static interface B extends A {&#010;&gt;     }&#010;&gt;     @Test&#010;&gt;     public void camelSimpleDoesNotSeeDefaultMethod() throws Exception {&#010;&gt;         CamelContext context = new DefaultCamelContext();&#010;&gt;         context.addRoutes(new RouteBuilder() {&#010;&gt;             public void configure() {&#010;&gt;                 from(""direct:camelSimpleDoesNotSeeDefaultMethod"").log(""Result of default&#010;method invocation is ${exchangeProperty.myObject.defaultMethod}"");&#010;&gt;             }&#010;&gt;         });&#010;&gt;         context.start();&#010;&gt;         Exchange incomingExchange = new DefaultExchange(context);&#010;&gt;         incomingExchange.setProperty(""myObject"", new B() {&#010;&gt;         });&#010;&gt;         Exchange result = context.createProducerTemplate().send(""direct:camelSimpleDoesNotSeeDefaultMethod"",&#010;incomingExchange);&#010;&gt;         Assert.assertNull(result.getException());&#010;&gt;     }&#010;&gt; }&#010;&gt; {code}&#010;&gt; Stacktrace:&#010;&gt; {code}&#010;&gt; Caused by: org.apache.camel.language.bean.RuntimeBeanExpressionException: Failed to invoke&#010;method: defaultMethod on null due to: org.apache.camel.component.bean.MethodNotFoundException:&#010;Method with name: defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.language.bean.BeanExpression$OgnlInvokeProcessor.process(BeanExpression.java:290)&#010;&gt;     at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:114)&#010;&gt;     ... 46 common frames omitted&#010;&gt; Caused by: org.apache.camel.component.bean.MethodNotFoundException: Method with name:&#010;defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:269)&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:183)&#010;&gt;     at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:159)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
699,703,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11178) Default method is invisible during Camel Simple evaluation,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065535.1492694609000.19651.1492788364191%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 15:26:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11178?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11178.&#010;---------------------------------&#010;       Resolution: Fixed&#010;         Assignee: Claus Ibsen&#010;    Fix Version/s: 2.18.3&#010;&#010;&gt; Default method is invisible during Camel Simple evaluation&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11178&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11178&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Anton Sulim&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.18.3&#010;&gt;&#010;&gt;&#010;&gt; Issue can be reproduced with below unit test, I have not found it in tracker. &#010;&gt; Essence: interface A has default method, interface B extends A, default method is invisible&#010;during Simple language evaluation. &#010;&gt; {code:java}&#010;&gt; import org.apache.camel.CamelContext;&#010;&gt; import org.apache.camel.Exchange;&#010;&gt; import org.apache.camel.builder.RouteBuilder;&#010;&gt; import org.apache.camel.impl.DefaultCamelContext;&#010;&gt; import org.apache.camel.impl.DefaultExchange;&#010;&gt; import org.junit.Assert;&#010;&gt; import org.junit.Test;&#010;&gt; public class DefaultMethodIsInvisibleTest {&#010;&gt;     public static interface A {&#010;&gt;         public default String defaultMethod() {&#010;&gt;             return ""default method result"";&#010;&gt;         }&#010;&gt;     }&#010;&gt;     public static interface B extends A {&#010;&gt;     }&#010;&gt;     @Test&#010;&gt;     public void camelSimpleDoesNotSeeDefaultMethod() throws Exception {&#010;&gt;         CamelContext context = new DefaultCamelContext();&#010;&gt;         context.addRoutes(new RouteBuilder() {&#010;&gt;             public void configure() {&#010;&gt;                 from(""direct:camelSimpleDoesNotSeeDefaultMethod"").log(""Result of default&#010;method invocation is ${exchangeProperty.myObject.defaultMethod}"");&#010;&gt;             }&#010;&gt;         });&#010;&gt;         context.start();&#010;&gt;         Exchange incomingExchange = new DefaultExchange(context);&#010;&gt;         incomingExchange.setProperty(""myObject"", new B() {&#010;&gt;         });&#010;&gt;         Exchange result = context.createProducerTemplate().send(""direct:camelSimpleDoesNotSeeDefaultMethod"",&#010;incomingExchange);&#010;&gt;         Assert.assertNull(result.getException());&#010;&gt;     }&#010;&gt; }&#010;&gt; {code}&#010;&gt; Stacktrace:&#010;&gt; {code}&#010;&gt; Caused by: org.apache.camel.language.bean.RuntimeBeanExpressionException: Failed to invoke&#010;method: defaultMethod on null due to: org.apache.camel.component.bean.MethodNotFoundException:&#010;Method with name: defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.language.bean.BeanExpression$OgnlInvokeProcessor.process(BeanExpression.java:290)&#010;&gt;     at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:114)&#010;&gt;     ... 46 common frames omitted&#010;&gt; Caused by: org.apache.camel.component.bean.MethodNotFoundException: Method with name:&#010;defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:269)&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:183)&#010;&gt;     at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:159)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
700,704,Anton Sulim (JIRA),  [jira] [Reopened] (CAMEL-11178) Default method is invisible during Camel Simple evaluation,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065535.1492694609000.24859.1492834444297%40Atlassian.JIRA%3E,issues,"Sat, 22 Apr 2017 04:14:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11178?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Anton Sulim reopened CAMEL-11178:&#010;---------------------------------&#010;&#010;[~davsclaus], sorry, my bad. It does not work in latest version.&#010;&#010;Unit test in new project on another machine did not fail because I had no logging dependency&#010;in classpath. Thus logging{code}log(""${exchangeProperty.myObject.defaultMethod}""){code} was&#010;skipped and Simple expression in log message was not evaluated, exception was not thrown.&#010;&#010;&#010;Updated unit test in description changing to explicit script evaluaion.&#010;{code}script().simple(""${exchangeProperty.myObject.defaultMethod}""){code} &#010;&#010;Issue still exists, please, take a look.&#010;&#010;&gt; Default method is invisible during Camel Simple evaluation&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11178&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11178&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Anton Sulim&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.18.3&#010;&gt;&#010;&gt;&#010;&gt; Issue can be reproduced with below unit test, I have not found it in tracker. &#010;&gt; Essence: interface A has default method, interface B extends A, default method is invisible&#010;during Simple language evaluation. &#010;&gt; {code:java}&#010;&gt; import org.apache.camel.CamelContext;&#010;&gt; import org.apache.camel.Exchange;&#010;&gt; import org.apache.camel.builder.RouteBuilder;&#010;&gt; import org.apache.camel.impl.DefaultCamelContext;&#010;&gt; import org.apache.camel.impl.DefaultExchange;&#010;&gt; import org.junit.Assert;&#010;&gt; import org.junit.Test;&#010;&gt; public class DefaultMethodIsInvisibleTest {&#010;&gt;     public static interface A {&#010;&gt;         public default String defaultMethod() {&#010;&gt;             return ""default method result"";&#010;&gt;         }&#010;&gt;     }&#010;&gt;     public static interface B extends A {&#010;&gt;     }&#010;&gt;     @Test&#010;&gt;     public void camelSimpleDoesNotSeeDefaultMethod() throws Exception {&#010;&gt;         CamelContext context = new DefaultCamelContext();&#010;&gt;         context.addRoutes(new RouteBuilder() {&#010;&gt;             public void configure() {&#010;&gt;                 from(""direct:camelSimpleDoesNotSeeDefaultMethod"").log(""Result of default&#010;method invocation is ${exchangeProperty.myObject.defaultMethod}"");&#010;&gt;             }&#010;&gt;         });&#010;&gt;         context.start();&#010;&gt;         Exchange incomingExchange = new DefaultExchange(context);&#010;&gt;         incomingExchange.setProperty(""myObject"", new B() {&#010;&gt;         });&#010;&gt;         Exchange result = context.createProducerTemplate().send(""direct:camelSimpleDoesNotSeeDefaultMethod"",&#010;incomingExchange);&#010;&gt;         Assert.assertNull(result.getException());&#010;&gt;     }&#010;&gt; }&#010;&gt; {code}&#010;&gt; Stacktrace:&#010;&gt; {code}&#010;&gt; Caused by: org.apache.camel.language.bean.RuntimeBeanExpressionException: Failed to invoke&#010;method: defaultMethod on null due to: org.apache.camel.component.bean.MethodNotFoundException:&#010;Method with name: defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.language.bean.BeanExpression$OgnlInvokeProcessor.process(BeanExpression.java:290)&#010;&gt;     at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:114)&#010;&gt;     ... 46 common frames omitted&#010;&gt; Caused by: org.apache.camel.component.bean.MethodNotFoundException: Method with name:&#010;defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:269)&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:183)&#010;&gt;     at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:159)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
701,705,Anton Sulim (JIRA),  [jira] [Updated] (CAMEL-11178) Default method is invisible during Camel Simple evaluation,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065535.1492694609000.24863.1492834504189%40Atlassian.JIRA%3E,issues,"Sat, 22 Apr 2017 04:15:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11178?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Anton Sulim updated CAMEL-11178:&#010;--------------------------------&#010;    Description: &#010;Issue can be reproduced with below unit test, I have not found it in tracker. &#010;Essence: interface A has default method, interface B extends A, default method is invisible&#010;during Simple language evaluation. &#010;&#010;{code:java}&#010;import org.apache.camel.CamelContext;&#010;import org.apache.camel.Exchange;&#010;import org.apache.camel.builder.RouteBuilder;&#010;import org.apache.camel.impl.DefaultCamelContext;&#010;import org.apache.camel.impl.DefaultExchange;&#010;import org.junit.Assert;&#010;import org.junit.Test;&#010;&#010;public class DefaultMethodIsInvisibleTest {&#010;&#010;    public static interface A {&#010;        public default String defaultMethod() {&#010;            return ""default method result"";&#010;        }&#010;    }&#010;&#010;    public static interface B extends A {&#010;    }&#010;&#010;    @Test&#010;    public void camelSimpleDoesNotSeeDefaultMethod() throws Exception {&#010;        CamelContext context = new DefaultCamelContext();&#010;        context.addRoutes(new RouteBuilder() {&#010;            public void configure() {&#010;                from(""direct:camelSimpleDoesNotSeeDefaultMethod"").script().simple(""${exchangeProperty.myObject.defaultMethod}"");&#010;            }&#010;        });&#010;        context.start();&#010;&#010;        Exchange incomingExchange = new DefaultExchange(context);&#010;        incomingExchange.setProperty(""myObject"", new B() {&#010;        });&#010;&#010;        Exchange result = context.createProducerTemplate().send(""direct:camelSimpleDoesNotSeeDefaultMethod"",&#010;incomingExchange);&#010;&#010;        Assert.assertNull(result.getException());&#010;    }&#010;&#010;}&#010;{code}&#010;&#010;Stacktrace:&#010;{code}&#010;Caused by: org.apache.camel.language.bean.RuntimeBeanExpressionException: Failed to invoke&#010;method: defaultMethod on null due to: org.apache.camel.component.bean.MethodNotFoundException:&#010;Method with name: defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;    at org.apache.camel.language.bean.BeanExpression$OgnlInvokeProcessor.process(BeanExpression.java:290)&#010;    at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:114)&#010;    ... 46 common frames omitted&#010;Caused by: org.apache.camel.component.bean.MethodNotFoundException: Method with name: defaultMethod&#010;not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;    at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:269)&#010;    at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:183)&#010;    at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:159)&#010;{code}&#010;&#010;  was:&#010;Issue can be reproduced with below unit test, I have not found it in tracker. &#010;Essence: interface A has default method, interface B extends A, default method is invisible&#010;during Simple language evaluation. &#010;&#010;{code:java}&#010;import org.apache.camel.CamelContext;&#010;import org.apache.camel.Exchange;&#010;import org.apache.camel.builder.RouteBuilder;&#010;import org.apache.camel.impl.DefaultCamelContext;&#010;import org.apache.camel.impl.DefaultExchange;&#010;import org.junit.Assert;&#010;import org.junit.Test;&#010;&#010;public class DefaultMethodIsInvisibleTest {&#010;&#010;    public static interface A {&#010;        public default String defaultMethod() {&#010;            return ""default method result"";&#010;        }&#010;    }&#010;&#010;    public static interface B extends A {&#010;    }&#010;&#010;    @Test&#010;    public void camelSimpleDoesNotSeeDefaultMethod() throws Exception {&#010;        CamelContext context = new DefaultCamelContext();&#010;        context.addRoutes(new RouteBuilder() {&#010;            public void configure() {&#010;                from(""direct:camelSimpleDoesNotSeeDefaultMethod"").log(""Result of default method&#010;invocation is ${exchangeProperty.myObject.defaultMethod}"");&#010;            }&#010;        });&#010;        context.start();&#010;&#010;        Exchange incomingExchange = new DefaultExchange(context);&#010;        incomingExchange.setProperty(""myObject"", new B() {&#010;        });&#010;&#010;        Exchange result = context.createProducerTemplate().send(""direct:camelSimpleDoesNotSeeDefaultMethod"",&#010;incomingExchange);&#010;&#010;        Assert.assertNull(result.getException());&#010;    }&#010;&#010;}&#010;{code}&#010;&#010;Stacktrace:&#010;{code}&#010;Caused by: org.apache.camel.language.bean.RuntimeBeanExpressionException: Failed to invoke&#010;method: defaultMethod on null due to: org.apache.camel.component.bean.MethodNotFoundException:&#010;Method with name: defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;    at org.apache.camel.language.bean.BeanExpression$OgnlInvokeProcessor.process(BeanExpression.java:290)&#010;    at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:114)&#010;    ... 46 common frames omitted&#010;Caused by: org.apache.camel.component.bean.MethodNotFoundException: Method with name: defaultMethod&#010;not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;    at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:269)&#010;    at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:183)&#010;    at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:159)&#010;{code}&#010;&#010;&#010;&gt; Default method is invisible during Camel Simple evaluation&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11178&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11178&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Anton Sulim&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.18.3&#010;&gt;&#010;&gt;&#010;&gt; Issue can be reproduced with below unit test, I have not found it in tracker. &#010;&gt; Essence: interface A has default method, interface B extends A, default method is invisible&#010;during Simple language evaluation. &#010;&gt; {code:java}&#010;&gt; import org.apache.camel.CamelContext;&#010;&gt; import org.apache.camel.Exchange;&#010;&gt; import org.apache.camel.builder.RouteBuilder;&#010;&gt; import org.apache.camel.impl.DefaultCamelContext;&#010;&gt; import org.apache.camel.impl.DefaultExchange;&#010;&gt; import org.junit.Assert;&#010;&gt; import org.junit.Test;&#010;&gt; public class DefaultMethodIsInvisibleTest {&#010;&gt;     public static interface A {&#010;&gt;         public default String defaultMethod() {&#010;&gt;             return ""default method result"";&#010;&gt;         }&#010;&gt;     }&#010;&gt;     public static interface B extends A {&#010;&gt;     }&#010;&gt;     @Test&#010;&gt;     public void camelSimpleDoesNotSeeDefaultMethod() throws Exception {&#010;&gt;         CamelContext context = new DefaultCamelContext();&#010;&gt;         context.addRoutes(new RouteBuilder() {&#010;&gt;             public void configure() {&#010;&gt;                 from(""direct:camelSimpleDoesNotSeeDefaultMethod"").script().simple(""${exchangeProperty.myObject.defaultMethod}"");&#010;&gt;             }&#010;&gt;         });&#010;&gt;         context.start();&#010;&gt;         Exchange incomingExchange = new DefaultExchange(context);&#010;&gt;         incomingExchange.setProperty(""myObject"", new B() {&#010;&gt;         });&#010;&gt;         Exchange result = context.createProducerTemplate().send(""direct:camelSimpleDoesNotSeeDefaultMethod"",&#010;incomingExchange);&#010;&gt;         Assert.assertNull(result.getException());&#010;&gt;     }&#010;&gt; }&#010;&gt; {code}&#010;&gt; Stacktrace:&#010;&gt; {code}&#010;&gt; Caused by: org.apache.camel.language.bean.RuntimeBeanExpressionException: Failed to invoke&#010;method: defaultMethod on null due to: org.apache.camel.component.bean.MethodNotFoundException:&#010;Method with name: defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.language.bean.BeanExpression$OgnlInvokeProcessor.process(BeanExpression.java:290)&#010;&gt;     at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:114)&#010;&gt;     ... 46 common frames omitted&#010;&gt; Caused by: org.apache.camel.component.bean.MethodNotFoundException: Method with name:&#010;defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:269)&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:183)&#010;&gt;     at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:159)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
702,706,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11178) Default method is invisible during Camel Simple evaluation,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065535.1492694609000.25255.1492844884060%40Atlassian.JIRA%3E,issues,"Sat, 22 Apr 2017 07:08:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11178?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11178:&#010;--------------------------------&#010;    Fix Version/s:     (was: 2.18.3)&#010;                   2.20.0&#010;&#010;&gt; Default method is invisible during Camel Simple evaluation&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11178&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11178&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Anton Sulim&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Issue can be reproduced with below unit test, I have not found it in tracker. &#010;&gt; Essence: interface A has default method, interface B extends A, default method is invisible&#010;during Simple language evaluation. &#010;&gt; {code:java}&#010;&gt; import org.apache.camel.CamelContext;&#010;&gt; import org.apache.camel.Exchange;&#010;&gt; import org.apache.camel.builder.RouteBuilder;&#010;&gt; import org.apache.camel.impl.DefaultCamelContext;&#010;&gt; import org.apache.camel.impl.DefaultExchange;&#010;&gt; import org.junit.Assert;&#010;&gt; import org.junit.Test;&#010;&gt; public class DefaultMethodIsInvisibleTest {&#010;&gt;     public static interface A {&#010;&gt;         public default String defaultMethod() {&#010;&gt;             return ""default method result"";&#010;&gt;         }&#010;&gt;     }&#010;&gt;     public static interface B extends A {&#010;&gt;     }&#010;&gt;     @Test&#010;&gt;     public void camelSimpleDoesNotSeeDefaultMethod() throws Exception {&#010;&gt;         CamelContext context = new DefaultCamelContext();&#010;&gt;         context.addRoutes(new RouteBuilder() {&#010;&gt;             public void configure() {&#010;&gt;                 from(""direct:camelSimpleDoesNotSeeDefaultMethod"").script().simple(""${exchangeProperty.myObject.defaultMethod}"");&#010;&gt;             }&#010;&gt;         });&#010;&gt;         context.start();&#010;&gt;         Exchange incomingExchange = new DefaultExchange(context);&#010;&gt;         incomingExchange.setProperty(""myObject"", new B() {&#010;&gt;         });&#010;&gt;         Exchange result = context.createProducerTemplate().send(""direct:camelSimpleDoesNotSeeDefaultMethod"",&#010;incomingExchange);&#010;&gt;         Assert.assertNull(result.getException());&#010;&gt;     }&#010;&gt; }&#010;&gt; {code}&#010;&gt; Stacktrace:&#010;&gt; {code}&#010;&gt; Caused by: org.apache.camel.language.bean.RuntimeBeanExpressionException: Failed to invoke&#010;method: defaultMethod on null due to: org.apache.camel.component.bean.MethodNotFoundException:&#010;Method with name: defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.language.bean.BeanExpression$OgnlInvokeProcessor.process(BeanExpression.java:290)&#010;&gt;     at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:114)&#010;&gt;     ... 46 common frames omitted&#010;&gt; Caused by: org.apache.camel.component.bean.MethodNotFoundException: Method with name:&#010;defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:269)&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:183)&#010;&gt;     at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:159)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
703,707,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11178) Default method on interface is invisible during Camel Simple evaluation,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065535.1492694609000.25257.1492844944061%40Atlassian.JIRA%3E,issues,"Sat, 22 Apr 2017 07:09:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11178?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11178:&#010;--------------------------------&#010;    Summary: Default method on interface is invisible during Camel Simple evaluation  (was:&#010;Default method is invisible during Camel Simple evaluation)&#010;&#010;&gt; Default method on interface is invisible during Camel Simple evaluation&#010;&gt; -----------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11178&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11178&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Anton Sulim&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Issue can be reproduced with below unit test, I have not found it in tracker. &#010;&gt; Essence: interface A has default method, interface B extends A, default method is invisible&#010;during Simple language evaluation. &#010;&gt; {code:java}&#010;&gt; import org.apache.camel.CamelContext;&#010;&gt; import org.apache.camel.Exchange;&#010;&gt; import org.apache.camel.builder.RouteBuilder;&#010;&gt; import org.apache.camel.impl.DefaultCamelContext;&#010;&gt; import org.apache.camel.impl.DefaultExchange;&#010;&gt; import org.junit.Assert;&#010;&gt; import org.junit.Test;&#010;&gt; public class DefaultMethodIsInvisibleTest {&#010;&gt;     public static interface A {&#010;&gt;         public default String defaultMethod() {&#010;&gt;             return ""default method result"";&#010;&gt;         }&#010;&gt;     }&#010;&gt;     public static interface B extends A {&#010;&gt;     }&#010;&gt;     @Test&#010;&gt;     public void camelSimpleDoesNotSeeDefaultMethod() throws Exception {&#010;&gt;         CamelContext context = new DefaultCamelContext();&#010;&gt;         context.addRoutes(new RouteBuilder() {&#010;&gt;             public void configure() {&#010;&gt;                 from(""direct:camelSimpleDoesNotSeeDefaultMethod"").script().simple(""${exchangeProperty.myObject.defaultMethod}"");&#010;&gt;             }&#010;&gt;         });&#010;&gt;         context.start();&#010;&gt;         Exchange incomingExchange = new DefaultExchange(context);&#010;&gt;         incomingExchange.setProperty(""myObject"", new B() {&#010;&gt;         });&#010;&gt;         Exchange result = context.createProducerTemplate().send(""direct:camelSimpleDoesNotSeeDefaultMethod"",&#010;incomingExchange);&#010;&gt;         Assert.assertNull(result.getException());&#010;&gt;     }&#010;&gt; }&#010;&gt; {code}&#010;&gt; Stacktrace:&#010;&gt; {code}&#010;&gt; Caused by: org.apache.camel.language.bean.RuntimeBeanExpressionException: Failed to invoke&#010;method: defaultMethod on null due to: org.apache.camel.component.bean.MethodNotFoundException:&#010;Method with name: defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.language.bean.BeanExpression$OgnlInvokeProcessor.process(BeanExpression.java:290)&#010;&gt;     at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:114)&#010;&gt;     ... 46 common frames omitted&#010;&gt; Caused by: org.apache.camel.component.bean.MethodNotFoundException: Method with name:&#010;defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:269)&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:183)&#010;&gt;     at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:159)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
704,708,Claus Ibsen (JIRA),  [jira] [Assigned] (CAMEL-11178) Default method on interface is invisible during Camel Simple evaluation,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065535.1492694609000.25272.1492846864214%40Atlassian.JIRA%3E,issues,"Sat, 22 Apr 2017 07:41:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11178?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reassigned CAMEL-11178:&#010;-----------------------------------&#010;&#010;    Assignee:     (was: Claus Ibsen)&#010;&#010;&gt; Default method on interface is invisible during Camel Simple evaluation&#010;&gt; -----------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11178&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11178&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Anton Sulim&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Issue can be reproduced with below unit test, I have not found it in tracker. &#010;&gt; Essence: interface A has default method, interface B extends A, default method is invisible&#010;during Simple language evaluation. &#010;&gt; {code:java}&#010;&gt; import org.apache.camel.CamelContext;&#010;&gt; import org.apache.camel.Exchange;&#010;&gt; import org.apache.camel.builder.RouteBuilder;&#010;&gt; import org.apache.camel.impl.DefaultCamelContext;&#010;&gt; import org.apache.camel.impl.DefaultExchange;&#010;&gt; import org.junit.Assert;&#010;&gt; import org.junit.Test;&#010;&gt; public class DefaultMethodIsInvisibleTest {&#010;&gt;     public static interface A {&#010;&gt;         public default String defaultMethod() {&#010;&gt;             return ""default method result"";&#010;&gt;         }&#010;&gt;     }&#010;&gt;     public static interface B extends A {&#010;&gt;     }&#010;&gt;     @Test&#010;&gt;     public void camelSimpleDoesNotSeeDefaultMethod() throws Exception {&#010;&gt;         CamelContext context = new DefaultCamelContext();&#010;&gt;         context.addRoutes(new RouteBuilder() {&#010;&gt;             public void configure() {&#010;&gt;                 from(""direct:camelSimpleDoesNotSeeDefaultMethod"").script().simple(""${exchangeProperty.myObject.defaultMethod}"");&#010;&gt;             }&#010;&gt;         });&#010;&gt;         context.start();&#010;&gt;         Exchange incomingExchange = new DefaultExchange(context);&#010;&gt;         incomingExchange.setProperty(""myObject"", new B() {&#010;&gt;         });&#010;&gt;         Exchange result = context.createProducerTemplate().send(""direct:camelSimpleDoesNotSeeDefaultMethod"",&#010;incomingExchange);&#010;&gt;         Assert.assertNull(result.getException());&#010;&gt;     }&#010;&gt; }&#010;&gt; {code}&#010;&gt; Stacktrace:&#010;&gt; {code}&#010;&gt; Caused by: org.apache.camel.language.bean.RuntimeBeanExpressionException: Failed to invoke&#010;method: defaultMethod on null due to: org.apache.camel.component.bean.MethodNotFoundException:&#010;Method with name: defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.language.bean.BeanExpression$OgnlInvokeProcessor.process(BeanExpression.java:290)&#010;&gt;     at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:114)&#010;&gt;     ... 46 common frames omitted&#010;&gt; Caused by: org.apache.camel.component.bean.MethodNotFoundException: Method with name:&#010;defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:269)&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:183)&#010;&gt;     at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:159)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
705,709,,[jira] [Created] (CAMEL-11179) MultiThread race condition in DefaultShutdownStrategy for suspend/resume,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065535.1492694609000.25272.1492846864214%40Atlassian.JIRA%3E,issues,"Sat, 22 Apr 2017 07:41:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11178?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reassigned CAMEL-11178:&#010;-----------------------------------&#010;&#010;    Assignee:     (was: Claus Ibsen)&#010;&#010;&gt; Default method on interface is invisible during Camel Simple evaluation&#010;&gt; -----------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11178&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11178&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.16.1&#010;&gt;            Reporter: Anton Sulim&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Issue can be reproduced with below unit test, I have not found it in tracker. &#010;&gt; Essence: interface A has default method, interface B extends A, default method is invisible&#010;during Simple language evaluation. &#010;&gt; {code:java}&#010;&gt; import org.apache.camel.CamelContext;&#010;&gt; import org.apache.camel.Exchange;&#010;&gt; import org.apache.camel.builder.RouteBuilder;&#010;&gt; import org.apache.camel.impl.DefaultCamelContext;&#010;&gt; import org.apache.camel.impl.DefaultExchange;&#010;&gt; import org.junit.Assert;&#010;&gt; import org.junit.Test;&#010;&gt; public class DefaultMethodIsInvisibleTest {&#010;&gt;     public static interface A {&#010;&gt;         public default String defaultMethod() {&#010;&gt;             return ""default method result"";&#010;&gt;         }&#010;&gt;     }&#010;&gt;     public static interface B extends A {&#010;&gt;     }&#010;&gt;     @Test&#010;&gt;     public void camelSimpleDoesNotSeeDefaultMethod() throws Exception {&#010;&gt;         CamelContext context = new DefaultCamelContext();&#010;&gt;         context.addRoutes(new RouteBuilder() {&#010;&gt;             public void configure() {&#010;&gt;                 from(""direct:camelSimpleDoesNotSeeDefaultMethod"").script().simple(""${exchangeProperty.myObject.defaultMethod}"");&#010;&gt;             }&#010;&gt;         });&#010;&gt;         context.start();&#010;&gt;         Exchange incomingExchange = new DefaultExchange(context);&#010;&gt;         incomingExchange.setProperty(""myObject"", new B() {&#010;&gt;         });&#010;&gt;         Exchange result = context.createProducerTemplate().send(""direct:camelSimpleDoesNotSeeDefaultMethod"",&#010;incomingExchange);&#010;&gt;         Assert.assertNull(result.getException());&#010;&gt;     }&#010;&gt; }&#010;&gt; {code}&#010;&gt; Stacktrace:&#010;&gt; {code}&#010;&gt; Caused by: org.apache.camel.language.bean.RuntimeBeanExpressionException: Failed to invoke&#010;method: defaultMethod on null due to: org.apache.camel.component.bean.MethodNotFoundException:&#010;Method with name: defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.language.bean.BeanExpression$OgnlInvokeProcessor.process(BeanExpression.java:290)&#010;&gt;     at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:114)&#010;&gt;     ... 46 common frames omitted&#010;&gt; Caused by: org.apache.camel.component.bean.MethodNotFoundException: Method with name:&#010;defaultMethod not found on bean: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2@5dafbe45&#010;of type: com.ubs.wma.gfi.tradersbook.subscriber.DefaultMethodIsInvisibleTest$2. Exchange[][Message:&#010;[Body is null]]&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:269)&#010;&gt;     at org.apache.camel.component.bean.BeanInfo.createInvocation(BeanInfo.java:183)&#010;&gt;     at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:159)&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
706,710,Benjamin Graf (JIRA),  [jira] [Created] (CAMEL-11179) MultiThread race condition in DefaultShutdownStrategy for suspend/resume,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065636.1492712907000.9614.1492712944258%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 18:29:04 GMT","Benjamin Graf created CAMEL-11179:&#010;-------------------------------------&#010;&#010;             Summary: MultiThread race condition in DefaultShutdownStrategy for suspend/resume&#010;                 Key: CAMEL-11179&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11179&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-core&#010;    Affects Versions: 2.18.3&#010;            Reporter: Benjamin Graf&#010;&#010;&#010;If call to suspend with timeout does timeout than two threads are invoking forced processing&#010;one for suspending and one for hard stopping. This causes the Consumer to be possibly left&#010;in a dead state.&#010;&#010;E.g. Jms consuming route:&#010;1.) Timeout occurs, ShutdownTask gets completed before main thread&#010;-&gt; JmsConsumer gets stopped (listener gets destroyed), resume has no effect&#010;2.) Timeout occurs, ShutdownTask get completet after main thread&#010;-&gt; JmsConsumer gets stopped first (listener gets destroyed) and get suspended second, resume&#010;sets Consumer to started but the listener is still destroyed!&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
707,711,Benjamin Graf (JIRA),  [jira] [Updated] (CAMEL-11179) MultiThread race condition in DefaultShutdownStrategy for suspend/resume,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065636.1492712907000.9634.1492712944435%40Atlassian.JIRA%3E,issues,"Thu, 20 Apr 2017 18:29:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11179?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Benjamin Graf updated CAMEL-11179:&#010;----------------------------------&#010;    Description: &#010;If call to suspend with timeout does timeout than two threads are invoking forced processing&#010;one for suspending and one for hard stopping. This causes the Consumer to be possibly left&#010;in a dead state.&#010;&#010;E.g. Jms consuming route:&#010;# Timeout occurs, ShutdownTask gets completed before main thread&#010;-&gt; JmsConsumer gets stopped (listener gets destroyed), resume has no effect&#010;# Timeout occurs, ShutdownTask get completet after main thread&#010;-&gt; JmsConsumer gets stopped first (listener gets destroyed) and get suspended second, resume&#010;sets Consumer to started but the listener is still destroyed!&#010;&#010;  was:&#010;If call to suspend with timeout does timeout than two threads are invoking forced processing&#010;one for suspending and one for hard stopping. This causes the Consumer to be possibly left&#010;in a dead state.&#010;&#010;E.g. Jms consuming route:&#010;1.) Timeout occurs, ShutdownTask gets completed before main thread&#010;-&gt; JmsConsumer gets stopped (listener gets destroyed), resume has no effect&#010;2.) Timeout occurs, ShutdownTask get completet after main thread&#010;-&gt; JmsConsumer gets stopped first (listener gets destroyed) and get suspended second, resume&#010;sets Consumer to started but the listener is still destroyed!&#010;&#010;&#010;&gt; MultiThread race condition in DefaultShutdownStrategy for suspend/resume&#010;&gt; ------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11179&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11179&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Benjamin Graf&#010;&gt;&#010;&gt; If call to suspend with timeout does timeout than two threads are invoking forced processing&#010;one for suspending and one for hard stopping. This causes the Consumer to be possibly left&#010;in a dead state.&#010;&gt; E.g. Jms consuming route:&#010;&gt; # Timeout occurs, ShutdownTask gets completed before main thread&#010;&gt; -&gt; JmsConsumer gets stopped (listener gets destroyed), resume has no effect&#010;&gt; # Timeout occurs, ShutdownTask get completet after main thread&#010;&gt; -&gt; JmsConsumer gets stopped first (listener gets destroyed) and get suspended second,&#010;resume sets Consumer to started but the listener is still destroyed!&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
708,712,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11179) MultiThread race condition in DefaultShutdownStrategy for suspend/resume,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065636.1492712907000.16152.1492762384094%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 08:13:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11179?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11179:&#010;--------------------------------&#010;    Priority: Minor  (was: Major)&#010;&#010;&gt; MultiThread race condition in DefaultShutdownStrategy for suspend/resume&#010;&gt; ------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11179&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11179&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Benjamin Graf&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; If call to suspend with timeout does timeout than two threads are invoking forced processing&#010;one for suspending and one for hard stopping. This causes the Consumer to be possibly left&#010;in a dead state.&#010;&gt; E.g. Jms consuming route:&#010;&gt; # Timeout occurs, ShutdownTask gets completed before main thread&#010;&gt; -&gt; JmsConsumer gets stopped (listener gets destroyed), resume has no effect&#010;&gt; # Timeout occurs, ShutdownTask get completet after main thread&#010;&gt; -&gt; JmsConsumer gets stopped first (listener gets destroyed) and get suspended second,&#010;resume sets Consumer to started but the listener is still destroyed!&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
709,713,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11179) MultiThread race condition in DefaultShutdownStrategy for suspend/resume,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065636.1492712907000.16158.1492762444365%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 08:14:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11179?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978275#comment-15978275&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11179:&#010;-------------------------------------&#010;&#010;Its not a so good idea to use timeout (unless a high value) to give the system amble time&#010;to suspend/shutdown correctly. &#010;&#010;&gt; MultiThread race condition in DefaultShutdownStrategy for suspend/resume&#010;&gt; ------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11179&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11179&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Benjamin Graf&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; If call to suspend with timeout does timeout than two threads are invoking forced processing&#010;one for suspending and one for hard stopping. This causes the Consumer to be possibly left&#010;in a dead state.&#010;&gt; E.g. Jms consuming route:&#010;&gt; # Timeout occurs, ShutdownTask gets completed before main thread&#010;&gt; -&gt; JmsConsumer gets stopped (listener gets destroyed), resume has no effect&#010;&gt; # Timeout occurs, ShutdownTask get completet after main thread&#010;&gt; -&gt; JmsConsumer gets stopped first (listener gets destroyed) and get suspended second,&#010;resume sets Consumer to started but the listener is still destroyed!&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
710,714,Benjamin Graf (JIRA),  [jira] [Commented] (CAMEL-11179) MultiThread race condition in DefaultShutdownStrategy for suspend/resume,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065636.1492712907000.17129.1492769344159%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 10:09:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11179?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978440#comment-15978440&#010;] &#010;&#010;Benjamin Graf commented on CAMEL-11179:&#010;---------------------------------------&#010;&#010;Well, timeout is used by default (300s) and there does not a exist a ""forceSuspend"" feature.&#010;Therefor this can only be avoided by setting default timeout to infinity? Not a good idea.&#010;&#010;&gt; MultiThread race condition in DefaultShutdownStrategy for suspend/resume&#010;&gt; ------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11179&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11179&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Benjamin Graf&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; If call to suspend with timeout does timeout than two threads are invoking forced processing&#010;one for suspending and one for hard stopping. This causes the Consumer to be possibly left&#010;in a dead state.&#010;&gt; E.g. Jms consuming route:&#010;&gt; # Timeout occurs, ShutdownTask gets completed before main thread&#010;&gt; -&gt; JmsConsumer gets stopped (listener gets destroyed), resume has no effect&#010;&gt; # Timeout occurs, ShutdownTask get completet after main thread&#010;&gt; -&gt; JmsConsumer gets stopped first (listener gets destroyed) and get suspended second,&#010;resume sets Consumer to started but the listener is still destroyed!&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
711,715,,[jira] [Commented] (CAMEL-10985) camel-coap fails to return results when enableCORS(true) is set,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065636.1492712907000.17129.1492769344159%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 10:09:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11179?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978440#comment-15978440&#010;] &#010;&#010;Benjamin Graf commented on CAMEL-11179:&#010;---------------------------------------&#010;&#010;Well, timeout is used by default (300s) and there does not a exist a ""forceSuspend"" feature.&#010;Therefor this can only be avoided by setting default timeout to infinity? Not a good idea.&#010;&#010;&gt; MultiThread race condition in DefaultShutdownStrategy for suspend/resume&#010;&gt; ------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11179&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11179&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Benjamin Graf&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; If call to suspend with timeout does timeout than two threads are invoking forced processing&#010;one for suspending and one for hard stopping. This causes the Consumer to be possibly left&#010;in a dead state.&#010;&gt; E.g. Jms consuming route:&#010;&gt; # Timeout occurs, ShutdownTask gets completed before main thread&#010;&gt; -&gt; JmsConsumer gets stopped (listener gets destroyed), resume has no effect&#010;&gt; # Timeout occurs, ShutdownTask get completet after main thread&#010;&gt; -&gt; JmsConsumer gets stopped first (listener gets destroyed) and get suspended second,&#010;resume sets Consumer to started but the listener is still destroyed!&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
712,716,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-10985) camel-coap fails to return results when enableCORS(true) is set,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050071.1489159933000.16313.1492763404473%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 08:30:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10985?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978305#comment-15978305&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-10985:&#010;-------------------------------------&#010;&#010;Wonder if the recent fix in camel-coap may have improved this? We can test on master.&#010;&#010;&gt; camel-coap fails to return results when enableCORS(true) is set&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10985&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10985&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; In the CoAPRestVerbTest, if you add to the restConfiguration() .enableCORS(true), then&#010;all of the unit tests that return a result fail as no response is returned&#010;&gt; https://github.com/apache/camel/blob/master/components/camel-coap/src/test/java/org/apache/camel/coap/CoAPRestVerbTest.java#L106&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
713,717,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-10985) camel-coap fails to return results when enableCORS(true) is set,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050071.1489159933000.16314.1492763404482%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 08:30:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10985?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978306#comment-15978306&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-10985:&#010;-------------------------------------&#010;&#010;[~jamesnetherton] in case you want to have more fun with camel-coap then we have this ticket&#010;&#010;&gt; camel-coap fails to return results when enableCORS(true) is set&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10985&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10985&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; In the CoAPRestVerbTest, if you add to the restConfiguration() .enableCORS(true), then&#010;all of the unit tests that return a result fail as no response is returned&#010;&gt; https://github.com/apache/camel/blob/master/components/camel-coap/src/test/java/org/apache/camel/coap/CoAPRestVerbTest.java#L106&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
714,718,James Netherton (JIRA),  [jira] [Commented] (CAMEL-10985) camel-coap fails to return results when enableCORS(true) is set,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050071.1489159933000.16471.1492765084206%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 08:58:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10985?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978341#comment-15978341&#010;] &#010;&#010;James Netherton commented on CAMEL-10985:&#010;-----------------------------------------&#010;&#010;Ok, I'll take a peek at it early next week.&#010;&#010;&gt; camel-coap fails to return results when enableCORS(true) is set&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10985&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10985&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; In the CoAPRestVerbTest, if you add to the restConfiguration() .enableCORS(true), then&#010;all of the unit tests that return a result fail as no response is returned&#010;&gt; https://github.com/apache/camel/blob/master/components/camel-coap/src/test/java/org/apache/camel/coap/CoAPRestVerbTest.java#L106&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
715,719,James Netherton (JIRA),  [jira] [Commented] (CAMEL-10985) camel-coap fails to return results when enableCORS(true) is set,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050071.1489159933000.34299.1493051164606%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 16:26:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10985?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981454#comment-15981454&#010;] &#010;&#010;James Netherton commented on CAMEL-10985:&#010;-----------------------------------------&#010;&#010;I'm no expert on CoAP, but, does CORS even make sense in this context? See method codes listed&#010;in this document (OPTIONS is not mentioned):&#010;&#010;https://github.com/markushx/coap-cheatsheet/blob/master/coap-cheatsheet.pdf&#010;&#010;The reason things are not working, is because when CORS is enabled, camel is [automatically&#010;adding|https://github.com/apache/camel/blob/master/components/camel-coap/src/main/java/org/apache/camel/coap/CoAPComponent.java#L119-L121]&#010;{{OPTIONS}} to the list of allowed method verbs configured on the endpoint. This screws up&#010;the logic to retrieve the correct consumer to handle the request, since it's expecting to&#010;match against individual verb names like {{GET}} or {{POST}} etc. Not {{GET,OPTIONS}} or {{POST,OPTIONS}}&#010;etc.&#010;&#010;&#010;&#010;&gt; camel-coap fails to return results when enableCORS(true) is set&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10985&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10985&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; In the CoAPRestVerbTest, if you add to the restConfiguration() .enableCORS(true), then&#010;all of the unit tests that return a result fail as no response is returned&#010;&gt; https://github.com/apache/camel/blob/master/components/camel-coap/src/test/java/org/apache/camel/coap/CoAPRestVerbTest.java#L106&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
716,720,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-10985) camel-coap fails to return results when enableCORS(true) is set,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050071.1489159933000.42324.1493108464206%40Atlassian.JIRA%3E,issues,"Tue, 25 Apr 2017 08:21:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10985?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-10985:&#010;--------------------------------&#010;    Fix Version/s: 2.20.0&#010;&#010;&gt; camel-coap fails to return results when enableCORS(true) is set&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10985&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10985&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; In the CoAPRestVerbTest, if you add to the restConfiguration() .enableCORS(true), then&#010;all of the unit tests that return a result fail as no response is returned&#010;&gt; https://github.com/apache/camel/blob/master/components/camel-coap/src/test/java/org/apache/camel/coap/CoAPRestVerbTest.java#L106&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
717,721,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-10985) camel-coap fails to return results when enableCORS(true) is set,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050071.1489159933000.42321.1493108464185%40Atlassian.JIRA%3E,issues,"Tue, 25 Apr 2017 08:21:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10985?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15982551#comment-15982551&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-10985:&#010;-------------------------------------&#010;&#010;[~jamesnetherton] ah yeah CORS does not make sense for coap. I guess we would need to change&#010;some logic in camel-coap to avoid CORS.&#010;&#010;Contributions is welcome&#010;&#010;&gt; camel-coap fails to return results when enableCORS(true) is set&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10985&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10985&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; In the CoAPRestVerbTest, if you add to the restConfiguration() .enableCORS(true), then&#010;all of the unit tests that return a result fail as no response is returned&#010;&gt; https://github.com/apache/camel/blob/master/components/camel-coap/src/test/java/org/apache/camel/coap/CoAPRestVerbTest.java#L106&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
718,722,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10985) camel-coap fails to return results when enableCORS(true) is set,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050071.1489159933000.65383.1493295124218%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 12:12:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10985?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986457#comment-15986457&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10985:&#010;----------------------------------------&#010;&#010;GitHub user jamesnetherton opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1665&#010;&#010;    CAMEL-10985: Ignore CORS configuraion in CoAP component&#010;&#010;    https://issues.apache.org/jira/browse/CAMEL-10985&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/jamesnetherton/camel CAMEL-10985&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1665.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1665&#010;    &#010;----&#010;commit ff417180291e2ece3e9d3dc4c918498805b6278c&#010;Author: James Netherton &lt;jamesnetherton@gmail.com&gt;&#010;Date:   2017-04-27T09:48:33Z&#010;&#010;    CAMEL-10985: Ignore CORS configuraion in CoAP component&#010;&#010;----&#010;&#010;&#010;&gt; camel-coap fails to return results when enableCORS(true) is set&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10985&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10985&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; In the CoAPRestVerbTest, if you add to the restConfiguration() .enableCORS(true), then&#010;all of the unit tests that return a result fail as no response is returned&#010;&gt; https://github.com/apache/camel/blob/master/components/camel-coap/src/test/java/org/apache/camel/coap/CoAPRestVerbTest.java#L106&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
719,723,Zoran Regvart (JIRA),  [jira] [Commented] (CAMEL-10985) camel-coap fails to return results when enableCORS(true) is set,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050071.1489159933000.65837.1493297584417%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 12:53:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10985?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986552#comment-15986552&#010;] &#010;&#010;Zoran Regvart commented on CAMEL-10985:&#010;---------------------------------------&#010;&#010;I concur with [~jamesnetherton] the [RFC7252 section 5.8|https://tools.ietf.org/html/rfc7252#section-5.8]&#010;does not mention {{OPTIONS}} method, this can safely be removed from CoAP.&#010;&#010;&gt; camel-coap fails to return results when enableCORS(true) is set&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10985&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10985&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; In the CoAPRestVerbTest, if you add to the restConfiguration() .enableCORS(true), then&#010;all of the unit tests that return a result fail as no response is returned&#010;&gt; https://github.com/apache/camel/blob/master/components/camel-coap/src/test/java/org/apache/camel/coap/CoAPRestVerbTest.java#L106&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
720,724,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-10985) camel-coap fails to return results when enableCORS(true) is set,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050071.1489159933000.65871.1493297824402%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 12:57:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-10985?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-10985.&#010;-----------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s:     (was: 2.20.0)&#010;                   2.19.0&#010;&#010;Merged from [PR#1665|https://github.com/apache/camel/pull/1665] to {{master}}&#010;&#010;&gt; camel-coap fails to return results when enableCORS(true) is set&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10985&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10985&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; In the CoAPRestVerbTest, if you add to the restConfiguration() .enableCORS(true), then&#010;all of the unit tests that return a result fail as no response is returned&#010;&gt; https://github.com/apache/camel/blob/master/components/camel-coap/src/test/java/org/apache/camel/coap/CoAPRestVerbTest.java#L106&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
721,725,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10985) camel-coap fails to return results when enableCORS(true) is set,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050071.1489159933000.65910.1493297884361%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 12:58:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10985?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986561#comment-15986561&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10985:&#010;----------------------------------------&#010;&#010;Github user jamesnetherton closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1665&#010;&#010;&#010;&gt; camel-coap fails to return results when enableCORS(true) is set&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10985&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10985&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; In the CoAPRestVerbTest, if you add to the restConfiguration() .enableCORS(true), then&#010;all of the unit tests that return a result fail as no response is returned&#010;&gt; https://github.com/apache/camel/blob/master/components/camel-coap/src/test/java/org/apache/camel/coap/CoAPRestVerbTest.java#L106&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
722,726,,[jira] [Created] (CAMEL-11180) Place Eclipse workspace setup in camel-etc in a profile,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13050071.1489159933000.65910.1493297884361%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 12:58:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10985?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986561#comment-15986561&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10985:&#010;----------------------------------------&#010;&#010;Github user jamesnetherton closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1665&#010;&#010;&#010;&gt; camel-coap fails to return results when enableCORS(true) is set&#010;&gt; ---------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10985&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10985&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-coap&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Scott Cranton&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; In the CoAPRestVerbTest, if you add to the restConfiguration() .enableCORS(true), then&#010;all of the unit tests that return a result fail as no response is returned&#010;&gt; https://github.com/apache/camel/blob/master/components/camel-coap/src/test/java/org/apache/camel/coap/CoAPRestVerbTest.java#L106&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
723,727,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11180) Place Eclipse workspace setup in camel-etc in a profile,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065816.1492766069000.16681.1492766105156%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 09:15:05 GMT",Zoran Regvart created CAMEL-11180:&#010;-------------------------------------&#010;&#010;             Summary: Place Eclipse workspace setup in camel-etc in a profile&#010;                 Key: CAMEL-11180&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11180&#010;             Project: Camel&#010;          Issue Type: Task&#010;          Components: tooling&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;            Priority: Trivial&#010;&#010;&#010;See the discussion on [To put eclipse setup in camel-etc in profile? |http://camel.465427.n5.nabble.com/To-put-eclipse-setup-in-camel-etc-in-profile-tp5797966.html]&#010;at the camel-dev mailing list.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
724,728,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11180) Place Eclipse workspace setup in camel-etc in a profile,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065816.1492766069000.16870.1492767724188%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 09:42:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11180?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11180.&#010;-----------------------------------&#010;       Resolution: Done&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Place Eclipse workspace setup in camel-etc in a profile&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11180&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11180&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See the discussion on [To put eclipse setup in camel-etc in profile? |http://camel.465427.n5.nabble.com/To-put-eclipse-setup-in-camel-etc-in-profile-tp5797966.html]&#010;at the camel-dev mailing list.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
725,729,,[jira] [Created] (CAMEL-11181) Replace gmaven with gmavenplus Maven plugin,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065816.1492766069000.16870.1492767724188%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 09:42:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11180?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11180.&#010;-----------------------------------&#010;       Resolution: Done&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Place Eclipse workspace setup in camel-etc in a profile&#010;&gt; -------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11180&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11180&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: tooling&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See the discussion on [To put eclipse setup in camel-etc in profile? |http://camel.465427.n5.nabble.com/To-put-eclipse-setup-in-camel-etc-in-profile-tp5797966.html]&#010;at the camel-dev mailing list.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
726,730,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11181) Replace gmaven with gmavenplus Maven plugin,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065827.1492769301000.17127.1492769344130%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 10:09:04 GMT",Zoran Regvart created CAMEL-11181:&#010;-------------------------------------&#010;&#010;             Summary: Replace gmaven with gmavenplus Maven plugin&#010;                 Key: CAMEL-11181&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11181&#010;             Project: Camel&#010;          Issue Type: Task&#010;          Components: build system&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;            Priority: Trivial&#010;&#010;&#010;See the discussion [Camel 2.19 Roadmap|http://camel.465427.n5.nabble.com/Camel-2-19-Roadmap-tp5792559p5798015.html]&#010;on the camel-dev mailing list.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
727,731,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11181) Replace gmaven with gmavenplus Maven plugin,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065827.1492769301000.17159.1492769524351%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 10:12:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11181?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978445#comment-15978445&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11181:&#010;----------------------------------------&#010;&#010;GitHub user zregvart opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1651&#010;&#010;    CAMEL-11181 Replace gmaven with gmavenplus Maven plugin&#010;&#010;    This replaces the use of `gmaven` plugin with `gmavenplus` plugin.&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/zregvart/camel CAMEL-11181&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1651.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1651&#010;    &#010;----&#010;commit 8d9c106588777b284299592555b9c4a18b1a4f0b&#010;Author: Zoran Regvart &lt;zregvart@apache.org&gt;&#010;Date:   2017-04-21T10:10:00Z&#010;&#010;    CAMEL-11181 Replace gmaven with gmavenplus Mave...&#010;    &#010;    ...n plugin&#010;    &#010;    This replaces the use of `gmaven` plugin with `gmavenplus` plugin.&#010;&#010;----&#010;&#010;&#010;&gt; Replace gmaven with gmavenplus Maven plugin&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11181&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11181&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;&#010;&gt; See the discussion [Camel 2.19 Roadmap|http://camel.465427.n5.nabble.com/Camel-2-19-Roadmap-tp5792559p5798015.html]&#010;on the camel-dev mailing list.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
728,732,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11181) Replace gmaven with gmavenplus Maven plugin,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065827.1492769301000.17772.1492775824095%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 11:57:04 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11181?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978575#comment-15978575&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11181:&#010;----------------------------------------&#010;&#010;Github user zregvart closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1651&#010;&#010;&#010;&gt; Replace gmaven with gmavenplus Maven plugin&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11181&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11181&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;&#010;&gt; See the discussion [Camel 2.19 Roadmap|http://camel.465427.n5.nabble.com/Camel-2-19-Roadmap-tp5792559p5798015.html]&#010;on the camel-dev mailing list.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
729,733,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11181) Replace gmaven with gmavenplus Maven plugin,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065827.1492769301000.17777.1492775884162%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 11:58:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11181?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11181.&#010;-----------------------------------&#010;       Resolution: Done&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Replace gmaven with gmavenplus Maven plugin&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11181&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11181&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See the discussion [Camel 2.19 Roadmap|http://camel.465427.n5.nabble.com/Camel-2-19-Roadmap-tp5792559p5798015.html]&#010;on the camel-dev mailing list.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
730,734,,[jira] [Commented] (CAMEL-10141) Test Apache Camel on Java 9,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065827.1492769301000.17777.1492775884162%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 11:58:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11181?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11181.&#010;-----------------------------------&#010;       Resolution: Done&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Replace gmaven with gmavenplus Maven plugin&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11181&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11181&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Trivial&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; See the discussion [Camel 2.19 Roadmap|http://camel.465427.n5.nabble.com/Camel-2-19-Roadmap-tp5792559p5798015.html]&#010;on the camel-dev mailing list.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
731,735,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10141) Test Apache Camel on Java 9,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12989102.1468413610000.18399.1492779244407%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 12:54:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10141?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978686#comment-15978686&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10141:&#010;----------------------------------------&#010;&#010;GitHub user johnpoth opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1653&#010;&#010;    CAMEL-10141 upgrade to Java 9 build 165&#010;&#010;    This PR makes more modules unit tests pass on the latest Java 9 build 165&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/johnpoth/camel CAMEL-10141&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1653.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1653&#010;    &#010;----&#010;commit 8f7c92b36156e1337a56fe1388ef40abad1f5d8d&#010;Author: jpoth &lt;poth.john@gmail.com&gt;&#010;Date:   2017-04-18T18:27:19Z&#010;&#010;    CAMEL-10141: make camel-test tests pass on Java 9&#010;&#010;commit ecbd9ff2515a1f17c525ca6f594a627c6b18d4cd&#010;Author: jpoth &lt;poth.john@gmail.com&gt;&#010;Date:   2017-04-20T17:14:00Z&#010;&#010;    CAMEL-10141: make camel-example-rest-producer tests pass on Java 9&#010;&#010;commit e37ef278e8169b5af49cd3114458ae9313e75e9d&#010;Author: jpoth &lt;poth.john@gmail.com&gt;&#010;Date:   2017-04-21T10:11:45Z&#010;&#010;    CAMEL-10141: skip opentracing tests on Java 9 until Byteman upgrade to 4.x&#010;&#010;commit e79925e1ccb764541a0c0ff4b367cd049ccad96b&#010;Author: jpoth &lt;poth.john@gmail.com&gt;&#010;Date:   2017-04-21T10:13:55Z&#010;&#010;    CAMEL-10141: make camel-eip-documentation-enricher-maven-plugin tests pass on Java 9&#010;&#010;commit 2f039df6ea133e570d42352ae9e6724f5f24c35a&#010;Author: jpoth &lt;poth.john@gmail.com&gt;&#010;Date:   2017-04-21T12:47:06Z&#010;&#010;    CAMEL-10141: make camel-testng tests pass on Java 9&#010;&#010;commit e76424ef50b8670144690ad90ec43a769ed4a57e&#010;Author: jpoth &lt;poth.john@gmail.com&gt;&#010;Date:   2017-04-21T12:47:26Z&#010;&#010;    CAMEL-10141: make camel-test-spring tests pass on Java 9&#010;&#010;commit 4d149be9c759394a5af53a3b648a917620d6e572&#010;Author: jpoth &lt;poth.john@gmail.com&gt;&#010;Date:   2017-04-21T12:47:48Z&#010;&#010;    CAMEL-10141: make camel-spring-javaconfig tests pass on Java 9&#010;&#010;commit 8272be50d8caa2430a8ea106e87f2dd2f74388ac&#010;Author: jpoth &lt;poth.john@gmail.com&gt;&#010;Date:   2017-04-21T12:51:10Z&#010;&#010;    CAMEL-10141: make camel-spring tests pass on Java 9. This required the use of Java's native&#010;shemagen instead of jaxb-xjc's embedded schemagen which doesn't work on Java 9&#010;&#010;----&#010;&#010;&#010;&gt; Test Apache Camel on Java 9&#010;&gt; ---------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10141&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10141&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: build system&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; To find out early if we have problems with Java 9 and Apache Camel.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
732,736,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-10141) Test Apache Camel on Java 9,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12989102.1468413610000.18560.1492780684103%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 13:18:04 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10141?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978715#comment-15978715&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10141:&#010;----------------------------------------&#010;&#010;Github user johnpoth closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1653&#010;&#010;&#010;&gt; Test Apache Camel on Java 9&#010;&gt; ---------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10141&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10141&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: build system&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; To find out early if we have problems with Java 9 and Apache Camel.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
733,737,,[jira] [Assigned] (CAMEL-5723) camel-jaxb: partClass and partNamespace dynamically set by header,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12989102.1468413610000.18560.1492780684103%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 13:18:04 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-10141?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978715#comment-15978715&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-10141:&#010;----------------------------------------&#010;&#010;Github user johnpoth closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1653&#010;&#010;&#010;&gt; Test Apache Camel on Java 9&#010;&gt; ---------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-10141&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-10141&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: build system&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; To find out early if we have problems with Java 9 and Apache Camel.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
734,738,onder sezgin (JIRA),  [jira] [Assigned] (CAMEL-5723) camel-jaxb: partClass and partNamespace dynamically set by header,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12612838.1350750177000.18821.1492783024061%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 13:57:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-5723?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;onder sezgin reassigned CAMEL-5723:&#010;-----------------------------------&#010;&#010;    Assignee: onder sezgin&#010;&#010;&gt; camel-jaxb: partClass and partNamespace dynamically set by header&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-5723&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-5723&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-jaxb&#010;&gt;            Reporter: RaÃºl Kripalani&#010;&gt;            Assignee: onder sezgin&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; The Camel JAXB Data Format allows to specify a partClass and partNamespace on the data&#010;format configuration. &#010;&gt; If you have many cases of partial marshalling or unmarshalling, you're forced to configure&#010;as many data formats as part classes you'll ever need to handle.&#010;&gt; Aside from being inconvenient, it makes route initialisation pretty inefficient because&#010;a JAXBContext is created per data format, performing a full scan and reflection of the package&#010;each time. Slows down route startup considerably.&#010;&gt; Enhance the Camel JAXB Data Format so that it's capable of doing partial unmarshalling&#010;at runtime based on message headers.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
735,739,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-5723) camel-jaxb: partClass and partNamespace dynamically set by header,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12612838.1350750177000.63328.1493275444202%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 06:44:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-5723?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986108#comment-15986108&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-5723:&#010;---------------------------------------&#010;&#010;GitHub user onders86 opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1663&#010;&#010;    CAMEL-5723 - set headers while setting partClass and partNamespace properties and update&#010;adoc&#010;&#010;    &#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/onders86/camel CAMEL-5723&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1663.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1663&#010;    &#010;----&#010;commit 99942c8c03ca3a0635c9c785f21502fbfef3212c&#010;Author: onders86 &lt;ondersezgin@gmail.com&gt;&#010;Date:   2017-04-27T06:16:24Z&#010;&#010;    CAMEL-5723 - set headers while setting partClass and partNamespace properties&#010;&#010;commit ae986fe4d02360fa14712e119d53d39e6b8fbef4&#010;Author: onders86 &lt;ondersezgin@gmail.com&gt;&#010;Date:   2017-04-27T06:16:56Z&#010;&#010;    CAMEL-5723 - update adoc&#010;&#010;----&#010;&#010;&#010;&gt; camel-jaxb: partClass and partNamespace dynamically set by header&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-5723&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-5723&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-jaxb&#010;&gt;            Reporter: RaÃºl Kripalani&#010;&gt;            Assignee: onder sezgin&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; The Camel JAXB Data Format allows to specify a partClass and partNamespace on the data&#010;format configuration. &#010;&gt; If you have many cases of partial marshalling or unmarshalling, you're forced to configure&#010;as many data formats as part classes you'll ever need to handle.&#010;&gt; Aside from being inconvenient, it makes route initialisation pretty inefficient because&#010;a JAXBContext is created per data format, performing a full scan and reflection of the package&#010;each time. Slows down route startup considerably.&#010;&gt; Enhance the Camel JAXB Data Format so that it's capable of doing partial unmarshalling&#010;at runtime based on message headers.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
736,740,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-5723) camel-jaxb: partClass and partNamespace dynamically set by header,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12612838.1350750177000.64370.1493285644317%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 09:34:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-5723?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-5723:&#010;-------------------------------&#010;    Fix Version/s:     (was: Future)&#010;                   2.20.0&#010;&#010;&gt; camel-jaxb: partClass and partNamespace dynamically set by header&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-5723&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-5723&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-jaxb&#010;&gt;            Reporter: RaÃºl Kripalani&#010;&gt;            Assignee: onder sezgin&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; The Camel JAXB Data Format allows to specify a partClass and partNamespace on the data&#010;format configuration. &#010;&gt; If you have many cases of partial marshalling or unmarshalling, you're forced to configure&#010;as many data formats as part classes you'll ever need to handle.&#010;&gt; Aside from being inconvenient, it makes route initialisation pretty inefficient because&#010;a JAXBContext is created per data format, performing a full scan and reflection of the package&#010;each time. Slows down route startup considerably.&#010;&gt; Enhance the Camel JAXB Data Format so that it's capable of doing partial unmarshalling&#010;at runtime based on message headers.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
737,741,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-5723) camel-jaxb: partClass and partNamespace dynamically set by header,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12612838.1350750177000.64638.1493288044103%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 10:14:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-5723?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986319#comment-15986319&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-5723:&#010;---------------------------------------&#010;&#010;Github user onders86 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1663&#010;&#010;&#010;&gt; camel-jaxb: partClass and partNamespace dynamically set by header&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-5723&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-5723&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-jaxb&#010;&gt;            Reporter: RaÃºl Kripalani&#010;&gt;            Assignee: onder sezgin&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; The Camel JAXB Data Format allows to specify a partClass and partNamespace on the data&#010;format configuration. &#010;&gt; If you have many cases of partial marshalling or unmarshalling, you're forced to configure&#010;as many data formats as part classes you'll ever need to handle.&#010;&gt; Aside from being inconvenient, it makes route initialisation pretty inefficient because&#010;a JAXBContext is created per data format, performing a full scan and reflection of the package&#010;each time. Slows down route startup considerably.&#010;&gt; Enhance the Camel JAXB Data Format so that it's capable of doing partial unmarshalling&#010;at runtime based on message headers.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
738,742,,[jira] [Created] (CAMEL-11182) SolrParams are not honored when sending SolrInputDocument.,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12612838.1350750177000.64638.1493288044103%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 10:14:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-5723?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986319#comment-15986319&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-5723:&#010;---------------------------------------&#010;&#010;Github user onders86 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1663&#010;&#010;&#010;&gt; camel-jaxb: partClass and partNamespace dynamically set by header&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-5723&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-5723&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-jaxb&#010;&gt;            Reporter: RaÃºl Kripalani&#010;&gt;            Assignee: onder sezgin&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; The Camel JAXB Data Format allows to specify a partClass and partNamespace on the data&#010;format configuration. &#010;&gt; If you have many cases of partial marshalling or unmarshalling, you're forced to configure&#010;as many data formats as part classes you'll ever need to handle.&#010;&gt; Aside from being inconvenient, it makes route initialisation pretty inefficient because&#010;a JAXBContext is created per data format, performing a full scan and reflection of the package&#010;each time. Slows down route startup considerably.&#010;&gt; Enhance the Camel JAXB Data Format so that it's capable of doing partial unmarshalling&#010;at runtime based on message headers.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
739,743,Chirag Anand (JIRA),  [jira] [Created] (CAMEL-11182) SolrParams are not honored when sending SolrInputDocument.,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065890.1492784107000.18975.1492784164111%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 14:16:04 GMT","Chirag Anand created CAMEL-11182:&#010;------------------------------------&#010;&#010;             Summary: SolrParams are not honored when sending SolrInputDocument.&#010;                 Key: CAMEL-11182&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11182&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-solr&#010;    Affects Versions: 2.18.3&#010;         Environment: Apache Solr , Apache Camel&#010;            Reporter: Chirag Anand&#010;&#010;&#010;I have an update Processor chain which triggers during every update of the solr document which&#010;requires SolrParams to be passed. I noticed SolrParams is not applicable when trying to push&#010;SolrInputSocument(referring to SolrProducer.java). Can i submit a fix for this? &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
740,744,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11182) SolrParams are not honored when sending SolrInputDocument.,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065890.1492784107000.19659.1492788364363%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 15:26:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11182?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15978928#comment-15978928&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11182:&#010;-------------------------------------&#010;&#010;Yes we love contributions.&#010;http://camel.apache.org/contributing&#010;&#010;&gt; SolrParams are not honored when sending SolrInputDocument.&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11182&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11182&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-solr&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Apache Solr , Apache Camel&#010;&gt;            Reporter: Chirag Anand&#010;&gt;&#010;&gt; I have an update Processor chain which triggers during every update of the solr document&#010;which requires SolrParams to be passed. I noticed SolrParams is not applicable when trying&#010;to push SolrInputSocument(referring to SolrProducer.java). Can i submit a fix for this? &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
741,745,Chirag Anand (JIRA),  [jira] [Updated] (CAMEL-11182) SolrParams are not honored when sending SolrInputDocument.,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065890.1492784107000.19692.1492788964179%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 15:36:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11182?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Chirag Anand updated CAMEL-11182:&#010;---------------------------------&#010;    Description: I have an update Processor chain which triggers during every update of the&#010;solr document which requires SolrParams to be passed. I noticed SolrParams is not applicable&#010;when trying to push SolrInputDocument(referring to SolrProducer.java). Can i submit a fix&#010;for this?   (was: I have an update Processor chain which triggers during every update of the&#010;solr document which requires SolrParams to be passed. I noticed SolrParams is not applicable&#010;when trying to push SolrInputSocument(referring to SolrProducer.java). Can i submit a fix&#010;for this? )&#010;&#010;&gt; SolrParams are not honored when sending SolrInputDocument.&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11182&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11182&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-solr&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Apache Solr , Apache Camel&#010;&gt;            Reporter: Chirag Anand&#010;&gt;&#010;&gt; I have an update Processor chain which triggers during every update of the solr document&#010;which requires SolrParams to be passed. I noticed SolrParams is not applicable when trying&#010;to push SolrInputDocument(referring to SolrProducer.java). Can i submit a fix for this? &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
742,746,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11182) SolrParams are not honored when sending SolrInputDocument.,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065890.1492784107000.30429.1493011924231%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 05:32:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11182?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15980741#comment-15980741&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11182:&#010;----------------------------------------&#010;&#010;GitHub user chirag0103 opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1655&#010;&#010;    [CAMEL-11182]SolrParams are not honored when sending SolrInputDocument.&#010;&#010;    This change is necessary when you intend to have an update processor chain to be trigerred&#010;or any such for which parameters are to be passed along with the url.&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/chirag0103/camel master&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1655.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1655&#010;    &#010;----&#010;commit a16ab7aabea7402e45d4743aa3135ce4da8be019&#010;Author: Chirag Anand &lt;canand@gp.cv.commvault.com&gt;&#010;Date:   2017-04-24T05:13:08Z&#010;&#010;    Added the provision to pass Solr Params when pushing SolrInputDocuments.&#010;    &#010;    This change is necessary when you intend to have an update processor chain to be trigerred&#010;or any such for which parameters are to be passed along with the url.&#010;&#010;----&#010;&#010;&#010;&gt; SolrParams are not honored when sending SolrInputDocument.&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11182&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11182&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-solr&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Apache Solr , Apache Camel&#010;&gt;            Reporter: Chirag Anand&#010;&gt;&#010;&gt; I have an update Processor chain which triggers during every update of the solr document&#010;which requires SolrParams to be passed. I noticed SolrParams is not applicable when trying&#010;to push SolrInputDocument(referring to SolrProducer.java). Can i submit a fix for this? &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
743,747,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11182) SolrParams are not honored when sending SolrInputDocument.,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065890.1492784107000.31186.1493022304217%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 08:25:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11182?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11182:&#010;--------------------------------&#010;    Fix Version/s: 2.19.0&#010;                   2.18.4&#010;&#010;&gt; SolrParams are not honored when sending SolrInputDocument.&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11182&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11182&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-solr&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Apache Solr , Apache Camel&#010;&gt;            Reporter: Chirag Anand&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; I have an update Processor chain which triggers during every update of the solr document&#010;which requires SolrParams to be passed. I noticed SolrParams is not applicable when trying&#010;to push SolrInputDocument(referring to SolrProducer.java). Can i submit a fix for this? &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
744,748,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11182) SolrParams are not honored when sending SolrInputDocument.,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065890.1492784107000.31189.1493022364163%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 08:26:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11182?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11182.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;Thanks for the PR&#010;&#010;&gt; SolrParams are not honored when sending SolrInputDocument.&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11182&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11182&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-solr&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Apache Solr , Apache Camel&#010;&gt;            Reporter: Chirag Anand&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; I have an update Processor chain which triggers during every update of the solr document&#010;which requires SolrParams to be passed. I noticed SolrParams is not applicable when trying&#010;to push SolrInputDocument(referring to SolrProducer.java). Can i submit a fix for this? &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
745,749,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11182) SolrParams are not honored when sending SolrInputDocument.,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065890.1492784107000.31462.1493025064581%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 09:11:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11182?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15980911#comment-15980911&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11182:&#010;----------------------------------------&#010;&#010;Github user chirag0103 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1655&#010;&#010;&#010;&gt; SolrParams are not honored when sending SolrInputDocument.&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11182&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11182&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-solr&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Apache Solr , Apache Camel&#010;&gt;            Reporter: Chirag Anand&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; I have an update Processor chain which triggers during every update of the solr document&#010;which requires SolrParams to be passed. I noticed SolrParams is not applicable when trying&#010;to push SolrInputDocument(referring to SolrProducer.java). Can i submit a fix for this? &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
746,750,,[jira] [Created] (CAMEL-11183) Checkstyle errors in camel-package-maven-plugin,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065890.1492784107000.31462.1493025064581%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 09:11:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11182?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15980911#comment-15980911&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11182:&#010;----------------------------------------&#010;&#010;Github user chirag0103 closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1655&#010;&#010;&#010;&gt; SolrParams are not honored when sending SolrInputDocument.&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11182&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11182&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-solr&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;         Environment: Apache Solr , Apache Camel&#010;&gt;            Reporter: Chirag Anand&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.18.4, 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; I have an update Processor chain which triggers during every update of the solr document&#010;which requires SolrParams to be passed. I noticed SolrParams is not applicable when trying&#010;to push SolrInputDocument(referring to SolrProducer.java). Can i submit a fix for this? &#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
747,751,Gregor Zurowski (JIRA),  [jira] [Created] (CAMEL-11183) Checkstyle errors in camel-package-maven-plugin,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065935.1492791938000.20120.1492791964093%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 16:26:04 GMT",Gregor Zurowski created CAMEL-11183:&#010;---------------------------------------&#010;&#010;             Summary: Checkstyle errors in camel-package-maven-plugin&#010;                 Key: CAMEL-11183&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11183&#010;             Project: Camel&#010;          Issue Type: Task&#010;          Components: camel-package-maven-plugin&#010;    Affects Versions: 2.19.0&#010;            Reporter: Gregor Zurowski&#010;            Assignee: Gregor Zurowski&#010;            Priority: Minor&#010;&#010;&#010;The following Checkstyle errors are reported for the camel-package-maven-plugin module:&#010;&#010;{code}&#010;[ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PackageDataFormatMojo.java:105:5:&#010;Executable statement count is 101 (max allowed is 100). [ExecutableStatementCount]&#010;[ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PackageHelper.java:165:13:&#010;Boolean expression complexity is 7 (max allowed is 6). [BooleanExpressionComplexity]&#010;[ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogKarafMojo.java:394:21:&#010;Boolean expression complexity is 9 (max allowed is 6). [BooleanExpressionComplexity]&#010;[ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogMojo.java:323:5:&#010;Executable statement count is 109 (max allowed is 100). [ExecutableStatementCount]&#010;[ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogMojo.java:795:21:&#010;Boolean expression complexity is 9 (max allowed is 6). [BooleanExpressionComplexity]&#010;[ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogSpringBootMojo.java:426:21:&#010;Boolean expression complexity is 9 (max allowed is 6). [BooleanExpressionComplexity]&#010;{code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
748,752,Gregor Zurowski (JIRA),  [jira] [Assigned] (CAMEL-11183) Checkstyle errors in camel-package-maven-plugin,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065935.1492791938000.20123.1492791964118%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 16:26:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11183?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Gregor Zurowski reassigned CAMEL-11183:&#010;---------------------------------------&#010;&#010;    Assignee:     (was: Gregor Zurowski)&#010;&#010;&gt; Checkstyle errors in camel-package-maven-plugin&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11183&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11183&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-package-maven-plugin&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Gregor Zurowski&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; The following Checkstyle errors are reported for the camel-package-maven-plugin module:&#010;&gt; {code}&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PackageDataFormatMojo.java:105:5:&#010;Executable statement count is 101 (max allowed is 100). [ExecutableStatementCount]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PackageHelper.java:165:13:&#010;Boolean expression complexity is 7 (max allowed is 6). [BooleanExpressionComplexity]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogKarafMojo.java:394:21:&#010;Boolean expression complexity is 9 (max allowed is 6). [BooleanExpressionComplexity]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogMojo.java:323:5:&#010;Executable statement count is 109 (max allowed is 100). [ExecutableStatementCount]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogMojo.java:795:21:&#010;Boolean expression complexity is 9 (max allowed is 6). [BooleanExpressionComplexity]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogSpringBootMojo.java:426:21:&#010;Boolean expression complexity is 9 (max allowed is 6). [BooleanExpressionComplexity]&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
749,753,Claus Ibsen (JIRA),  [jira] [Assigned] (CAMEL-11183) Checkstyle errors in camel-package-maven-plugin,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065935.1492791938000.20716.1492796164108%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 17:36:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11183?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reassigned CAMEL-11183:&#010;-----------------------------------&#010;&#010;    Assignee: Claus Ibsen&#010;&#010;&gt; Checkstyle errors in camel-package-maven-plugin&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11183&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11183&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-package-maven-plugin&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Gregor Zurowski&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; The following Checkstyle errors are reported for the camel-package-maven-plugin module:&#010;&gt; {code}&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PackageDataFormatMojo.java:105:5:&#010;Executable statement count is 101 (max allowed is 100). [ExecutableStatementCount]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PackageHelper.java:165:13:&#010;Boolean expression complexity is 7 (max allowed is 6). [BooleanExpressionComplexity]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogKarafMojo.java:394:21:&#010;Boolean expression complexity is 9 (max allowed is 6). [BooleanExpressionComplexity]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogMojo.java:323:5:&#010;Executable statement count is 109 (max allowed is 100). [ExecutableStatementCount]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogMojo.java:795:21:&#010;Boolean expression complexity is 9 (max allowed is 6). [BooleanExpressionComplexity]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogSpringBootMojo.java:426:21:&#010;Boolean expression complexity is 9 (max allowed is 6). [BooleanExpressionComplexity]&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
750,754,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11183) Checkstyle errors in camel-package-maven-plugin,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065935.1492791938000.20757.1492796764396%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 17:46:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11183?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11183.&#010;---------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Checkstyle errors in camel-package-maven-plugin&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11183&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11183&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-package-maven-plugin&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Gregor Zurowski&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The following Checkstyle errors are reported for the camel-package-maven-plugin module:&#010;&gt; {code}&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PackageDataFormatMojo.java:105:5:&#010;Executable statement count is 101 (max allowed is 100). [ExecutableStatementCount]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PackageHelper.java:165:13:&#010;Boolean expression complexity is 7 (max allowed is 6). [BooleanExpressionComplexity]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogKarafMojo.java:394:21:&#010;Boolean expression complexity is 9 (max allowed is 6). [BooleanExpressionComplexity]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogMojo.java:323:5:&#010;Executable statement count is 109 (max allowed is 100). [ExecutableStatementCount]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogMojo.java:795:21:&#010;Boolean expression complexity is 9 (max allowed is 6). [BooleanExpressionComplexity]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogSpringBootMojo.java:426:21:&#010;Boolean expression complexity is 9 (max allowed is 6). [BooleanExpressionComplexity]&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
751,755,,[jira] [Created] (CAMEL-11184) tests - Add missing tests to itest spring boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13065935.1492791938000.20757.1492796764396%40Atlassian.JIRA%3E,issues,"Fri, 21 Apr 2017 17:46:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11183?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11183.&#010;---------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Checkstyle errors in camel-package-maven-plugin&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11183&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11183&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-package-maven-plugin&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Gregor Zurowski&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The following Checkstyle errors are reported for the camel-package-maven-plugin module:&#010;&gt; {code}&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PackageDataFormatMojo.java:105:5:&#010;Executable statement count is 101 (max allowed is 100). [ExecutableStatementCount]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PackageHelper.java:165:13:&#010;Boolean expression complexity is 7 (max allowed is 6). [BooleanExpressionComplexity]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogKarafMojo.java:394:21:&#010;Boolean expression complexity is 9 (max allowed is 6). [BooleanExpressionComplexity]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogMojo.java:323:5:&#010;Executable statement count is 109 (max allowed is 100). [ExecutableStatementCount]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogMojo.java:795:21:&#010;Boolean expression complexity is 9 (max allowed is 6). [BooleanExpressionComplexity]&#010;&gt; [ERROR] C:\var\git\camel\tooling\maven\camel-package-maven-plugin\src\main\java\org\apache\camel\maven\packaging\PrepareCatalogSpringBootMojo.java:426:21:&#010;Boolean expression complexity is 9 (max allowed is 6). [BooleanExpressionComplexity]&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
752,756,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11184) tests - Add missing tests to itest spring boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066060.1492845532000.25260.1492845544026%40Atlassian.JIRA%3E,issues,"Sat, 22 Apr 2017 07:19:04 GMT","Claus Ibsen created CAMEL-11184:&#010;-----------------------------------&#010;&#010;             Summary: tests - Add missing tests to itest spring boot&#010;                 Key: CAMEL-11184&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11184&#010;             Project: Camel&#010;          Issue Type: Test&#010;          Components: camel-spring-boot, tests&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.20.0&#010;&#010;&#010;In tests/camel-itest-spring-boot there is a bunch of integration tests of the components running&#010;on spring boot.&#010;&#010;But as we have added new components then some are not added here. We should look at the delta&#010;and add the missing tests.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
753,757,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11184) tests - Add missing tests to itest spring boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066060.1492845532000.31329.1493024104121%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 08:55:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11184?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15980890#comment-15980890&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11184:&#010;-------------------------------------&#010;&#010;[~nferraro] just an observation that the spring boot integration tests does not have all the&#010;-starter modules in the tests. It would be good to find the missing gabs and then get them&#010;added.&#010;&#010;&#010;&gt; tests - Add missing tests to itest spring boot&#010;&gt; ----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11184&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11184&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: camel-spring-boot, tests&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; In tests/camel-itest-spring-boot there is a bunch of integration tests of the components&#010;running on spring boot.&#010;&gt; But as we have added new components then some are not added here. We should look at the&#010;delta and add the missing tests.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
754,758,,[jira] [Created] (CAMEL-11185) Remove camel-scr-starter spring boot module,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066060.1492845532000.31329.1493024104121%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 08:55:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11184?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15980890#comment-15980890&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11184:&#010;-------------------------------------&#010;&#010;[~nferraro] just an observation that the spring boot integration tests does not have all the&#010;-starter modules in the tests. It would be good to find the missing gabs and then get them&#010;added.&#010;&#010;&#010;&gt; tests - Add missing tests to itest spring boot&#010;&gt; ----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11184&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11184&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Test&#010;&gt;          Components: camel-spring-boot, tests&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; In tests/camel-itest-spring-boot there is a bunch of integration tests of the components&#010;running on spring boot.&#010;&gt; But as we have added new components then some are not added here. We should look at the&#010;delta and add the missing tests.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
755,759,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11185) Remove camel-scr-starter spring boot module,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066061.1492845925000.25265.1492845964027%40Atlassian.JIRA%3E,issues,"Sat, 22 Apr 2017 07:26:04 GMT",Claus Ibsen created CAMEL-11185:&#010;-----------------------------------&#010;&#010;             Summary: Remove camel-scr-starter spring boot module&#010;                 Key: CAMEL-11185&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11185&#010;             Project: Camel&#010;          Issue Type: Task&#010;          Components: camel-spring-boot&#010;            Reporter: Claus Ibsen&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;This does not make sense as SCR is for OSGi and cannot run inside spring-boot.&#010;&#010;There is also an tests in tests/camel-itest-spring-boot which should be removed&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
756,760,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11185) Remove camel-scr-starter spring boot module,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066061.1492845925000.31250.1493022844306%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 08:34:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11185?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11185.&#010;---------------------------------&#010;       Resolution: Fixed&#010;         Assignee: Claus Ibsen&#010;    Fix Version/s:     (was: 2.20.0)&#010;                   2.19.0&#010;&#010;&gt; Remove camel-scr-starter spring boot module&#010;&gt; -------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11185&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11185&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-spring-boot&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; This does not make sense as SCR is for OSGi and cannot run inside spring-boot.&#010;&gt; There is also an tests in tests/camel-itest-spring-boot which should be removed&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
757,762,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11186) Upgrade dropwizard metrics,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066068.1492851115000.25355.1492851124023%40Atlassian.JIRA%3E,issues,"Sat, 22 Apr 2017 08:52:04 GMT",Claus Ibsen created CAMEL-11186:&#010;-----------------------------------&#010;&#010;             Summary: Upgrade dropwizard metrics&#010;                 Key: CAMEL-11186&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11186&#010;             Project: Camel&#010;          Issue Type: Task&#010;          Components: camel-metrics&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.20.0&#010;&#010;&#010;There is a newer 3.2.x release and we are on 3.1.x. But it failed an test in the spring boot&#010;integration tests. So we need to find out why.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
758,763,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11186) Upgrade dropwizard metrics,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066068.1492851115000.32168.1493034604058%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 11:50:04 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11186?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981038#comment-15981038&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11186:&#010;-------------------------------------&#010;&#010;Ah its due spring boot comes with metrics-json 3.1.3 and then there is a miss-match&#010;&#010;&gt; Upgrade dropwizard metrics&#010;&gt; --------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11186&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11186&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-metrics&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; There is a newer 3.2.x release and we are on 3.1.x. But it failed an test in the spring&#010;boot integration tests. So we need to find out why.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
759,764,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11186) Upgrade dropwizard metrics,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066068.1492851115000.42330.1493108524242%40Atlassian.JIRA%3E,issues,"Tue, 25 Apr 2017 08:22:04 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11186?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15982552#comment-15982552&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11186:&#010;-------------------------------------&#010;&#010;We upgraded to latest 3.1.3 on 2.19 release and will keep an eye on SB when we can upgraded&#010;again&#010;&#010;&gt; Upgrade dropwizard metrics&#010;&gt; --------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11186&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11186&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-metrics&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; There is a newer 3.2.x release and we are on 3.1.x. But it failed an test in the spring&#010;boot integration tests. So we need to find out why.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
760,765,,[jira] [Created] (CAMEL-11187) Java 9 - building camel-spring has a maven WARN,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066068.1492851115000.42330.1493108524242%40Atlassian.JIRA%3E,issues,"Tue, 25 Apr 2017 08:22:04 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11186?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15982552#comment-15982552&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11186:&#010;-------------------------------------&#010;&#010;We upgraded to latest 3.1.3 on 2.19 release and will keep an eye on SB when we can upgraded&#010;again&#010;&#010;&gt; Upgrade dropwizard metrics&#010;&gt; --------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11186&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11186&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-metrics&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; There is a newer 3.2.x release and we are on 3.1.x. But it failed an test in the spring&#010;boot integration tests. So we need to find out why.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
761,766,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11187) Java 9 - building camel-spring has a maven WARN,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066069.1492851604000.25365.1492851611685%40Atlassian.JIRA%3E,issues,"Sat, 22 Apr 2017 09:00:11 GMT","Claus Ibsen created CAMEL-11187:&#010;-----------------------------------&#010;&#010;             Summary: Java 9 - building camel-spring has a maven WARN&#010;                 Key: CAMEL-11187&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11187&#010;             Project: Camel&#010;          Issue Type: Task&#010;            Reporter: Claus Ibsen&#010;            Priority: Minor&#010;&#010;&#010;davsclaus:/Users/davsclaus/workspace/camel/components/camel-spring (master)/$ mvn clean install&#010;-P fastinstall&#010;[INFO] Scanning for projects...&#010;[WARNING]&#010;[WARNING] Some problems were encountered while building the effective model for org.apache.camel:camel-spring:jar:2.19.0-SNAPSHOT&#010;[WARNING] 'profiles.profile[jdk9-build].plugins.plugin.(groupId:artifactId)' must be unique&#010;but found duplicate declaration of plugin org.apache.maven.plugins:maven-antrun-plugin @ org.apache.camel:camel-spring:[unknown-version],&#010;/Users/davsclaus/workspace/camel/components/camel-spring/pom.xml, line 676, column 19&#010;[WARNING]&#010;[WARNING] It is highly recommended to fix these problems because they threaten the stability&#010;of your build.&#010;[WARNING]&#010;[WARNING] For this reason, future Maven versions might no longer support building such malformed&#010;projects.&#010;[WARNING]&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
762,767,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11187) Java 9 - building camel-spring has a maven WARN,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066069.1492851604000.25543.1492857964055%40Atlassian.JIRA%3E,issues,"Sat, 22 Apr 2017 10:46:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11187?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11187:&#010;--------------------------------&#010;    Fix Version/s: 2.20.0&#010;&#010;&gt; Java 9 - building camel-spring has a maven WARN&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11187&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11187&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; davsclaus:/Users/davsclaus/workspace/camel/components/camel-spring (master)/$ mvn clean&#010;install -P fastinstall&#010;&gt; [INFO] Scanning for projects...&#010;&gt; [WARNING]&#010;&gt; [WARNING] Some problems were encountered while building the effective model for org.apache.camel:camel-spring:jar:2.19.0-SNAPSHOT&#010;&gt; [WARNING] 'profiles.profile[jdk9-build].plugins.plugin.(groupId:artifactId)' must be&#010;unique but found duplicate declaration of plugin org.apache.maven.plugins:maven-antrun-plugin&#010;@ org.apache.camel:camel-spring:[unknown-version], /Users/davsclaus/workspace/camel/components/camel-spring/pom.xml,&#010;line 676, column 19&#010;&gt; [WARNING]&#010;&gt; [WARNING] It is highly recommended to fix these problems because they threaten the stability&#010;of your build.&#010;&gt; [WARNING]&#010;&gt; [WARNING] For this reason, future Maven versions might no longer support building such&#010;malformed projects.&#010;&gt; [WARNING]&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
763,768,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11187) Java 9 - building camel-spring has a maven WARN,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066069.1492851604000.25544.1492857964065%40Atlassian.JIRA%3E,issues,"Sat, 22 Apr 2017 10:46:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11187?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11187:&#010;--------------------------------&#010;    Component/s: build system&#010;&#010;&gt; Java 9 - building camel-spring has a maven WARN&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11187&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11187&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; davsclaus:/Users/davsclaus/workspace/camel/components/camel-spring (master)/$ mvn clean&#010;install -P fastinstall&#010;&gt; [INFO] Scanning for projects...&#010;&gt; [WARNING]&#010;&gt; [WARNING] Some problems were encountered while building the effective model for org.apache.camel:camel-spring:jar:2.19.0-SNAPSHOT&#010;&gt; [WARNING] 'profiles.profile[jdk9-build].plugins.plugin.(groupId:artifactId)' must be&#010;unique but found duplicate declaration of plugin org.apache.maven.plugins:maven-antrun-plugin&#010;@ org.apache.camel:camel-spring:[unknown-version], /Users/davsclaus/workspace/camel/components/camel-spring/pom.xml,&#010;line 676, column 19&#010;&gt; [WARNING]&#010;&gt; [WARNING] It is highly recommended to fix these problems because they threaten the stability&#010;of your build.&#010;&gt; [WARNING]&#010;&gt; [WARNING] For this reason, future Maven versions might no longer support building such&#010;malformed projects.&#010;&gt; [WARNING]&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
764,769,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11187) Java 9 - building camel-spring has a maven WARN,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066069.1492851604000.32117.1493033824187%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 11:37:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11187?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11187:&#010;--------------------------------&#010;    Estimated Complexity: Novice  (was: Unknown)&#010;&#010;&gt; Java 9 - building camel-spring has a maven WARN&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11187&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11187&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; davsclaus:/Users/davsclaus/workspace/camel/components/camel-spring (master)/$ mvn clean&#010;install -P fastinstall&#010;&gt; [INFO] Scanning for projects...&#010;&gt; [WARNING]&#010;&gt; [WARNING] Some problems were encountered while building the effective model for org.apache.camel:camel-spring:jar:2.19.0-SNAPSHOT&#010;&gt; [WARNING] 'profiles.profile[jdk9-build].plugins.plugin.(groupId:artifactId)' must be&#010;unique but found duplicate declaration of plugin org.apache.maven.plugins:maven-antrun-plugin&#010;@ org.apache.camel:camel-spring:[unknown-version], /Users/davsclaus/workspace/camel/components/camel-spring/pom.xml,&#010;line 676, column 19&#010;&gt; [WARNING]&#010;&gt; [WARNING] It is highly recommended to fix these problems because they threaten the stability&#010;of your build.&#010;&gt; [WARNING]&#010;&gt; [WARNING] For this reason, future Maven versions might no longer support building such&#010;malformed projects.&#010;&gt; [WARNING]&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
765,770,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11187) Java 9 - building camel-spring has a maven WARN,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066069.1492851604000.32118.1493033884070%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 11:38:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11187?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981024#comment-15981024&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11187:&#010;-------------------------------------&#010;&#010;The fix is likely to put together those goals into the same plugin so they are not duplicated&#010;as it reports. Anyone with a java 9 jdk may help test this&#010;&#010;&gt; Java 9 - building camel-spring has a maven WARN&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11187&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11187&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; davsclaus:/Users/davsclaus/workspace/camel/components/camel-spring (master)/$ mvn clean&#010;install -P fastinstall&#010;&gt; [INFO] Scanning for projects...&#010;&gt; [WARNING]&#010;&gt; [WARNING] Some problems were encountered while building the effective model for org.apache.camel:camel-spring:jar:2.19.0-SNAPSHOT&#010;&gt; [WARNING] 'profiles.profile[jdk9-build].plugins.plugin.(groupId:artifactId)' must be&#010;unique but found duplicate declaration of plugin org.apache.maven.plugins:maven-antrun-plugin&#010;@ org.apache.camel:camel-spring:[unknown-version], /Users/davsclaus/workspace/camel/components/camel-spring/pom.xml,&#010;line 676, column 19&#010;&gt; [WARNING]&#010;&gt; [WARNING] It is highly recommended to fix these problems because they threaten the stability&#010;of your build.&#010;&gt; [WARNING]&#010;&gt; [WARNING] For this reason, future Maven versions might no longer support building such&#010;malformed projects.&#010;&gt; [WARNING]&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
766,771,,[jira] [Created] (CAMEL-11188) Use Files.newFileInputStream instead of new FileInputStream,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066069.1492851604000.32118.1493033884070%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 11:38:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11187?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981024#comment-15981024&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11187:&#010;-------------------------------------&#010;&#010;The fix is likely to put together those goals into the same plugin so they are not duplicated&#010;as it reports. Anyone with a java 9 jdk may help test this&#010;&#010;&gt; Java 9 - building camel-spring has a maven WARN&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11187&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11187&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; davsclaus:/Users/davsclaus/workspace/camel/components/camel-spring (master)/$ mvn clean&#010;install -P fastinstall&#010;&gt; [INFO] Scanning for projects...&#010;&gt; [WARNING]&#010;&gt; [WARNING] Some problems were encountered while building the effective model for org.apache.camel:camel-spring:jar:2.19.0-SNAPSHOT&#010;&gt; [WARNING] 'profiles.profile[jdk9-build].plugins.plugin.(groupId:artifactId)' must be&#010;unique but found duplicate declaration of plugin org.apache.maven.plugins:maven-antrun-plugin&#010;@ org.apache.camel:camel-spring:[unknown-version], /Users/davsclaus/workspace/camel/components/camel-spring/pom.xml,&#010;line 676, column 19&#010;&gt; [WARNING]&#010;&gt; [WARNING] It is highly recommended to fix these problems because they threaten the stability&#010;of your build.&#010;&gt; [WARNING]&#010;&gt; [WARNING] For this reason, future Maven versions might no longer support building such&#010;malformed projects.&#010;&gt; [WARNING]&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
767,772,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11188) Use Files.newFileInputStream instead of new FileInputStream,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066094.1492885547000.26774.1492885564021%40Atlassian.JIRA%3E,issues,"Sat, 22 Apr 2017 18:26:04 GMT",Claus Ibsen created CAMEL-11188:&#010;-----------------------------------&#010;&#010;             Summary: Use Files.newFileInputStream instead of new FileInputStream&#010;                 Key: CAMEL-11188&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11188&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;            Reporter: Claus Ibsen&#010;             Fix For: Future&#010;&#010;&#010;See this blog&#010;https://www.cloudbees.com/blog/fileinputstream-fileoutputstream-considered-harmful&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
768,773,Kevin Earls (JIRA),  [jira] [Assigned] (CAMEL-11188) Use Files.newFileInputStream instead of new FileInputStream,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066094.1492885547000.32870.1493041504310%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 13:45:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11188?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Kevin Earls reassigned CAMEL-11188:&#010;-----------------------------------&#010;&#010;    Assignee: Kevin Earls&#010;&#010;&gt; Use Files.newFileInputStream instead of new FileInputStream&#010;&gt; -----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11188&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11188&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Kevin Earls&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; See this blog&#010;&gt; https://www.cloudbees.com/blog/fileinputstream-fileoutputstream-considered-harmful&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
769,774,,[jira] [Created] (CAMEL-11189) Upgrade zipkin,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066094.1492885547000.32870.1493041504310%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 13:45:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11188?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Kevin Earls reassigned CAMEL-11188:&#010;-----------------------------------&#010;&#010;    Assignee: Kevin Earls&#010;&#010;&gt; Use Files.newFileInputStream instead of new FileInputStream&#010;&gt; -----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11188&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11188&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Kevin Earls&#010;&gt;             Fix For: Future&#010;&gt;&#010;&gt;&#010;&gt; See this blog&#010;&gt; https://www.cloudbees.com/blog/fileinputstream-fileoutputstream-considered-harmful&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
770,775,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11189) Upgrade zipkin,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066140.1492930851000.28117.1492930864027%40Atlassian.JIRA%3E,issues,"Sun, 23 Apr 2017 07:01:04 GMT",Claus Ibsen created CAMEL-11189:&#010;-----------------------------------&#010;&#010;             Summary: Upgrade zipkin&#010;                 Key: CAMEL-11189&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11189&#010;             Project: Camel&#010;          Issue Type: Task&#010;          Components: camel-zipkin&#010;            Reporter: Claus Ibsen&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;There is a newer version&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
771,776,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11189) Upgrade zipkin,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066140.1492930851000.31287.1493023624184%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 08:47:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11189?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11189.&#010;---------------------------------&#010;       Resolution: Fixed&#010;         Assignee: Claus Ibsen&#010;    Fix Version/s:     (was: 2.20.0)&#010;                   2.19.0&#010;&#010;&gt; Upgrade zipkin&#010;&gt; --------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11189&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11189&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-zipkin&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; There is a newer version&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
772,777,,[jira] [Created] (CAMEL-11190) Service Call - Allow to configure static server list from a property placholder,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066140.1492930851000.31287.1493023624184%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 08:47:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11189?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11189.&#010;---------------------------------&#010;       Resolution: Fixed&#010;         Assignee: Claus Ibsen&#010;    Fix Version/s:     (was: 2.20.0)&#010;                   2.19.0&#010;&#010;&gt; Upgrade zipkin&#010;&gt; --------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11189&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11189&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-zipkin&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; There is a newer version&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
773,778,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11190) Service Call - Allow to configure static server list from a property placholder,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066142.1492932554000.28136.1492932604118%40Atlassian.JIRA%3E,issues,"Sun, 23 Apr 2017 07:30:04 GMT","Claus Ibsen created CAMEL-11190:&#010;-----------------------------------&#010;&#010;             Summary: Service Call - Allow to configure static server list from a property&#010;placholder&#010;                 Key: CAMEL-11190&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11190&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;            Reporter: Claus Ibsen&#010;            Priority: Minor&#010;&#010;&#010;Today you need to configure this per server&#010;https://github.com/camelinaction/camelinaction2/blob/master/chapter17/cluster-servicecall/client-static/src/main/java/camelinaction/MyStaticRouteGlobal.java#L17&#010;&#010;But you may want to externalize this in a .properties file and then refer to it such as&#010;&#010;{code}&#010;myservers=foo@server1,foo@server2,foo@server3,bar@server1,bar@server4&#010;{code}&#010;&#010;Where each entry is separated by comma.&#010;&#010;And then just refer to it with&#010;&#010;{code}&#010; .staticServiceDiscovery()&#010;   .servers(""{{myservers}}"")&#010;{code}&#010;&#010;Also the parsing of the syntax with name@server is not as well documented. We should likely&#010;improve the code so it checks this syntax and reports to the user if its mis configured, eg&#010;people may just configure it as the hostname:port without specifying the name or vice-verse&#010;etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
774,779,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11190) Service Call - Allow to configure static server list from a property placholder,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066142.1492932554000.32338.1493036284245%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 12:18:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11190?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981074#comment-15981074&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11190:&#010;-------------------------------------&#010;&#010;You can separate by comma.&#010;&#010;And I guess the {{ }} placeholder may work. There is some general logic that does this, but&#010;it likely does not apply to the service call configuration so we may need to add some logic&#010;to trigger this.&#010;&#010;&gt; Service Call - Allow to configure static server list from a property placholder&#010;&gt; -------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11190&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11190&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Today you need to configure this per server&#010;&gt; https://github.com/camelinaction/camelinaction2/blob/master/chapter17/cluster-servicecall/client-static/src/main/java/camelinaction/MyStaticRouteGlobal.java#L17&#010;&gt; But you may want to externalize this in a .properties file and then refer to it such&#010;as&#010;&gt; {code}&#010;&gt; myservers=foo@server1,foo@server2,foo@server3,bar@server1,bar@server4&#010;&gt; {code}&#010;&gt; Where each entry is separated by comma.&#010;&gt; And then just refer to it with&#010;&gt; {code}&#010;&gt;  .staticServiceDiscovery()&#010;&gt;    .servers(""{{myservers}}"")&#010;&gt; {code}&#010;&gt; Also the parsing of the syntax with name@server is not as well documented. We should&#010;likely improve the code so it checks this syntax and reports to the user if its mis configured,&#010;eg people may just configure it as the hostname:port without specifying the name or vice-verse&#010;etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
775,780,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11190) Service Call - Allow to configure static server list from a property placholder,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066142.1492932554000.32339.1493036284298%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 12:18:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11190?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11190:&#010;--------------------------------&#010;    Fix Version/s: 2.20.0&#010;&#010;&gt; Service Call - Allow to configure static server list from a property placholder&#010;&gt; -------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11190&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11190&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Today you need to configure this per server&#010;&gt; https://github.com/camelinaction/camelinaction2/blob/master/chapter17/cluster-servicecall/client-static/src/main/java/camelinaction/MyStaticRouteGlobal.java#L17&#010;&gt; But you may want to externalize this in a .properties file and then refer to it such&#010;as&#010;&gt; {code}&#010;&gt; myservers=foo@server1,foo@server2,foo@server3,bar@server1,bar@server4&#010;&gt; {code}&#010;&gt; Where each entry is separated by comma.&#010;&gt; And then just refer to it with&#010;&gt; {code}&#010;&gt;  .staticServiceDiscovery()&#010;&gt;    .servers(""{{myservers}}"")&#010;&gt; {code}&#010;&gt; Also the parsing of the syntax with name@server is not as well documented. We should&#010;likely improve the code so it checks this syntax and reports to the user if its mis configured,&#010;eg people may just configure it as the hostname:port without specifying the name or vice-verse&#010;etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
776,781,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11190) Service Call - Allow to configure static server list from a property placholder,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066142.1492932554000.32340.1493036344080%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 12:19:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11190?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981075#comment-15981075&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11190:&#010;-------------------------------------&#010;&#010;And btw that should work generic for all string types in the service call configuration.&#010;&#010;&gt; Service Call - Allow to configure static server list from a property placholder&#010;&gt; -------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11190&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11190&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Today you need to configure this per server&#010;&gt; https://github.com/camelinaction/camelinaction2/blob/master/chapter17/cluster-servicecall/client-static/src/main/java/camelinaction/MyStaticRouteGlobal.java#L17&#010;&gt; But you may want to externalize this in a .properties file and then refer to it such&#010;as&#010;&gt; {code}&#010;&gt; myservers=foo@server1,foo@server2,foo@server3,bar@server1,bar@server4&#010;&gt; {code}&#010;&gt; Where each entry is separated by comma.&#010;&gt; And then just refer to it with&#010;&gt; {code}&#010;&gt;  .staticServiceDiscovery()&#010;&gt;    .servers(""{{myservers}}"")&#010;&gt; {code}&#010;&gt; Also the parsing of the syntax with name@server is not as well documented. We should&#010;likely improve the code so it checks this syntax and reports to the user if its mis configured,&#010;eg people may just configure it as the hostname:port without specifying the name or vice-verse&#010;etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
777,782,Luca Burgazzoli (JIRA),  [jira] [Assigned] (CAMEL-11190) Service Call - Allow to configure static server list from a property placholder,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066142.1492932554000.32451.1493037304136%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 12:35:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11190?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli reassigned CAMEL-11190:&#010;---------------------------------------&#010;&#010;    Assignee: Luca Burgazzoli&#010;&#010;&gt; Service Call - Allow to configure static server list from a property placholder&#010;&gt; -------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11190&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11190&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Today you need to configure this per server&#010;&gt; https://github.com/camelinaction/camelinaction2/blob/master/chapter17/cluster-servicecall/client-static/src/main/java/camelinaction/MyStaticRouteGlobal.java#L17&#010;&gt; But you may want to externalize this in a .properties file and then refer to it such&#010;as&#010;&gt; {code}&#010;&gt; myservers=foo@server1,foo@server2,foo@server3,bar@server1,bar@server4&#010;&gt; {code}&#010;&gt; Where each entry is separated by comma.&#010;&gt; And then just refer to it with&#010;&gt; {code}&#010;&gt;  .staticServiceDiscovery()&#010;&gt;    .servers(""{{myservers}}"")&#010;&gt; {code}&#010;&gt; Also the parsing of the syntax with name@server is not as well documented. We should&#010;likely improve the code so it checks this syntax and reports to the user if its mis configured,&#010;eg people may just configure it as the hostname:port without specifying the name or vice-verse&#010;etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
778,783,Luca Burgazzoli (JIRA),  [jira] [Commented] (CAMEL-11190) Service Call - Allow to configure static server list from a property placholder,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066142.1492932554000.32502.1493037844150%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 12:44:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11190?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981107#comment-15981107&#010;] &#010;&#010;Luca Burgazzoli commented on CAMEL-11190:&#010;-----------------------------------------&#010;&#010;Will add it&#010;&#010;&gt; Service Call - Allow to configure static server list from a property placholder&#010;&gt; -------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11190&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11190&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Today you need to configure this per server&#010;&gt; https://github.com/camelinaction/camelinaction2/blob/master/chapter17/cluster-servicecall/client-static/src/main/java/camelinaction/MyStaticRouteGlobal.java#L17&#010;&gt; But you may want to externalize this in a .properties file and then refer to it such&#010;as&#010;&gt; {code}&#010;&gt; myservers=foo@server1,foo@server2,foo@server3,bar@server1,bar@server4&#010;&gt; {code}&#010;&gt; Where each entry is separated by comma.&#010;&gt; And then just refer to it with&#010;&gt; {code}&#010;&gt;  .staticServiceDiscovery()&#010;&gt;    .servers(""{{myservers}}"")&#010;&gt; {code}&#010;&gt; Also the parsing of the syntax with name@server is not as well documented. We should&#010;likely improve the code so it checks this syntax and reports to the user if its mis configured,&#010;eg people may just configure it as the hostname:port without specifying the name or vice-verse&#010;etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
779,784,Luca Burgazzoli (JIRA),  [jira] [Work started] (CAMEL-11190) Service Call - Allow to configure static server list from a property placholder,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066142.1492932554000.33810.1493047924509%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 15:32:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11190?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Work on CAMEL-11190 started by Luca Burgazzoli.&#010;-----------------------------------------------&#010;&gt; Service Call - Allow to configure static server list from a property placholder&#010;&gt; -------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11190&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11190&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Today you need to configure this per server&#010;&gt; https://github.com/camelinaction/camelinaction2/blob/master/chapter17/cluster-servicecall/client-static/src/main/java/camelinaction/MyStaticRouteGlobal.java#L17&#010;&gt; But you may want to externalize this in a .properties file and then refer to it such&#010;as&#010;&gt; {code}&#010;&gt; myservers=foo@server1,foo@server2,foo@server3,bar@server1,bar@server4&#010;&gt; {code}&#010;&gt; Where each entry is separated by comma.&#010;&gt; And then just refer to it with&#010;&gt; {code}&#010;&gt;  .staticServiceDiscovery()&#010;&gt;    .servers(""{{myservers}}"")&#010;&gt; {code}&#010;&gt; Also the parsing of the syntax with name@server is not as well documented. We should&#010;likely improve the code so it checks this syntax and reports to the user if its mis configured,&#010;eg people may just configure it as the hostname:port without specifying the name or vice-verse&#010;etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
780,785,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-11190) Service Call - Allow to configure static server list from a property placholder,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066142.1492932554000.34623.1493053264429%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 17:01:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11190?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-11190:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.20.0)&#010;                   2.19.0&#010;&#010;&gt; Service Call - Allow to configure static server list from a property placholder&#010;&gt; -------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11190&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11190&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Today you need to configure this per server&#010;&gt; https://github.com/camelinaction/camelinaction2/blob/master/chapter17/cluster-servicecall/client-static/src/main/java/camelinaction/MyStaticRouteGlobal.java#L17&#010;&gt; But you may want to externalize this in a .properties file and then refer to it such&#010;as&#010;&gt; {code}&#010;&gt; myservers=foo@server1,foo@server2,foo@server3,bar@server1,bar@server4&#010;&gt; {code}&#010;&gt; Where each entry is separated by comma.&#010;&gt; And then just refer to it with&#010;&gt; {code}&#010;&gt;  .staticServiceDiscovery()&#010;&gt;    .servers(""{{myservers}}"")&#010;&gt; {code}&#010;&gt; Also the parsing of the syntax with name@server is not as well documented. We should&#010;likely improve the code so it checks this syntax and reports to the user if its mis configured,&#010;eg people may just configure it as the hostname:port without specifying the name or vice-verse&#010;etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
781,786,Luca Burgazzoli (JIRA),  [jira] [Resolved] (CAMEL-11190) Service Call - Allow to configure static server list from a property placholder,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066142.1492932554000.34629.1493053264475%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 17:01:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11190?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-11190.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Service Call - Allow to configure static server list from a property placholder&#010;&gt; -------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11190&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11190&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Today you need to configure this per server&#010;&gt; https://github.com/camelinaction/camelinaction2/blob/master/chapter17/cluster-servicecall/client-static/src/main/java/camelinaction/MyStaticRouteGlobal.java#L17&#010;&gt; But you may want to externalize this in a .properties file and then refer to it such&#010;as&#010;&gt; {code}&#010;&gt; myservers=foo@server1,foo@server2,foo@server3,bar@server1,bar@server4&#010;&gt; {code}&#010;&gt; Where each entry is separated by comma.&#010;&gt; And then just refer to it with&#010;&gt; {code}&#010;&gt;  .staticServiceDiscovery()&#010;&gt;    .servers(""{{myservers}}"")&#010;&gt; {code}&#010;&gt; Also the parsing of the syntax with name@server is not as well documented. We should&#010;likely improve the code so it checks this syntax and reports to the user if its mis configured,&#010;eg people may just configure it as the hostname:port without specifying the name or vice-verse&#010;etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
782,787,,[jira] [Created] (CAMEL-11191) Service Call - XML configuration of static servers called servers instead of server,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066142.1492932554000.34629.1493053264475%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 17:01:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11190?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-11190.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Service Call - Allow to configure static server list from a property placholder&#010;&gt; -------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11190&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11190&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Today you need to configure this per server&#010;&gt; https://github.com/camelinaction/camelinaction2/blob/master/chapter17/cluster-servicecall/client-static/src/main/java/camelinaction/MyStaticRouteGlobal.java#L17&#010;&gt; But you may want to externalize this in a .properties file and then refer to it such&#010;as&#010;&gt; {code}&#010;&gt; myservers=foo@server1,foo@server2,foo@server3,bar@server1,bar@server4&#010;&gt; {code}&#010;&gt; Where each entry is separated by comma.&#010;&gt; And then just refer to it with&#010;&gt; {code}&#010;&gt;  .staticServiceDiscovery()&#010;&gt;    .servers(""{{myservers}}"")&#010;&gt; {code}&#010;&gt; Also the parsing of the syntax with name@server is not as well documented. We should&#010;likely improve the code so it checks this syntax and reports to the user if its mis configured,&#010;eg people may just configure it as the hostname:port without specifying the name or vice-verse&#010;etc.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
783,788,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11191) Service Call - XML configuration of static servers called servers instead of server,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066159.1492945998000.28369.1492946044061%40Atlassian.JIRA%3E,issues,"Sun, 23 Apr 2017 11:14:04 GMT","Claus Ibsen created CAMEL-11191:&#010;-----------------------------------&#010;&#010;             Summary: Service Call - XML configuration of static servers called servers instead&#010;of server&#010;                 Key: CAMEL-11191&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11191&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core, camel-spring&#010;            Reporter: Claus Ibsen&#010;            Priority: Minor&#010;&#010;&#010;In Java DSL its called server, but in XML DSL its called servers&#010;{code}&#010;      &lt;staticServiceDiscovery&gt;&#010;        &lt;!-- the syntax is name@hostname:port --&gt;&#010;        &lt;servers&gt;hello-service@localhost:8081&lt;/servers&gt;&#010;        &lt;servers&gt;hello-service@localhost:8082&lt;/servers&gt;&#010;      &lt;/staticServiceDiscovery&gt;&#010;{code}&#010;&#010;And in Java you do&#010;{code}&#010;                .staticServiceDiscovery()&#010;                    // the syntax is name@hostname:port&#010;                    .server(""hello-service@localhost:8081"")&#010;                    .server(""hello-service@localhost:8082"")&#010;                .end() // end static list&#010;{code}&#010;&#010;Notice how its called servers vs server.&#010;&#010;Also the XML DSL has no documentation in the XML Schema&#010;{code}&#010;  &lt;xs:complexType name=""staticServiceCallServiceDiscoveryConfiguration""&gt;&#010;    &lt;xs:complexContent&gt;&#010;      &lt;xs:extension base=""tns:serviceCallServiceDiscoveryConfiguration""&gt;&#010;        &lt;xs:sequence&gt;&#010;          &lt;xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""servers"" type=""xs:string""/&gt;&#010;        &lt;/xs:sequence&gt;&#010;      &lt;/xs:extension&gt;&#010;    &lt;/xs:complexContent&gt;&#010;  &lt;/xs:complexType&gt;&#010;{code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
784,789,Luca Burgazzoli (JIRA),  [jira] [Assigned] (CAMEL-11191) Service Call - XML configuration of static servers called servers instead of server,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066159.1492945998000.31010.1493021164490%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 08:06:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11191?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli reassigned CAMEL-11191:&#010;---------------------------------------&#010;&#010;    Assignee: Luca Burgazzoli&#010;&#010;&gt; Service Call - XML configuration of static servers called servers instead of server&#010;&gt; -----------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11191&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11191&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, camel-spring&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; In Java DSL its called server, but in XML DSL its called servers&#010;&gt; {code}&#010;&gt;       &lt;staticServiceDiscovery&gt;&#010;&gt;         &lt;!-- the syntax is name@hostname:port --&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8081&lt;/servers&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8082&lt;/servers&gt;&#010;&gt;       &lt;/staticServiceDiscovery&gt;&#010;&gt; {code}&#010;&gt; And in Java you do&#010;&gt; {code}&#010;&gt;                 .staticServiceDiscovery()&#010;&gt;                     // the syntax is name@hostname:port&#010;&gt;                     .server(""hello-service@localhost:8081"")&#010;&gt;                     .server(""hello-service@localhost:8082"")&#010;&gt;                 .end() // end static list&#010;&gt; {code}&#010;&gt; Notice how its called servers vs server.&#010;&gt; Also the XML DSL has no documentation in the XML Schema&#010;&gt; {code}&#010;&gt;   &lt;xs:complexType name=""staticServiceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;     &lt;xs:complexContent&gt;&#010;&gt;       &lt;xs:extension base=""tns:serviceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;         &lt;xs:sequence&gt;&#010;&gt;           &lt;xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""servers"" type=""xs:string""/&gt;&#010;&gt;         &lt;/xs:sequence&gt;&#010;&gt;       &lt;/xs:extension&gt;&#010;&gt;     &lt;/xs:complexContent&gt;&#010;&gt;   &lt;/xs:complexType&gt;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
785,790,Luca Burgazzoli (JIRA),  [jira] [Commented] (CAMEL-11191) Service Call - XML configuration of static servers called servers instead of server,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066159.1492945998000.31003.1493021164438%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 08:06:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11191?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15980832#comment-15980832&#010;] &#010;&#010;Luca Burgazzoli commented on CAMEL-11191:&#010;-----------------------------------------&#010;&#010;It is likely to be a naming error in the Java DSL element as you should be able to provide&#010;a comma separated list of servers in both the DSL.&#010;It is an unbounded sequence as it helps to splits by service name, like:&#010;&#010;{code:xml}&#010;&lt;staticServiceDiscovery&gt;&#010;    &lt;!-- the syntax is name@hostname:port[,] --&gt;&#010;    &lt;servers&gt;service-1@host1:80,service-2@host2:80&lt;/servers&gt;&#010;    &lt;servers&gt;service-2@host1:8080,service-2@host3:8080&lt;/servers&gt;&#010;&lt;/staticServiceDiscovery&gt;&#010;{code}&#010;&#010;&#010;&#010;&#010;&gt; Service Call - XML configuration of static servers called servers instead of server&#010;&gt; -----------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11191&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11191&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, camel-spring&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; In Java DSL its called server, but in XML DSL its called servers&#010;&gt; {code}&#010;&gt;       &lt;staticServiceDiscovery&gt;&#010;&gt;         &lt;!-- the syntax is name@hostname:port --&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8081&lt;/servers&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8082&lt;/servers&gt;&#010;&gt;       &lt;/staticServiceDiscovery&gt;&#010;&gt; {code}&#010;&gt; And in Java you do&#010;&gt; {code}&#010;&gt;                 .staticServiceDiscovery()&#010;&gt;                     // the syntax is name@hostname:port&#010;&gt;                     .server(""hello-service@localhost:8081"")&#010;&gt;                     .server(""hello-service@localhost:8082"")&#010;&gt;                 .end() // end static list&#010;&gt; {code}&#010;&gt; Notice how its called servers vs server.&#010;&gt; Also the XML DSL has no documentation in the XML Schema&#010;&gt; {code}&#010;&gt;   &lt;xs:complexType name=""staticServiceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;     &lt;xs:complexContent&gt;&#010;&gt;       &lt;xs:extension base=""tns:serviceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;         &lt;xs:sequence&gt;&#010;&gt;           &lt;xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""servers"" type=""xs:string""/&gt;&#010;&gt;         &lt;/xs:sequence&gt;&#010;&gt;       &lt;/xs:extension&gt;&#010;&gt;     &lt;/xs:complexContent&gt;&#010;&gt;   &lt;/xs:complexType&gt;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
786,791,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-11191) Service Call - XML configuration of static servers called servers instead of server,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066159.1492945998000.31013.1493021164512%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 08:06:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11191?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-11191:&#010;------------------------------------&#010;    Fix Version/s: 2.20.0&#010;&#010;&gt; Service Call - XML configuration of static servers called servers instead of server&#010;&gt; -----------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11191&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11191&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, camel-spring&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; In Java DSL its called server, but in XML DSL its called servers&#010;&gt; {code}&#010;&gt;       &lt;staticServiceDiscovery&gt;&#010;&gt;         &lt;!-- the syntax is name@hostname:port --&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8081&lt;/servers&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8082&lt;/servers&gt;&#010;&gt;       &lt;/staticServiceDiscovery&gt;&#010;&gt; {code}&#010;&gt; And in Java you do&#010;&gt; {code}&#010;&gt;                 .staticServiceDiscovery()&#010;&gt;                     // the syntax is name@hostname:port&#010;&gt;                     .server(""hello-service@localhost:8081"")&#010;&gt;                     .server(""hello-service@localhost:8082"")&#010;&gt;                 .end() // end static list&#010;&gt; {code}&#010;&gt; Notice how its called servers vs server.&#010;&gt; Also the XML DSL has no documentation in the XML Schema&#010;&gt; {code}&#010;&gt;   &lt;xs:complexType name=""staticServiceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;     &lt;xs:complexContent&gt;&#010;&gt;       &lt;xs:extension base=""tns:serviceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;         &lt;xs:sequence&gt;&#010;&gt;           &lt;xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""servers"" type=""xs:string""/&gt;&#010;&gt;         &lt;/xs:sequence&gt;&#010;&gt;       &lt;/xs:extension&gt;&#010;&gt;     &lt;/xs:complexContent&gt;&#010;&gt;   &lt;/xs:complexType&gt;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
787,792,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11191) Service Call - XML configuration of static servers called servers instead of server,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066159.1492945998000.31303.1493023864306%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 08:51:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11191?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15980885#comment-15980885&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11191:&#010;-------------------------------------&#010;&#010;Ah the comma thing is really good. Great to see its already there. Would be nice to have that&#010;in the docs somewhere.&#010;&#010;&gt; Service Call - XML configuration of static servers called servers instead of server&#010;&gt; -----------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11191&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11191&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, camel-spring&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; In Java DSL its called server, but in XML DSL its called servers&#010;&gt; {code}&#010;&gt;       &lt;staticServiceDiscovery&gt;&#010;&gt;         &lt;!-- the syntax is name@hostname:port --&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8081&lt;/servers&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8082&lt;/servers&gt;&#010;&gt;       &lt;/staticServiceDiscovery&gt;&#010;&gt; {code}&#010;&gt; And in Java you do&#010;&gt; {code}&#010;&gt;                 .staticServiceDiscovery()&#010;&gt;                     // the syntax is name@hostname:port&#010;&gt;                     .server(""hello-service@localhost:8081"")&#010;&gt;                     .server(""hello-service@localhost:8082"")&#010;&gt;                 .end() // end static list&#010;&gt; {code}&#010;&gt; Notice how its called servers vs server.&#010;&gt; Also the XML DSL has no documentation in the XML Schema&#010;&gt; {code}&#010;&gt;   &lt;xs:complexType name=""staticServiceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;     &lt;xs:complexContent&gt;&#010;&gt;       &lt;xs:extension base=""tns:serviceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;         &lt;xs:sequence&gt;&#010;&gt;           &lt;xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""servers"" type=""xs:string""/&gt;&#010;&gt;         &lt;/xs:sequence&gt;&#010;&gt;       &lt;/xs:extension&gt;&#010;&gt;     &lt;/xs:complexContent&gt;&#010;&gt;   &lt;/xs:complexType&gt;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
788,793,Luca Burgazzoli (JIRA),  [jira] [Commented] (CAMEL-11191) Service Call - XML configuration of static servers called servers instead of server,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066159.1492945998000.31336.1493024224262%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 08:57:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11191?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15980892#comment-15980892&#010;] &#010;&#010;Luca Burgazzoli commented on CAMEL-11191:&#010;-----------------------------------------&#010;&#010;Will update it soon&#010;&#010;&#010;&gt; Service Call - XML configuration of static servers called servers instead of server&#010;&gt; -----------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11191&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11191&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, camel-spring&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; In Java DSL its called server, but in XML DSL its called servers&#010;&gt; {code}&#010;&gt;       &lt;staticServiceDiscovery&gt;&#010;&gt;         &lt;!-- the syntax is name@hostname:port --&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8081&lt;/servers&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8082&lt;/servers&gt;&#010;&gt;       &lt;/staticServiceDiscovery&gt;&#010;&gt; {code}&#010;&gt; And in Java you do&#010;&gt; {code}&#010;&gt;                 .staticServiceDiscovery()&#010;&gt;                     // the syntax is name@hostname:port&#010;&gt;                     .server(""hello-service@localhost:8081"")&#010;&gt;                     .server(""hello-service@localhost:8082"")&#010;&gt;                 .end() // end static list&#010;&gt; {code}&#010;&gt; Notice how its called servers vs server.&#010;&gt; Also the XML DSL has no documentation in the XML Schema&#010;&gt; {code}&#010;&gt;   &lt;xs:complexType name=""staticServiceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;     &lt;xs:complexContent&gt;&#010;&gt;       &lt;xs:extension base=""tns:serviceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;         &lt;xs:sequence&gt;&#010;&gt;           &lt;xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""servers"" type=""xs:string""/&gt;&#010;&gt;         &lt;/xs:sequence&gt;&#010;&gt;       &lt;/xs:extension&gt;&#010;&gt;     &lt;/xs:complexContent&gt;&#010;&gt;   &lt;/xs:complexType&gt;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
789,794,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11191) Service Call - XML configuration of static servers called servers instead of server,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066159.1492945998000.32109.1493033764594%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 11:36:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11191?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981022#comment-15981022&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11191:&#010;-------------------------------------&#010;&#010;Ah can we maybe rename the java dsl today before the RC is cut?&#010;&#010;&gt; Service Call - XML configuration of static servers called servers instead of server&#010;&gt; -----------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11191&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11191&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, camel-spring&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; In Java DSL its called server, but in XML DSL its called servers&#010;&gt; {code}&#010;&gt;       &lt;staticServiceDiscovery&gt;&#010;&gt;         &lt;!-- the syntax is name@hostname:port --&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8081&lt;/servers&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8082&lt;/servers&gt;&#010;&gt;       &lt;/staticServiceDiscovery&gt;&#010;&gt; {code}&#010;&gt; And in Java you do&#010;&gt; {code}&#010;&gt;                 .staticServiceDiscovery()&#010;&gt;                     // the syntax is name@hostname:port&#010;&gt;                     .server(""hello-service@localhost:8081"")&#010;&gt;                     .server(""hello-service@localhost:8082"")&#010;&gt;                 .end() // end static list&#010;&gt; {code}&#010;&gt; Notice how its called servers vs server.&#010;&gt; Also the XML DSL has no documentation in the XML Schema&#010;&gt; {code}&#010;&gt;   &lt;xs:complexType name=""staticServiceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;     &lt;xs:complexContent&gt;&#010;&gt;       &lt;xs:extension base=""tns:serviceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;         &lt;xs:sequence&gt;&#010;&gt;           &lt;xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""servers"" type=""xs:string""/&gt;&#010;&gt;         &lt;/xs:sequence&gt;&#010;&gt;       &lt;/xs:extension&gt;&#010;&gt;     &lt;/xs:complexContent&gt;&#010;&gt;   &lt;/xs:complexType&gt;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
790,795,Luca Burgazzoli (JIRA),  [jira] [Work started] (CAMEL-11191) Service Call - XML configuration of static servers called servers instead of server,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066159.1492945998000.33815.1493047924548%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 15:32:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11191?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Work on CAMEL-11191 started by Luca Burgazzoli.&#010;-----------------------------------------------&#010;&gt; Service Call - XML configuration of static servers called servers instead of server&#010;&gt; -----------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11191&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11191&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, camel-spring&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; In Java DSL its called server, but in XML DSL its called servers&#010;&gt; {code}&#010;&gt;       &lt;staticServiceDiscovery&gt;&#010;&gt;         &lt;!-- the syntax is name@hostname:port --&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8081&lt;/servers&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8082&lt;/servers&gt;&#010;&gt;       &lt;/staticServiceDiscovery&gt;&#010;&gt; {code}&#010;&gt; And in Java you do&#010;&gt; {code}&#010;&gt;                 .staticServiceDiscovery()&#010;&gt;                     // the syntax is name@hostname:port&#010;&gt;                     .server(""hello-service@localhost:8081"")&#010;&gt;                     .server(""hello-service@localhost:8082"")&#010;&gt;                 .end() // end static list&#010;&gt; {code}&#010;&gt; Notice how its called servers vs server.&#010;&gt; Also the XML DSL has no documentation in the XML Schema&#010;&gt; {code}&#010;&gt;   &lt;xs:complexType name=""staticServiceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;     &lt;xs:complexContent&gt;&#010;&gt;       &lt;xs:extension base=""tns:serviceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;         &lt;xs:sequence&gt;&#010;&gt;           &lt;xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""servers"" type=""xs:string""/&gt;&#010;&gt;         &lt;/xs:sequence&gt;&#010;&gt;       &lt;/xs:extension&gt;&#010;&gt;     &lt;/xs:complexContent&gt;&#010;&gt;   &lt;/xs:complexType&gt;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
791,796,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-11191) Service Call - XML configuration of static servers called servers instead of server,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066159.1492945998000.34626.1493053264451%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 17:01:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11191?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-11191:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.20.0)&#010;                   2.19.0&#010;&#010;&gt; Service Call - XML configuration of static servers called servers instead of server&#010;&gt; -----------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11191&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11191&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, camel-spring&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; In Java DSL its called server, but in XML DSL its called servers&#010;&gt; {code}&#010;&gt;       &lt;staticServiceDiscovery&gt;&#010;&gt;         &lt;!-- the syntax is name@hostname:port --&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8081&lt;/servers&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8082&lt;/servers&gt;&#010;&gt;       &lt;/staticServiceDiscovery&gt;&#010;&gt; {code}&#010;&gt; And in Java you do&#010;&gt; {code}&#010;&gt;                 .staticServiceDiscovery()&#010;&gt;                     // the syntax is name@hostname:port&#010;&gt;                     .server(""hello-service@localhost:8081"")&#010;&gt;                     .server(""hello-service@localhost:8082"")&#010;&gt;                 .end() // end static list&#010;&gt; {code}&#010;&gt; Notice how its called servers vs server.&#010;&gt; Also the XML DSL has no documentation in the XML Schema&#010;&gt; {code}&#010;&gt;   &lt;xs:complexType name=""staticServiceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;     &lt;xs:complexContent&gt;&#010;&gt;       &lt;xs:extension base=""tns:serviceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;         &lt;xs:sequence&gt;&#010;&gt;           &lt;xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""servers"" type=""xs:string""/&gt;&#010;&gt;         &lt;/xs:sequence&gt;&#010;&gt;       &lt;/xs:extension&gt;&#010;&gt;     &lt;/xs:complexContent&gt;&#010;&gt;   &lt;/xs:complexType&gt;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
792,797,Luca Burgazzoli (JIRA),  [jira] [Resolved] (CAMEL-11191) Service Call - XML configuration of static servers called servers instead of server,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066159.1492945998000.34632.1493053324321%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 17:02:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11191?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-11191.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Service Call - XML configuration of static servers called servers instead of server&#010;&gt; -----------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11191&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11191&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, camel-spring&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; In Java DSL its called server, but in XML DSL its called servers&#010;&gt; {code}&#010;&gt;       &lt;staticServiceDiscovery&gt;&#010;&gt;         &lt;!-- the syntax is name@hostname:port --&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8081&lt;/servers&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8082&lt;/servers&gt;&#010;&gt;       &lt;/staticServiceDiscovery&gt;&#010;&gt; {code}&#010;&gt; And in Java you do&#010;&gt; {code}&#010;&gt;                 .staticServiceDiscovery()&#010;&gt;                     // the syntax is name@hostname:port&#010;&gt;                     .server(""hello-service@localhost:8081"")&#010;&gt;                     .server(""hello-service@localhost:8082"")&#010;&gt;                 .end() // end static list&#010;&gt; {code}&#010;&gt; Notice how its called servers vs server.&#010;&gt; Also the XML DSL has no documentation in the XML Schema&#010;&gt; {code}&#010;&gt;   &lt;xs:complexType name=""staticServiceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;     &lt;xs:complexContent&gt;&#010;&gt;       &lt;xs:extension base=""tns:serviceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;         &lt;xs:sequence&gt;&#010;&gt;           &lt;xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""servers"" type=""xs:string""/&gt;&#010;&gt;         &lt;/xs:sequence&gt;&#010;&gt;       &lt;/xs:extension&gt;&#010;&gt;     &lt;/xs:complexContent&gt;&#010;&gt;   &lt;/xs:complexType&gt;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
793,798,,[jira] [Created] (CAMEL-11192) Service Call - Some unused code in camel-core,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066159.1492945998000.34632.1493053324321%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 17:02:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11191?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-11191.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Service Call - XML configuration of static servers called servers instead of server&#010;&gt; -----------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11191&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11191&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core, camel-spring&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; In Java DSL its called server, but in XML DSL its called servers&#010;&gt; {code}&#010;&gt;       &lt;staticServiceDiscovery&gt;&#010;&gt;         &lt;!-- the syntax is name@hostname:port --&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8081&lt;/servers&gt;&#010;&gt;         &lt;servers&gt;hello-service@localhost:8082&lt;/servers&gt;&#010;&gt;       &lt;/staticServiceDiscovery&gt;&#010;&gt; {code}&#010;&gt; And in Java you do&#010;&gt; {code}&#010;&gt;                 .staticServiceDiscovery()&#010;&gt;                     // the syntax is name@hostname:port&#010;&gt;                     .server(""hello-service@localhost:8081"")&#010;&gt;                     .server(""hello-service@localhost:8082"")&#010;&gt;                 .end() // end static list&#010;&gt; {code}&#010;&gt; Notice how its called servers vs server.&#010;&gt; Also the XML DSL has no documentation in the XML Schema&#010;&gt; {code}&#010;&gt;   &lt;xs:complexType name=""staticServiceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;     &lt;xs:complexContent&gt;&#010;&gt;       &lt;xs:extension base=""tns:serviceCallServiceDiscoveryConfiguration""&gt;&#010;&gt;         &lt;xs:sequence&gt;&#010;&gt;           &lt;xs:element maxOccurs=""unbounded"" minOccurs=""0"" name=""servers"" type=""xs:string""/&gt;&#010;&gt;         &lt;/xs:sequence&gt;&#010;&gt;       &lt;/xs:extension&gt;&#010;&gt;     &lt;/xs:complexContent&gt;&#010;&gt;   &lt;/xs:complexType&gt;&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
794,799,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11192) Service Call - Some unused code in camel-core,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066174.1492953695000.28529.1492953724025%40Atlassian.JIRA%3E,issues,"Sun, 23 Apr 2017 13:22:04 GMT","Claus Ibsen created CAMEL-11192:&#010;-----------------------------------&#010;&#010;             Summary: Service Call - Some unused code in camel-core&#010;                 Key: CAMEL-11192&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11192&#010;             Project: Camel&#010;          Issue Type: Task&#010;          Components: camel-core&#010;            Reporter: Claus Ibsen&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;There is some unused code in camel-core with a static INSTANCE such as&#010;&#010;public static final ServiceFilter INSTANCE = new HealthyServiceFilter();&#010;&#010;There is a few more of these, and this code should be cleaned up&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
795,800,Luca Burgazzoli (JIRA),  [jira] [Assigned] (CAMEL-11192) Service Call - Some unused code in camel-core,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066174.1492953695000.31015.1493021164530%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 08:06:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11192?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli reassigned CAMEL-11192:&#010;---------------------------------------&#010;&#010;    Assignee: Luca Burgazzoli&#010;&#010;&gt; Service Call - Some unused code in camel-core&#010;&gt; ---------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11192&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11192&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; There is some unused code in camel-core with a static INSTANCE such as&#010;&gt; public static final ServiceFilter INSTANCE = new HealthyServiceFilter();&#010;&gt; There is a few more of these, and this code should be cleaned up&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
796,801,Luca Burgazzoli (JIRA),  [jira] [Work started] (CAMEL-11192) Service Call - Some unused code in camel-core,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066174.1492953695000.33816.1493047924556%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 15:32:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11192?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Work on CAMEL-11192 started by Luca Burgazzoli.&#010;-----------------------------------------------&#010;&gt; Service Call - Some unused code in camel-core&#010;&gt; ---------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11192&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11192&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; There is some unused code in camel-core with a static INSTANCE such as&#010;&gt; public static final ServiceFilter INSTANCE = new HealthyServiceFilter();&#010;&gt; There is a few more of these, and this code should be cleaned up&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
797,802,Luca Burgazzoli (JIRA),  [jira] [Resolved] (CAMEL-11192) Service Call - Some unused code in camel-core,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066174.1492953695000.34645.1493053324465%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 17:02:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11192?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli resolved CAMEL-11192.&#010;-------------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Service Call - Some unused code in camel-core&#010;&gt; ---------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11192&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11192&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; There is some unused code in camel-core with a static INSTANCE such as&#010;&gt; public static final ServiceFilter INSTANCE = new HealthyServiceFilter();&#010;&gt; There is a few more of these, and this code should be cleaned up&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
798,803,Luca Burgazzoli (JIRA),  [jira] [Updated] (CAMEL-11192) Service Call - Some unused code in camel-core,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066174.1492953695000.34642.1493053324445%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 17:02:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11192?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-11192:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.20.0)&#010;                   2.19.0&#010;&#010;&gt; Service Call - Some unused code in camel-core&#010;&gt; ---------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11192&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11192&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; There is some unused code in camel-core with a static INSTANCE such as&#010;&gt; public static final ServiceFilter INSTANCE = new HealthyServiceFilter();&#010;&gt; There is a few more of these, and this code should be cleaned up&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
799,804,,[jira] [Created] (CAMEL-11193) Route from kafka topic to another kafka topic issue,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066174.1492953695000.34642.1493053324445%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 17:02:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11192?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Luca Burgazzoli updated CAMEL-11192:&#010;------------------------------------&#010;    Fix Version/s:     (was: 2.20.0)&#010;                   2.19.0&#010;&#010;&gt; Service Call - Some unused code in camel-core&#010;&gt; ---------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11192&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11192&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-core&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Luca Burgazzoli&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; There is some unused code in camel-core with a static INSTANCE such as&#010;&gt; public static final ServiceFilter INSTANCE = new HealthyServiceFilter();&#010;&gt; There is a few more of these, and this code should be cleaned up&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
800,805,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11193) Route from kafka topic to another kafka topic issue,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066280.1493026516000.31624.1493026564114%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 09:36:04 GMT","Claus Ibsen created CAMEL-11193:&#010;-----------------------------------&#010;&#010;             Summary: Route from kafka topic to another kafka topic issue&#010;                 Key: CAMEL-11193&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11193&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-kafka&#010;    Affects Versions: 2.19.0&#010;            Reporter: Claus Ibsen&#010;&#010;&#010;Because the consumer set headers with kafka topic and partition from the consumer, then these&#010;will override the endpoint configured on the producer, eg&#010;&#010;{code}&#010;from(""kafka:foo"")&#010;   ..&#010;   to(""kafka:bar"")&#010;{code}&#010;&#010;will end up going back to foo.&#010;&#010;You can remove the headers to make it work&#010;{code}&#010;from(""kafka:foo"")&#010;   ..&#010;   removeHeaders(""kafka*"")&#010;   to(""kafka:bar"")&#010;{code}&#010;&#010;But maybe we should have an option on the producer that takes the endpoint value always, and&#010;you need to turn the option on to allow header overrides.&#010;&#010;Another option is to detect that its the same topic to avoid sending it back to itself.&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
801,806,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11193) Route from kafka topic to another kafka topic issue,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066280.1493026516000.31880.1493030104038%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 10:35:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11193?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15980980#comment-15980980&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11193:&#010;-------------------------------------&#010;&#010;You can turn on the bridgeEndpoint option for this&#010;{code}&#010; to(""kafka:bar?bridgeEndpoint=true"")&#010;{code}&#010;&#010;&gt; Route from kafka topic to another kafka topic issue&#010;&gt; ---------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11193&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11193&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-kafka&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;&#010;&gt; Because the consumer set headers with kafka topic and partition from the consumer, then&#010;these will override the endpoint configured on the producer, eg&#010;&gt; {code}&#010;&gt; from(""kafka:foo"")&#010;&gt;    ..&#010;&gt;    to(""kafka:bar"")&#010;&gt; {code}&#010;&gt; will end up going back to foo.&#010;&gt; You can remove the headers to make it work&#010;&gt; {code}&#010;&gt; from(""kafka:foo"")&#010;&gt;    ..&#010;&gt;    removeHeaders(""kafka*"")&#010;&gt;    to(""kafka:bar"")&#010;&gt; {code}&#010;&gt; But maybe we should have an option on the producer that takes the endpoint value always,&#010;and you need to turn the option on to allow header overrides.&#010;&gt; Another option is to detect that its the same topic to avoid sending it back to itself.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
802,807,Claus Ibsen (JIRA),  [jira] [Assigned] (CAMEL-11193) Route from kafka topic to another kafka topic issue,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066280.1493026516000.31988.1493031544031%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 10:59:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11193?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reassigned CAMEL-11193:&#010;-----------------------------------&#010;&#010;    Assignee: Claus Ibsen&#010;&#010;&gt; Route from kafka topic to another kafka topic issue&#010;&gt; ---------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11193&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11193&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-kafka&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;&#010;&gt; Because the consumer set headers with kafka topic and partition from the consumer, then&#010;these will override the endpoint configured on the producer, eg&#010;&gt; {code}&#010;&gt; from(""kafka:foo"")&#010;&gt;    ..&#010;&gt;    to(""kafka:bar"")&#010;&gt; {code}&#010;&gt; will end up going back to foo.&#010;&gt; You can remove the headers to make it work&#010;&gt; {code}&#010;&gt; from(""kafka:foo"")&#010;&gt;    ..&#010;&gt;    removeHeaders(""kafka*"")&#010;&gt;    to(""kafka:bar"")&#010;&gt; {code}&#010;&gt; But maybe we should have an option on the producer that takes the endpoint value always,&#010;and you need to turn the option on to allow header overrides.&#010;&gt; Another option is to detect that its the same topic to avoid sending it back to itself.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
803,808,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11193) Route from kafka topic to another kafka topic issue,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066280.1493026516000.31993.1493031844032%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 11:04:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11193?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11193:&#010;--------------------------------&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Route from kafka topic to another kafka topic issue&#010;&gt; ---------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11193&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11193&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-kafka&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Because the consumer set headers with kafka topic and partition from the consumer, then&#010;these will override the endpoint configured on the producer, eg&#010;&gt; {code}&#010;&gt; from(""kafka:foo"")&#010;&gt;    ..&#010;&gt;    to(""kafka:bar"")&#010;&gt; {code}&#010;&gt; will end up going back to foo.&#010;&gt; You can remove the headers to make it work&#010;&gt; {code}&#010;&gt; from(""kafka:foo"")&#010;&gt;    ..&#010;&gt;    removeHeaders(""kafka*"")&#010;&gt;    to(""kafka:bar"")&#010;&gt; {code}&#010;&gt; But maybe we should have an option on the producer that takes the endpoint value always,&#010;and you need to turn the option on to allow header overrides.&#010;&gt; Another option is to detect that its the same topic to avoid sending it back to itself.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
804,809,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11193) Route from kafka topic to another kafka topic issue,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066280.1493026516000.32107.1493033764580%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 11:36:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11193?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981021#comment-15981021&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11193:&#010;-------------------------------------&#010;&#010;Okay so added an option to detect that circular topic and then avoid doing that by default.&#010;Then it works OOTB without having to set bridgeEndpoint=true etc.&#010;&#010;&gt; Route from kafka topic to another kafka topic issue&#010;&gt; ---------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11193&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11193&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-kafka&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Because the consumer set headers with kafka topic and partition from the consumer, then&#010;these will override the endpoint configured on the producer, eg&#010;&gt; {code}&#010;&gt; from(""kafka:foo"")&#010;&gt;    ..&#010;&gt;    to(""kafka:bar"")&#010;&gt; {code}&#010;&gt; will end up going back to foo.&#010;&gt; You can remove the headers to make it work&#010;&gt; {code}&#010;&gt; from(""kafka:foo"")&#010;&gt;    ..&#010;&gt;    removeHeaders(""kafka*"")&#010;&gt;    to(""kafka:bar"")&#010;&gt; {code}&#010;&gt; But maybe we should have an option on the producer that takes the endpoint value always,&#010;and you need to turn the option on to allow header overrides.&#010;&gt; Another option is to detect that its the same topic to avoid sending it back to itself.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
805,810,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11193) Route from kafka topic to another kafka topic issue,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066280.1493026516000.32108.1493033764587%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 11:36:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11193?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11193.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Route from kafka topic to another kafka topic issue&#010;&gt; ---------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11193&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11193&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-kafka&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Because the consumer set headers with kafka topic and partition from the consumer, then&#010;these will override the endpoint configured on the producer, eg&#010;&gt; {code}&#010;&gt; from(""kafka:foo"")&#010;&gt;    ..&#010;&gt;    to(""kafka:bar"")&#010;&gt; {code}&#010;&gt; will end up going back to foo.&#010;&gt; You can remove the headers to make it work&#010;&gt; {code}&#010;&gt; from(""kafka:foo"")&#010;&gt;    ..&#010;&gt;    removeHeaders(""kafka*"")&#010;&gt;    to(""kafka:bar"")&#010;&gt; {code}&#010;&gt; But maybe we should have an option on the producer that takes the endpoint value always,&#010;and you need to turn the option on to allow header overrides.&#010;&gt; Another option is to detect that its the same topic to avoid sending it back to itself.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
806,811,,[jira] [Created] (CAMEL-11194) Upgrade Checkstyle and update rules,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066280.1493026516000.32108.1493033764587%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 11:36:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11193?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11193.&#010;---------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Route from kafka topic to another kafka topic issue&#010;&gt; ---------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11193&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11193&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-kafka&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; Because the consumer set headers with kafka topic and partition from the consumer, then&#010;these will override the endpoint configured on the producer, eg&#010;&gt; {code}&#010;&gt; from(""kafka:foo"")&#010;&gt;    ..&#010;&gt;    to(""kafka:bar"")&#010;&gt; {code}&#010;&gt; will end up going back to foo.&#010;&gt; You can remove the headers to make it work&#010;&gt; {code}&#010;&gt; from(""kafka:foo"")&#010;&gt;    ..&#010;&gt;    removeHeaders(""kafka*"")&#010;&gt;    to(""kafka:bar"")&#010;&gt; {code}&#010;&gt; But maybe we should have an option on the producer that takes the endpoint value always,&#010;and you need to turn the option on to allow header overrides.&#010;&gt; Another option is to detect that its the same topic to avoid sending it back to itself.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
807,812,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11194) Upgrade Checkstyle and update rules,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066306.1493034900000.32212.1493034904079%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 11:55:04 GMT","Zoran Regvart created CAMEL-11194:&#010;-------------------------------------&#010;&#010;             Summary: Upgrade Checkstyle and update rules&#010;                 Key: CAMEL-11194&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11194&#010;             Project: Camel&#010;          Issue Type: Task&#010;          Components: build system&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;            Priority: Minor&#010;&#010;&#010;We are using Checkstyle version 6.17 (almost a year old), we should upgrade to latest.&#010;This could mean that some rules need to be updated.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
808,813,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11194) Upgrade Checkstyle and update rules,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066306.1493034900000.32551.1493038204089%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 12:50:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11194?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981114#comment-15981114&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11194:&#010;----------------------------------------&#010;&#010;GitHub user zregvart opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1656&#010;&#010;    CAMEL-11194 Upgrade Checkstyle and update rules&#010;&#010;    This upgrades Checkstyle to the latest version currently available, refines the way license&#010;header in properties files are handled and sets the execution id of Checkstyle Maven plugin&#010;to `default-cli` so that the checks can be simply run with:&#010;    &#010;        mvn checkstyle:check&#010;    &#010;    Changes are split into multiple commits to make it easier to review.&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/zregvart/camel CAMEL-11194&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1656.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1656&#010;    &#010;----&#010;commit c3bba7ae6d980448f1153c4f0c96755838c314e1&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-23T11:13:51Z&#010;&#010;    Fixed license header&#010;&#010;commit cf8670e7d643b3fe07776c974840ea0b78060093&#010;Author: Jonathan Schoreels &lt;jonathan.schoreels@gmail.com&gt;&#010;Date:   2017-04-23T13:52:22Z&#010;&#010;    JdbcAggregationRepository : Adds some javadoc to clearly specify that properties are NOT&#010;persisted, and other properties as described in camel.apache.org&#010;&#010;commit 3bf9847506cc0f963e3d5b0c6bc7774b0aab3f4e&#010;Author: Jonathan Schoreels &lt;jonathan.schoreels@gmail.com&gt;&#010;Date:   2017-04-23T14:07:53Z&#010;&#010;    Adds JdbcAggregationRepository java doc to make clear that deadletter will be tried until&#010;it succeed&#010;&#010;commit a4d2334ce7b95a964d1f029b5188818793118e8d&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T07:44:46Z&#010;&#010;    Merge branch 'master' of https://github.com/JSchoreels/camel&#010;&#010;commit 820410e2186a0135eab041de0f0e58843d21731c&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T08:17:29Z&#010;&#010;    Skip connector examples as they are not intended for release.&#010;&#010;commit 7a511ef5230b7447957e27a6082a6ac5e85e2f9f&#010;Author: Chirag Anand &lt;canand@gp.cv.commvault.com&gt;&#010;Date:   2017-04-24T05:13:08Z&#010;&#010;    Added the provision to pass Solr Params when pushing SolrInputDocuments.&#010;    &#010;    This change is necessary when you intend to have an update processor chain to be trigerred&#010;or any such for which parameters are to be passed along with the url.&#010;&#010;commit d01d7777c3e345aad763db9a5e9c736df6727b65&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T08:30:53Z&#010;&#010;    CAMEL-11185: Remove camel-scr-starter spring boot module&#010;&#010;commit bab5b27bce8d9d799cfa4c77a1bfd1a1c023d281&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T08:46:47Z&#010;&#010;    CAMEL-11189: Upgrade zipkin&#010;&#010;commit 1d164d54675069fb672be606e99c2c7944cd8f23&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T11:03:56Z&#010;&#010;    CAMEL-1193: Make kafka easier to use when routing between topics to avoid the header topic&#010;causing Camel to send the message to itself instead of the endpoint topic name as users would&#010;expect.&#010;&#010;commit 8b5e93ec694ef31a2bd43248735d3bc274f4e9d3&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T11:24:20Z&#010;&#010;    Make kafka bridgeEndpoint option on configuraion so they are all there and thus also available&#010;via spring boot&#010;&#010;commit 6243402b2291af99c7f7b950f5e905489d403074&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T11:29:33Z&#010;&#010;    Add some logging in kafka producer when it sends/has all sent etc.&#010;&#010;commit 97ecc14735765749fdba823acf5e9ba1a5628424&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T11:40:33Z&#010;&#010;    Logging level to info as debug is massiively verbose&#010;&#010;commit 3ffd940a70994c9810b7b915d7a336fd8ad689cb&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T11:51:15Z&#010;&#010;    CAMEL-11186: upgrade dropwizard metrics to align with Spring Boot&#010;&#010;commit 27517e78e4ffcfafb502f1c863bc0d8aede871bc&#010;Author: Zoran Regvart &lt;zregvart@apache.org&gt;&#010;Date:   2017-04-24T11:46:12Z&#010;&#010;    CAMEL-11194 Upgrade Checkstyle and update rules&#010;    &#010;    This updates the Checkstyle version to 7.6.1, it also changes the&#010;    execution id from `validate` to `default-cli` which allows the&#010;    Checkstyle Maven plugin to be run with just `mvn checkstyle:check`.&#010;    &#010;    The change in Checkstyle rules now allows for different header comment&#010;    on source files and on properties files. The rule that affects the use&#010;    of `final` keyword and the rule that checks the `return` statement count&#010;    per method were tweaked to reflect the current code base.&#010;&#010;commit 13b0c17d865d15f06300f9cde317b1581b962c48&#010;Author: Zoran Regvart &lt;zregvart@apache.org&gt;&#010;Date:   2017-04-24T11:45:21Z&#010;&#010;    CAMEL-11194 Upgrade Checkstyle and update rules&#010;    &#010;    This updates the license header in properties files.&#010;&#010;commit 5bfe72d54bb86deb8630985091aad540743178fa&#010;Author: Zoran Regvart &lt;zregvart@apache.org&gt;&#010;Date:   2017-04-24T11:48:23Z&#010;&#010;    CAMEL-11194 Upgrade Checkstyle and update rules&#010;    &#010;    Changes the formatting of Spring Boot auto configuration starters to use&#010;    the built in formatter.&#010;    &#010;    The major change being the addition of newline at the end of the file.&#010;&#010;commit aaf4ae9d78407ad520e92af1f2ed783ec1cffc0b&#010;Author: Zoran Regvart &lt;zregvart@apache.org&gt;&#010;Date:   2017-04-24T11:48:50Z&#010;&#010;    CAMEL-11194 Upgrade Checkstyle and update rules&#010;    &#010;    This fixes a number of Checkstyle issues mostly whitespace and `final`&#010;    keyword use.&#010;&#010;----&#010;&#010;&#010;&gt; Upgrade Checkstyle and update rules&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11194&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11194&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; We are using Checkstyle version 6.17 (almost a year old), we should upgrade to latest.&#010;&gt; This could mean that some rules need to be updated.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
809,814,,[jira] [Commented] (CAMEL-9296) camel-blueprint-2.16.0.xsd is broken,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066306.1493034900000.32551.1493038204089%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 12:50:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11194?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981114#comment-15981114&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11194:&#010;----------------------------------------&#010;&#010;GitHub user zregvart opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1656&#010;&#010;    CAMEL-11194 Upgrade Checkstyle and update rules&#010;&#010;    This upgrades Checkstyle to the latest version currently available, refines the way license&#010;header in properties files are handled and sets the execution id of Checkstyle Maven plugin&#010;to `default-cli` so that the checks can be simply run with:&#010;    &#010;        mvn checkstyle:check&#010;    &#010;    Changes are split into multiple commits to make it easier to review.&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/zregvart/camel CAMEL-11194&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1656.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1656&#010;    &#010;----&#010;commit c3bba7ae6d980448f1153c4f0c96755838c314e1&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-23T11:13:51Z&#010;&#010;    Fixed license header&#010;&#010;commit cf8670e7d643b3fe07776c974840ea0b78060093&#010;Author: Jonathan Schoreels &lt;jonathan.schoreels@gmail.com&gt;&#010;Date:   2017-04-23T13:52:22Z&#010;&#010;    JdbcAggregationRepository : Adds some javadoc to clearly specify that properties are NOT&#010;persisted, and other properties as described in camel.apache.org&#010;&#010;commit 3bf9847506cc0f963e3d5b0c6bc7774b0aab3f4e&#010;Author: Jonathan Schoreels &lt;jonathan.schoreels@gmail.com&gt;&#010;Date:   2017-04-23T14:07:53Z&#010;&#010;    Adds JdbcAggregationRepository java doc to make clear that deadletter will be tried until&#010;it succeed&#010;&#010;commit a4d2334ce7b95a964d1f029b5188818793118e8d&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T07:44:46Z&#010;&#010;    Merge branch 'master' of https://github.com/JSchoreels/camel&#010;&#010;commit 820410e2186a0135eab041de0f0e58843d21731c&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T08:17:29Z&#010;&#010;    Skip connector examples as they are not intended for release.&#010;&#010;commit 7a511ef5230b7447957e27a6082a6ac5e85e2f9f&#010;Author: Chirag Anand &lt;canand@gp.cv.commvault.com&gt;&#010;Date:   2017-04-24T05:13:08Z&#010;&#010;    Added the provision to pass Solr Params when pushing SolrInputDocuments.&#010;    &#010;    This change is necessary when you intend to have an update processor chain to be trigerred&#010;or any such for which parameters are to be passed along with the url.&#010;&#010;commit d01d7777c3e345aad763db9a5e9c736df6727b65&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T08:30:53Z&#010;&#010;    CAMEL-11185: Remove camel-scr-starter spring boot module&#010;&#010;commit bab5b27bce8d9d799cfa4c77a1bfd1a1c023d281&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T08:46:47Z&#010;&#010;    CAMEL-11189: Upgrade zipkin&#010;&#010;commit 1d164d54675069fb672be606e99c2c7944cd8f23&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T11:03:56Z&#010;&#010;    CAMEL-1193: Make kafka easier to use when routing between topics to avoid the header topic&#010;causing Camel to send the message to itself instead of the endpoint topic name as users would&#010;expect.&#010;&#010;commit 8b5e93ec694ef31a2bd43248735d3bc274f4e9d3&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T11:24:20Z&#010;&#010;    Make kafka bridgeEndpoint option on configuraion so they are all there and thus also available&#010;via spring boot&#010;&#010;commit 6243402b2291af99c7f7b950f5e905489d403074&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T11:29:33Z&#010;&#010;    Add some logging in kafka producer when it sends/has all sent etc.&#010;&#010;commit 97ecc14735765749fdba823acf5e9ba1a5628424&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T11:40:33Z&#010;&#010;    Logging level to info as debug is massiively verbose&#010;&#010;commit 3ffd940a70994c9810b7b915d7a336fd8ad689cb&#010;Author: Claus Ibsen &lt;davsclaus@apache.org&gt;&#010;Date:   2017-04-24T11:51:15Z&#010;&#010;    CAMEL-11186: upgrade dropwizard metrics to align with Spring Boot&#010;&#010;commit 27517e78e4ffcfafb502f1c863bc0d8aede871bc&#010;Author: Zoran Regvart &lt;zregvart@apache.org&gt;&#010;Date:   2017-04-24T11:46:12Z&#010;&#010;    CAMEL-11194 Upgrade Checkstyle and update rules&#010;    &#010;    This updates the Checkstyle version to 7.6.1, it also changes the&#010;    execution id from `validate` to `default-cli` which allows the&#010;    Checkstyle Maven plugin to be run with just `mvn checkstyle:check`.&#010;    &#010;    The change in Checkstyle rules now allows for different header comment&#010;    on source files and on properties files. The rule that affects the use&#010;    of `final` keyword and the rule that checks the `return` statement count&#010;    per method were tweaked to reflect the current code base.&#010;&#010;commit 13b0c17d865d15f06300f9cde317b1581b962c48&#010;Author: Zoran Regvart &lt;zregvart@apache.org&gt;&#010;Date:   2017-04-24T11:45:21Z&#010;&#010;    CAMEL-11194 Upgrade Checkstyle and update rules&#010;    &#010;    This updates the license header in properties files.&#010;&#010;commit 5bfe72d54bb86deb8630985091aad540743178fa&#010;Author: Zoran Regvart &lt;zregvart@apache.org&gt;&#010;Date:   2017-04-24T11:48:23Z&#010;&#010;    CAMEL-11194 Upgrade Checkstyle and update rules&#010;    &#010;    Changes the formatting of Spring Boot auto configuration starters to use&#010;    the built in formatter.&#010;    &#010;    The major change being the addition of newline at the end of the file.&#010;&#010;commit aaf4ae9d78407ad520e92af1f2ed783ec1cffc0b&#010;Author: Zoran Regvart &lt;zregvart@apache.org&gt;&#010;Date:   2017-04-24T11:48:50Z&#010;&#010;    CAMEL-11194 Upgrade Checkstyle and update rules&#010;    &#010;    This fixes a number of Checkstyle issues mostly whitespace and `final`&#010;    keyword use.&#010;&#010;----&#010;&#010;&#010;&gt; Upgrade Checkstyle and update rules&#010;&gt; -----------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11194&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11194&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: build system&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; We are using Checkstyle version 6.17 (almost a year old), we should upgrade to latest.&#010;&gt; This could mean that some rules need to be updated.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
810,815,Oscar Mauricio Cadena (JIRA),  [jira] [Commented] (CAMEL-9296) camel-blueprint-2.16.0.xsd is broken,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12910995.1446801414000.32808.1493040844293%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 13:34:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-9296?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981157#comment-15981157&#010;] &#010;&#010;Oscar Mauricio Cadena commented on CAMEL-9296:&#010;----------------------------------------------&#010;&#010;Hi Clauss. Please I need some help with the same topic.&#010;&#010;I have four days with this problem. I need to make a basic enrich example but when i run the&#010;basic example always i getting the same error in the log console Attribute 'uri' is not allowed&#010;to appear in element 'enrich'&#010;&#010;this is my code &#010;&#010;&lt;beans xmlns=""http://www.springframework.org/schema/beans""&#010;    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""        http://www.springframework.org/schema/beans&#010;http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring&#010;http://camel.apache.org/schema/spring/camel-spring.xsd""&gt;&#010;    &lt;camelContext id=""_camelContext1"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;        &lt;route id=""_route5""&gt;&#010;            &lt;from id=""_from1"" uri=""file:work/cbr/input""/&gt;&#010;            &lt;to id=""_to1"" uri=""log:output""/&gt;&#010;            &lt;to id=""_to2"" uri=""direct:Process""/&gt;&#010;        &lt;/route&gt;&#010;        &lt;route id=""_route1""&gt;&#010;            &lt;from id=""_from2"" uri=""direct:Process""/&gt;&#010;            &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;    &#009;&#009;&lt;to uri=""direct:result""/&gt;&#010;        &lt;/route&gt;&#010;        &lt;route id=""_route2""&gt;&#010;            &lt;from id=""_from3"" uri=""direct:resource""/&gt;&#010;            &lt;process id=""reportProcess"" ref=""processDataProcessor""/&gt;&#010;            &lt;to id=""_to4"" uri=""log:output""/&gt;&#010;        &lt;/route&gt;&#010;        &lt;route id=""_route3""&gt;&#010;            &lt;from id=""_from4"" uri=""direct:result""/&gt;&#010;            &lt;to id=""_to5"" uri=""log:output""/&gt;&#010;            &lt;to id=""_to6"" uri=""file:work/cbr/output""/&gt;&#010;        &lt;/route&gt;&#010;    &lt;/camelContext&gt;&#010;&lt;/beans&gt;&#010;&#010;i have used CAMEL 2.18 and camel 2.15.&#010;&#010;with camel 2.18 this code is not working &#010;&#010;&lt;enrich strategyRef=""aggregationStrategy""&gt;&#010;      &lt;constant&gt;direct:resource&lt;/constant&gt;&#010;&lt;/enrich&gt;&#010;&#010;the Jboss developer studio tell me that constant is not a nested element. and thorws and error&#010;in the xml.&#010;and if i use 2.18 with this code &#010;&#010;&lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&#010;it told me that the expression is a mandatory field. it shows a warning&#010;&#010;i tryied the same with the 2.15 but with the same results. &#010;&#010;Im using fuse server 6.3. im new with this so i appreciate any help.&#010;&#010;&gt; camel-blueprint-2.16.0.xsd is broken&#010;&gt; ------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9296&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9296&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-blueprint&#010;&gt;    Affects Versions: 2.16.0&#010;&gt;            Reporter: Ralf Steppacher&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;&#010;&gt; The blueprint schema camel-blueprint-2.16.0.xsd breaks elements {{&lt;enrich&gt;}} and&#010;{{&lt;wiretap&gt;}}:&#010;&gt; - {{&lt;enrich&gt;}}: attributes {{uri}} and {{ref}} are not available&#010;&gt; - {{&lt;wiretap&gt;}}: attribute {{ref}} is not available&#010;&gt; Deploying a blueprint context in Karaf (4.0.2) fails with&#010;&gt; {noformat}&#010;&gt; Caused by: org.xml.sax.SAXParseException: cvc-complex-type.3.2.2: Attribute 'uri' is&#010;not allowed to appear in element 'enrich'.&#010;&gt; &#009;at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)[:]&#010;&gt; &#009;at org.apache.xerces.util.ErrorHandlerWrapper.error(Unknown Source)[:]&#010;&gt; &#009;at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)[:]&#010;&gt; &#009;at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)[:]&#010;&gt; [..]&#010;&gt; {noformat}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
811,816,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-9296) camel-blueprint-2.16.0.xsd is broken,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12910995.1446801414000.32823.1493041024240%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 13:37:04 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-9296?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981160#comment-15981160&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-9296:&#010;------------------------------------&#010;&#010;Dont post on old tickets&#010;&#010;&gt; camel-blueprint-2.16.0.xsd is broken&#010;&gt; ------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9296&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9296&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-blueprint&#010;&gt;    Affects Versions: 2.16.0&#010;&gt;            Reporter: Ralf Steppacher&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;&#010;&gt; The blueprint schema camel-blueprint-2.16.0.xsd breaks elements {{&lt;enrich&gt;}} and&#010;{{&lt;wiretap&gt;}}:&#010;&gt; - {{&lt;enrich&gt;}}: attributes {{uri}} and {{ref}} are not available&#010;&gt; - {{&lt;wiretap&gt;}}: attribute {{ref}} is not available&#010;&gt; Deploying a blueprint context in Karaf (4.0.2) fails with&#010;&gt; {noformat}&#010;&gt; Caused by: org.xml.sax.SAXParseException: cvc-complex-type.3.2.2: Attribute 'uri' is&#010;not allowed to appear in element 'enrich'.&#010;&gt; &#009;at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)[:]&#010;&gt; &#009;at org.apache.xerces.util.ErrorHandlerWrapper.error(Unknown Source)[:]&#010;&gt; &#009;at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)[:]&#010;&gt; &#009;at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)[:]&#010;&gt; [..]&#010;&gt; {noformat}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
812,817,,[jira] [Created] (CAMEL-11195) Enrich Element uri error,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12910995.1446801414000.32823.1493041024240%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 13:37:04 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-9296?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981160#comment-15981160&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-9296:&#010;------------------------------------&#010;&#010;Dont post on old tickets&#010;&#010;&gt; camel-blueprint-2.16.0.xsd is broken&#010;&gt; ------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-9296&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-9296&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-blueprint&#010;&gt;    Affects Versions: 2.16.0&#010;&gt;            Reporter: Ralf Steppacher&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;&#010;&gt; The blueprint schema camel-blueprint-2.16.0.xsd breaks elements {{&lt;enrich&gt;}} and&#010;{{&lt;wiretap&gt;}}:&#010;&gt; - {{&lt;enrich&gt;}}: attributes {{uri}} and {{ref}} are not available&#010;&gt; - {{&lt;wiretap&gt;}}: attribute {{ref}} is not available&#010;&gt; Deploying a blueprint context in Karaf (4.0.2) fails with&#010;&gt; {noformat}&#010;&gt; Caused by: org.xml.sax.SAXParseException: cvc-complex-type.3.2.2: Attribute 'uri' is&#010;not allowed to appear in element 'enrich'.&#010;&gt; &#009;at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)[:]&#010;&gt; &#009;at org.apache.xerces.util.ErrorHandlerWrapper.error(Unknown Source)[:]&#010;&gt; &#009;at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)[:]&#010;&gt; &#009;at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)[:]&#010;&gt; [..]&#010;&gt; {noformat}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
813,818,Oscar Mauricio Cadena (JIRA),  [jira] [Created] (CAMEL-11195) Enrich Element uri error,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066341.1493041243000.32864.1493041264186%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 13:41:04 GMT","Oscar Mauricio Cadena created CAMEL-11195:&#010;---------------------------------------------&#010;&#010;             Summary: Enrich Element uri error &#010;                 Key: CAMEL-11195&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11195&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-core&#010;    Affects Versions: 2.18.3, 2.15.6&#010;         Environment: Jboss develper studio 10.0.3&#010;            Reporter: Oscar Mauricio Cadena&#010;&#010;&#010;Hi Clauss. Please I need some help with the same topic.&#010;I have four days with this problem. I need to make a basic enrich example but when i run the&#010;basic example always i getting the same error in the log console Attribute 'uri' is not allowed&#010;to appear in element 'enrich'&#010;this is my code&#010;&lt;beans xmlns=""http://www.springframework.org/schema/beans""&#010;xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation="" http://www.springframework.org/schema/beans&#010;http://www.springframework.org/schema/beans/spring-beans.xsd http://camel.apache.org/schema/spring&#010;http://camel.apache.org/schema/spring/camel-spring.xsd""&gt;&#010;&lt;camelContext id=""_camelContext1"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;&lt;route id=""_route5""&gt;&#010;&lt;from id=""_from1"" uri=""file:work/cbr/input""/&gt;&#010;&lt;to id=""_to1"" uri=""log:output""/&gt;&#010;&lt;to id=""_to2"" uri=""direct:Process""/&gt;&#010;&lt;/route&gt;&#010;&lt;route id=""_route1""&gt;&#010;&lt;from id=""_from2"" uri=""direct:Process""/&gt;&#010;&lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&lt;to uri=""direct:result""/&gt;&#010;&lt;/route&gt;&#010;&lt;route id=""_route2""&gt;&#010;&lt;from id=""_from3"" uri=""direct:resource""/&gt;&#010;&lt;process id=""reportProcess"" ref=""processDataProcessor""/&gt;&#010;&lt;to id=""_to4"" uri=""log:output""/&gt;&#010;&lt;/route&gt;&#010;&lt;route id=""_route3""&gt;&#010;&lt;from id=""_from4"" uri=""direct:result""/&gt;&#010;&lt;to id=""_to5"" uri=""log:output""/&gt;&#010;&lt;to id=""_to6"" uri=""file:work/cbr/output""/&gt;&#010;&lt;/route&gt;&#010;&lt;/camelContext&gt;&#010;&lt;/beans&gt;&#010;i have used CAMEL 2.18 and camel 2.15.&#010;with camel 2.18 this code is not working&#010;&lt;enrich strategyRef=""aggregationStrategy""&gt;&#010;&lt;constant&gt;direct:resource&lt;/constant&gt;&#010;&lt;/enrich&gt;&#010;the Jboss developer studio tell me that constant is not a nested element. and thorws and error&#010;in the xml.&#010;and if i use 2.18 with this code&#010;&lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;it told me that the expression is a mandatory field. it shows a warning&#010;i tryied the same with the 2.15 but with the same results.&#010;Im using fuse server 6.3. im new with this so i appreciate any help.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
814,819,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11195) Enrich Element uri error,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066341.1493041243000.32899.1493041924112%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 13:52:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11195?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11195.&#010;---------------------------------&#010;    Resolution: Invalid&#010;&#010;Use the user forum or ask on the vendor of that product, eg Red Hat / JBoss&#010;&#010;&gt; Enrich Element uri error &#010;&gt; -------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11195&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11195&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.15.6, 2.18.3&#010;&gt;         Environment: Jboss develper studio 10.0.3&#010;&gt;            Reporter: Oscar Mauricio Cadena&#010;&gt;&#010;&gt; Hi Clauss. Please I need some help with the same topic.&#010;&gt; I have four days with this problem. I need to make a basic enrich example but when i&#010;run the basic example always i getting the same error in the log console Attribute 'uri' is&#010;not allowed to appear in element 'enrich'&#010;&gt; this is my code&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans""&#010;&gt; xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation="" http://www.springframework.org/schema/beans&#010;http://www.springframework.org/schema/beans/spring-beans.xsd http://camel.apache.org/schema/spring&#010;http://camel.apache.org/schema/spring/camel-spring.xsd""&gt;&#010;&gt; &lt;camelContext id=""_camelContext1"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;&gt; &lt;route id=""_route5""&gt;&#010;&gt; &lt;from id=""_from1"" uri=""file:work/cbr/input""/&gt;&#010;&gt; &lt;to id=""_to1"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route1""&gt;&#010;&gt; &lt;from id=""_from2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; &lt;to uri=""direct:result""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route2""&gt;&#010;&gt; &lt;from id=""_from3"" uri=""direct:resource""/&gt;&#010;&gt; &lt;process id=""reportProcess"" ref=""processDataProcessor""/&gt;&#010;&gt; &lt;to id=""_to4"" uri=""log:output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route3""&gt;&#010;&gt; &lt;from id=""_from4"" uri=""direct:result""/&gt;&#010;&gt; &lt;to id=""_to5"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to6"" uri=""file:work/cbr/output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; i have used CAMEL 2.18 and camel 2.15.&#010;&gt; with camel 2.18 this code is not working&#010;&gt; &lt;enrich strategyRef=""aggregationStrategy""&gt;&#010;&gt; &lt;constant&gt;direct:resource&lt;/constant&gt;&#010;&gt; &lt;/enrich&gt;&#010;&gt; the Jboss developer studio tell me that constant is not a nested element. and thorws&#010;and error in the xml.&#010;&gt; and if i use 2.18 with this code&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; it told me that the expression is a mandatory field. it shows a warning&#010;&gt; i tryied the same with the 2.15 but with the same results.&#010;&gt; Im using fuse server 6.3. im new with this so i appreciate any help.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
815,820,Claus Ibsen (JIRA),  [jira] [Comment Edited] (CAMEL-11195) Enrich Element uri error,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066341.1493041243000.32907.1493041984223%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 13:53:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11195?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981175#comment-15981175&#010;] &#010;&#010;Claus Ibsen edited comment on CAMEL-11195 at 4/24/17 1:52 PM:&#010;--------------------------------------------------------------&#010;&#010;Use the user forum or ask on the vendor of that product, eg Red Hat / JBoss&#010;&#010;For general Apache Camel use the user forum&#010;http://camel.apache.org/discussion-forums.html&#010;&#010;For JBoss Fuse you can get help here&#010;https://developers.redhat.com/products/fuse/help/&#010;&#010;&#010;was (Author: davsclaus):&#010;Use the user forum or ask on the vendor of that product, eg Red Hat / JBoss&#010;&#010;&gt; Enrich Element uri error &#010;&gt; -------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11195&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11195&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.15.6, 2.18.3&#010;&gt;         Environment: Jboss develper studio 10.0.3&#010;&gt;            Reporter: Oscar Mauricio Cadena&#010;&gt;&#010;&gt; Hi Clauss. Please I need some help with the same topic.&#010;&gt; I have four days with this problem. I need to make a basic enrich example but when i&#010;run the basic example always i getting the same error in the log console Attribute 'uri' is&#010;not allowed to appear in element 'enrich'&#010;&gt; this is my code&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans""&#010;&gt; xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation="" http://www.springframework.org/schema/beans&#010;http://www.springframework.org/schema/beans/spring-beans.xsd http://camel.apache.org/schema/spring&#010;http://camel.apache.org/schema/spring/camel-spring.xsd""&gt;&#010;&gt; &lt;camelContext id=""_camelContext1"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;&gt; &lt;route id=""_route5""&gt;&#010;&gt; &lt;from id=""_from1"" uri=""file:work/cbr/input""/&gt;&#010;&gt; &lt;to id=""_to1"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route1""&gt;&#010;&gt; &lt;from id=""_from2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; &lt;to uri=""direct:result""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route2""&gt;&#010;&gt; &lt;from id=""_from3"" uri=""direct:resource""/&gt;&#010;&gt; &lt;process id=""reportProcess"" ref=""processDataProcessor""/&gt;&#010;&gt; &lt;to id=""_to4"" uri=""log:output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route3""&gt;&#010;&gt; &lt;from id=""_from4"" uri=""direct:result""/&gt;&#010;&gt; &lt;to id=""_to5"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to6"" uri=""file:work/cbr/output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; i have used CAMEL 2.18 and camel 2.15.&#010;&gt; with camel 2.18 this code is not working&#010;&gt; &lt;enrich strategyRef=""aggregationStrategy""&gt;&#010;&gt; &lt;constant&gt;direct:resource&lt;/constant&gt;&#010;&gt; &lt;/enrich&gt;&#010;&gt; the Jboss developer studio tell me that constant is not a nested element. and thorws&#010;and error in the xml.&#010;&gt; and if i use 2.18 with this code&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; it told me that the expression is a mandatory field. it shows a warning&#010;&gt; i tryied the same with the 2.15 but with the same results.&#010;&gt; Im using fuse server 6.3. im new with this so i appreciate any help.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
816,821,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11195) Enrich Element uri error,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066341.1493041243000.33057.1493043604233%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 14:20:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11195?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981210#comment-15981210&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11195:&#010;-------------------------------------&#010;&#010;And btw you should use the same Camel version that you use with JBoss Fuse. Eg JBoss Fuse&#010;6.3 use that Camel version it ships with, that is what it supports.&#010;&#010;&gt; Enrich Element uri error &#010;&gt; -------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11195&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11195&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.15.6, 2.18.3&#010;&gt;         Environment: Jboss develper studio 10.0.3&#010;&gt;            Reporter: Oscar Mauricio Cadena&#010;&gt;&#010;&gt; Hi Clauss. Please I need some help with the same topic.&#010;&gt; I have four days with this problem. I need to make a basic enrich example but when i&#010;run the basic example always i getting the same error in the log console Attribute 'uri' is&#010;not allowed to appear in element 'enrich'&#010;&gt; this is my code&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans""&#010;&gt; xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation="" http://www.springframework.org/schema/beans&#010;http://www.springframework.org/schema/beans/spring-beans.xsd http://camel.apache.org/schema/spring&#010;http://camel.apache.org/schema/spring/camel-spring.xsd""&gt;&#010;&gt; &lt;camelContext id=""_camelContext1"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;&gt; &lt;route id=""_route5""&gt;&#010;&gt; &lt;from id=""_from1"" uri=""file:work/cbr/input""/&gt;&#010;&gt; &lt;to id=""_to1"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route1""&gt;&#010;&gt; &lt;from id=""_from2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; &lt;to uri=""direct:result""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route2""&gt;&#010;&gt; &lt;from id=""_from3"" uri=""direct:resource""/&gt;&#010;&gt; &lt;process id=""reportProcess"" ref=""processDataProcessor""/&gt;&#010;&gt; &lt;to id=""_to4"" uri=""log:output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route3""&gt;&#010;&gt; &lt;from id=""_from4"" uri=""direct:result""/&gt;&#010;&gt; &lt;to id=""_to5"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to6"" uri=""file:work/cbr/output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; i have used CAMEL 2.18 and camel 2.15.&#010;&gt; with camel 2.18 this code is not working&#010;&gt; &lt;enrich strategyRef=""aggregationStrategy""&gt;&#010;&gt; &lt;constant&gt;direct:resource&lt;/constant&gt;&#010;&gt; &lt;/enrich&gt;&#010;&gt; the Jboss developer studio tell me that constant is not a nested element. and thorws&#010;and error in the xml.&#010;&gt; and if i use 2.18 with this code&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; it told me that the expression is a mandatory field. it shows a warning&#010;&gt; i tryied the same with the 2.15 but with the same results.&#010;&gt; Im using fuse server 6.3. im new with this so i appreciate any help.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
817,822,Oscar Mauricio Cadena (JIRA),  [jira] [Commented] (CAMEL-11195) Enrich Element uri error,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066341.1493041243000.33089.1493043904153%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 14:25:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11195?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981220#comment-15981220&#010;] &#010;&#010;Oscar Mauricio Cadena commented on CAMEL-11195:&#010;-----------------------------------------------&#010;&#010;Im so sorry claus. Im new with this so i dont understand what you are telling to me.&#010;&#010;I'm creating a fuse integration project so in this creation im selecting the camel version.&#010;&#010;The camel version of the fuse server 6.3 can be different from the project im creating? where&#010;can i see that.&#010;&#010;&#010;&gt; Enrich Element uri error &#010;&gt; -------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11195&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11195&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.15.6, 2.18.3&#010;&gt;         Environment: Jboss develper studio 10.0.3&#010;&gt;            Reporter: Oscar Mauricio Cadena&#010;&gt;&#010;&gt; Hi Clauss. Please I need some help with the same topic.&#010;&gt; I have four days with this problem. I need to make a basic enrich example but when i&#010;run the basic example always i getting the same error in the log console Attribute 'uri' is&#010;not allowed to appear in element 'enrich'&#010;&gt; this is my code&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans""&#010;&gt; xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation="" http://www.springframework.org/schema/beans&#010;http://www.springframework.org/schema/beans/spring-beans.xsd http://camel.apache.org/schema/spring&#010;http://camel.apache.org/schema/spring/camel-spring.xsd""&gt;&#010;&gt; &lt;camelContext id=""_camelContext1"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;&gt; &lt;route id=""_route5""&gt;&#010;&gt; &lt;from id=""_from1"" uri=""file:work/cbr/input""/&gt;&#010;&gt; &lt;to id=""_to1"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route1""&gt;&#010;&gt; &lt;from id=""_from2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; &lt;to uri=""direct:result""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route2""&gt;&#010;&gt; &lt;from id=""_from3"" uri=""direct:resource""/&gt;&#010;&gt; &lt;process id=""reportProcess"" ref=""processDataProcessor""/&gt;&#010;&gt; &lt;to id=""_to4"" uri=""log:output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route3""&gt;&#010;&gt; &lt;from id=""_from4"" uri=""direct:result""/&gt;&#010;&gt; &lt;to id=""_to5"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to6"" uri=""file:work/cbr/output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; i have used CAMEL 2.18 and camel 2.15.&#010;&gt; with camel 2.18 this code is not working&#010;&gt; &lt;enrich strategyRef=""aggregationStrategy""&gt;&#010;&gt; &lt;constant&gt;direct:resource&lt;/constant&gt;&#010;&gt; &lt;/enrich&gt;&#010;&gt; the Jboss developer studio tell me that constant is not a nested element. and thorws&#010;and error in the xml.&#010;&gt; and if i use 2.18 with this code&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; it told me that the expression is a mandatory field. it shows a warning&#010;&gt; i tryied the same with the 2.15 but with the same results.&#010;&gt; Im using fuse server 6.3. im new with this so i appreciate any help.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
818,823,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11195) Enrich Element uri error,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066341.1493041243000.33124.1493044204308%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 14:30:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11195?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981231#comment-15981231&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11195:&#010;-------------------------------------&#010;&#010;Post a message to JBoss Fuse and they can help you there&#010;https://developers.redhat.com/products/fuse/help/&#010;&#010;I will reach out to the tooling guys so they can help you there&#010;&#010;&gt; Enrich Element uri error &#010;&gt; -------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11195&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11195&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.15.6, 2.18.3&#010;&gt;         Environment: Jboss develper studio 10.0.3&#010;&gt;            Reporter: Oscar Mauricio Cadena&#010;&gt;&#010;&gt; Hi Clauss. Please I need some help with the same topic.&#010;&gt; I have four days with this problem. I need to make a basic enrich example but when i&#010;run the basic example always i getting the same error in the log console Attribute 'uri' is&#010;not allowed to appear in element 'enrich'&#010;&gt; this is my code&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans""&#010;&gt; xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation="" http://www.springframework.org/schema/beans&#010;http://www.springframework.org/schema/beans/spring-beans.xsd http://camel.apache.org/schema/spring&#010;http://camel.apache.org/schema/spring/camel-spring.xsd""&gt;&#010;&gt; &lt;camelContext id=""_camelContext1"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;&gt; &lt;route id=""_route5""&gt;&#010;&gt; &lt;from id=""_from1"" uri=""file:work/cbr/input""/&gt;&#010;&gt; &lt;to id=""_to1"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route1""&gt;&#010;&gt; &lt;from id=""_from2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; &lt;to uri=""direct:result""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route2""&gt;&#010;&gt; &lt;from id=""_from3"" uri=""direct:resource""/&gt;&#010;&gt; &lt;process id=""reportProcess"" ref=""processDataProcessor""/&gt;&#010;&gt; &lt;to id=""_to4"" uri=""log:output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route3""&gt;&#010;&gt; &lt;from id=""_from4"" uri=""direct:result""/&gt;&#010;&gt; &lt;to id=""_to5"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to6"" uri=""file:work/cbr/output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; i have used CAMEL 2.18 and camel 2.15.&#010;&gt; with camel 2.18 this code is not working&#010;&gt; &lt;enrich strategyRef=""aggregationStrategy""&gt;&#010;&gt; &lt;constant&gt;direct:resource&lt;/constant&gt;&#010;&gt; &lt;/enrich&gt;&#010;&gt; the Jboss developer studio tell me that constant is not a nested element. and thorws&#010;and error in the xml.&#010;&gt; and if i use 2.18 with this code&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; it told me that the expression is a mandatory field. it shows a warning&#010;&gt; i tryied the same with the 2.15 but with the same results.&#010;&gt; Im using fuse server 6.3. im new with this so i appreciate any help.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
819,824,Oscar Mauricio Cadena (JIRA),  [jira] [Commented] (CAMEL-11195) Enrich Element uri error,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066341.1493041243000.33188.1493044564131%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 14:36:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11195?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981242#comment-15981242&#010;] &#010;&#010;Oscar Mauricio Cadena commented on CAMEL-11195:&#010;-----------------------------------------------&#010;&#010;Thanks claus. i have already wrote in it &#010;&#010;&gt; Enrich Element uri error &#010;&gt; -------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11195&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11195&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.15.6, 2.18.3&#010;&gt;         Environment: Jboss develper studio 10.0.3&#010;&gt;            Reporter: Oscar Mauricio Cadena&#010;&gt;&#010;&gt; Hi Clauss. Please I need some help with the same topic.&#010;&gt; I have four days with this problem. I need to make a basic enrich example but when i&#010;run the basic example always i getting the same error in the log console Attribute 'uri' is&#010;not allowed to appear in element 'enrich'&#010;&gt; this is my code&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans""&#010;&gt; xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation="" http://www.springframework.org/schema/beans&#010;http://www.springframework.org/schema/beans/spring-beans.xsd http://camel.apache.org/schema/spring&#010;http://camel.apache.org/schema/spring/camel-spring.xsd""&gt;&#010;&gt; &lt;camelContext id=""_camelContext1"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;&gt; &lt;route id=""_route5""&gt;&#010;&gt; &lt;from id=""_from1"" uri=""file:work/cbr/input""/&gt;&#010;&gt; &lt;to id=""_to1"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route1""&gt;&#010;&gt; &lt;from id=""_from2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; &lt;to uri=""direct:result""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route2""&gt;&#010;&gt; &lt;from id=""_from3"" uri=""direct:resource""/&gt;&#010;&gt; &lt;process id=""reportProcess"" ref=""processDataProcessor""/&gt;&#010;&gt; &lt;to id=""_to4"" uri=""log:output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route3""&gt;&#010;&gt; &lt;from id=""_from4"" uri=""direct:result""/&gt;&#010;&gt; &lt;to id=""_to5"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to6"" uri=""file:work/cbr/output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; i have used CAMEL 2.18 and camel 2.15.&#010;&gt; with camel 2.18 this code is not working&#010;&gt; &lt;enrich strategyRef=""aggregationStrategy""&gt;&#010;&gt; &lt;constant&gt;direct:resource&lt;/constant&gt;&#010;&gt; &lt;/enrich&gt;&#010;&gt; the Jboss developer studio tell me that constant is not a nested element. and thorws&#010;and error in the xml.&#010;&gt; and if i use 2.18 with this code&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; it told me that the expression is a mandatory field. it shows a warning&#010;&gt; i tryied the same with the 2.15 but with the same results.&#010;&gt; Im using fuse server 6.3. im new with this so i appreciate any help.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
820,825,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11195) Enrich Element uri error,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066341.1493041243000.33235.1493044744299%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 14:39:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11195?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981253#comment-15981253&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11195:&#010;-------------------------------------&#010;&#010;I cannot see your post there on the fuse forum&#010;https://developer.jboss.org/en/products/fuse&#010;&#010;&gt; Enrich Element uri error &#010;&gt; -------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11195&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11195&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.15.6, 2.18.3&#010;&gt;         Environment: Jboss develper studio 10.0.3&#010;&gt;            Reporter: Oscar Mauricio Cadena&#010;&gt;&#010;&gt; Hi Clauss. Please I need some help with the same topic.&#010;&gt; I have four days with this problem. I need to make a basic enrich example but when i&#010;run the basic example always i getting the same error in the log console Attribute 'uri' is&#010;not allowed to appear in element 'enrich'&#010;&gt; this is my code&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans""&#010;&gt; xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation="" http://www.springframework.org/schema/beans&#010;http://www.springframework.org/schema/beans/spring-beans.xsd http://camel.apache.org/schema/spring&#010;http://camel.apache.org/schema/spring/camel-spring.xsd""&gt;&#010;&gt; &lt;camelContext id=""_camelContext1"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;&gt; &lt;route id=""_route5""&gt;&#010;&gt; &lt;from id=""_from1"" uri=""file:work/cbr/input""/&gt;&#010;&gt; &lt;to id=""_to1"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route1""&gt;&#010;&gt; &lt;from id=""_from2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; &lt;to uri=""direct:result""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route2""&gt;&#010;&gt; &lt;from id=""_from3"" uri=""direct:resource""/&gt;&#010;&gt; &lt;process id=""reportProcess"" ref=""processDataProcessor""/&gt;&#010;&gt; &lt;to id=""_to4"" uri=""log:output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route3""&gt;&#010;&gt; &lt;from id=""_from4"" uri=""direct:result""/&gt;&#010;&gt; &lt;to id=""_to5"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to6"" uri=""file:work/cbr/output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; i have used CAMEL 2.18 and camel 2.15.&#010;&gt; with camel 2.18 this code is not working&#010;&gt; &lt;enrich strategyRef=""aggregationStrategy""&gt;&#010;&gt; &lt;constant&gt;direct:resource&lt;/constant&gt;&#010;&gt; &lt;/enrich&gt;&#010;&gt; the Jboss developer studio tell me that constant is not a nested element. and thorws&#010;and error in the xml.&#010;&gt; and if i use 2.18 with this code&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; it told me that the expression is a mandatory field. it shows a warning&#010;&gt; i tryied the same with the 2.15 but with the same results.&#010;&gt; Im using fuse server 6.3. im new with this so i appreciate any help.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
821,826,Oscar Mauricio Cadena (JIRA),  [jira] [Commented] (CAMEL-11195) Enrich Element uri error,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066341.1493041243000.33276.1493044984203%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 14:43:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11195?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981262#comment-15981262&#010;] &#010;&#010;Oscar Mauricio Cadena commented on CAMEL-11195:&#010;-----------------------------------------------&#010;&#010;https://developer.jboss.org/thread/274743&#010;&#010;&gt; Enrich Element uri error &#010;&gt; -------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11195&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11195&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.15.6, 2.18.3&#010;&gt;         Environment: Jboss develper studio 10.0.3&#010;&gt;            Reporter: Oscar Mauricio Cadena&#010;&gt;&#010;&gt; Hi Clauss. Please I need some help with the same topic.&#010;&gt; I have four days with this problem. I need to make a basic enrich example but when i&#010;run the basic example always i getting the same error in the log console Attribute 'uri' is&#010;not allowed to appear in element 'enrich'&#010;&gt; this is my code&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans""&#010;&gt; xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation="" http://www.springframework.org/schema/beans&#010;http://www.springframework.org/schema/beans/spring-beans.xsd http://camel.apache.org/schema/spring&#010;http://camel.apache.org/schema/spring/camel-spring.xsd""&gt;&#010;&gt; &lt;camelContext id=""_camelContext1"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;&gt; &lt;route id=""_route5""&gt;&#010;&gt; &lt;from id=""_from1"" uri=""file:work/cbr/input""/&gt;&#010;&gt; &lt;to id=""_to1"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route1""&gt;&#010;&gt; &lt;from id=""_from2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; &lt;to uri=""direct:result""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route2""&gt;&#010;&gt; &lt;from id=""_from3"" uri=""direct:resource""/&gt;&#010;&gt; &lt;process id=""reportProcess"" ref=""processDataProcessor""/&gt;&#010;&gt; &lt;to id=""_to4"" uri=""log:output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route3""&gt;&#010;&gt; &lt;from id=""_from4"" uri=""direct:result""/&gt;&#010;&gt; &lt;to id=""_to5"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to6"" uri=""file:work/cbr/output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; i have used CAMEL 2.18 and camel 2.15.&#010;&gt; with camel 2.18 this code is not working&#010;&gt; &lt;enrich strategyRef=""aggregationStrategy""&gt;&#010;&gt; &lt;constant&gt;direct:resource&lt;/constant&gt;&#010;&gt; &lt;/enrich&gt;&#010;&gt; the Jboss developer studio tell me that constant is not a nested element. and thorws&#010;and error in the xml.&#010;&gt; and if i use 2.18 with this code&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; it told me that the expression is a mandatory field. it shows a warning&#010;&gt; i tryied the same with the 2.15 but with the same results.&#010;&gt; Im using fuse server 6.3. im new with this so i appreciate any help.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
822,827,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11195) Enrich Element uri error,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066341.1493041243000.33320.1493045284201%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 14:48:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11195?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981274#comment-15981274&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11195:&#010;-------------------------------------&#010;&#010;Create a new post in this forum&#010;https://developer.jboss.org/en/products/fuse&#010;&#010;As that old post is not viewable. &#010;&#010;&gt; Enrich Element uri error &#010;&gt; -------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11195&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11195&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.15.6, 2.18.3&#010;&gt;         Environment: Jboss develper studio 10.0.3&#010;&gt;            Reporter: Oscar Mauricio Cadena&#010;&gt;&#010;&gt; Hi Clauss. Please I need some help with the same topic.&#010;&gt; I have four days with this problem. I need to make a basic enrich example but when i&#010;run the basic example always i getting the same error in the log console Attribute 'uri' is&#010;not allowed to appear in element 'enrich'&#010;&gt; this is my code&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans""&#010;&gt; xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation="" http://www.springframework.org/schema/beans&#010;http://www.springframework.org/schema/beans/spring-beans.xsd http://camel.apache.org/schema/spring&#010;http://camel.apache.org/schema/spring/camel-spring.xsd""&gt;&#010;&gt; &lt;camelContext id=""_camelContext1"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;&gt; &lt;route id=""_route5""&gt;&#010;&gt; &lt;from id=""_from1"" uri=""file:work/cbr/input""/&gt;&#010;&gt; &lt;to id=""_to1"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route1""&gt;&#010;&gt; &lt;from id=""_from2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; &lt;to uri=""direct:result""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route2""&gt;&#010;&gt; &lt;from id=""_from3"" uri=""direct:resource""/&gt;&#010;&gt; &lt;process id=""reportProcess"" ref=""processDataProcessor""/&gt;&#010;&gt; &lt;to id=""_to4"" uri=""log:output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route3""&gt;&#010;&gt; &lt;from id=""_from4"" uri=""direct:result""/&gt;&#010;&gt; &lt;to id=""_to5"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to6"" uri=""file:work/cbr/output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; i have used CAMEL 2.18 and camel 2.15.&#010;&gt; with camel 2.18 this code is not working&#010;&gt; &lt;enrich strategyRef=""aggregationStrategy""&gt;&#010;&gt; &lt;constant&gt;direct:resource&lt;/constant&gt;&#010;&gt; &lt;/enrich&gt;&#010;&gt; the Jboss developer studio tell me that constant is not a nested element. and thorws&#010;and error in the xml.&#010;&gt; and if i use 2.18 with this code&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; it told me that the expression is a mandatory field. it shows a warning&#010;&gt; i tryied the same with the 2.15 but with the same results.&#010;&gt; Im using fuse server 6.3. im new with this so i appreciate any help.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
823,828,Oscar Mauricio Cadena (JIRA),  [jira] [Commented] (CAMEL-11195) Enrich Element uri error,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066341.1493041243000.33370.1493045764149%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 14:56:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11195?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981292#comment-15981292&#010;] &#010;&#010;Oscar Mauricio Cadena commented on CAMEL-11195:&#010;-----------------------------------------------&#010;&#010;The moderator just has approved it please see again. Thanks.&#010;&#010;&gt; Enrich Element uri error &#010;&gt; -------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11195&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11195&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.15.6, 2.18.3&#010;&gt;         Environment: Jboss develper studio 10.0.3&#010;&gt;            Reporter: Oscar Mauricio Cadena&#010;&gt;&#010;&gt; Hi Clauss. Please I need some help with the same topic.&#010;&gt; I have four days with this problem. I need to make a basic enrich example but when i&#010;run the basic example always i getting the same error in the log console Attribute 'uri' is&#010;not allowed to appear in element 'enrich'&#010;&gt; this is my code&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans""&#010;&gt; xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation="" http://www.springframework.org/schema/beans&#010;http://www.springframework.org/schema/beans/spring-beans.xsd http://camel.apache.org/schema/spring&#010;http://camel.apache.org/schema/spring/camel-spring.xsd""&gt;&#010;&gt; &lt;camelContext id=""_camelContext1"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;&gt; &lt;route id=""_route5""&gt;&#010;&gt; &lt;from id=""_from1"" uri=""file:work/cbr/input""/&gt;&#010;&gt; &lt;to id=""_to1"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route1""&gt;&#010;&gt; &lt;from id=""_from2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; &lt;to uri=""direct:result""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route2""&gt;&#010;&gt; &lt;from id=""_from3"" uri=""direct:resource""/&gt;&#010;&gt; &lt;process id=""reportProcess"" ref=""processDataProcessor""/&gt;&#010;&gt; &lt;to id=""_to4"" uri=""log:output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route3""&gt;&#010;&gt; &lt;from id=""_from4"" uri=""direct:result""/&gt;&#010;&gt; &lt;to id=""_to5"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to6"" uri=""file:work/cbr/output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; i have used CAMEL 2.18 and camel 2.15.&#010;&gt; with camel 2.18 this code is not working&#010;&gt; &lt;enrich strategyRef=""aggregationStrategy""&gt;&#010;&gt; &lt;constant&gt;direct:resource&lt;/constant&gt;&#010;&gt; &lt;/enrich&gt;&#010;&gt; the Jboss developer studio tell me that constant is not a nested element. and thorws&#010;and error in the xml.&#010;&gt; and if i use 2.18 with this code&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; it told me that the expression is a mandatory field. it shows a warning&#010;&gt; i tryied the same with the 2.15 but with the same results.&#010;&gt; Im using fuse server 6.3. im new with this so i appreciate any help.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
824,829,,[jira] [Created] (CAMEL-11196) Camel connectors - Allow to configure in one place and let it figure out component vs endpoint level,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066341.1493041243000.33370.1493045764149%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 14:56:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11195?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981292#comment-15981292&#010;] &#010;&#010;Oscar Mauricio Cadena commented on CAMEL-11195:&#010;-----------------------------------------------&#010;&#010;The moderator just has approved it please see again. Thanks.&#010;&#010;&gt; Enrich Element uri error &#010;&gt; -------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11195&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11195&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.15.6, 2.18.3&#010;&gt;         Environment: Jboss develper studio 10.0.3&#010;&gt;            Reporter: Oscar Mauricio Cadena&#010;&gt;&#010;&gt; Hi Clauss. Please I need some help with the same topic.&#010;&gt; I have four days with this problem. I need to make a basic enrich example but when i&#010;run the basic example always i getting the same error in the log console Attribute 'uri' is&#010;not allowed to appear in element 'enrich'&#010;&gt; this is my code&#010;&gt; &lt;beans xmlns=""http://www.springframework.org/schema/beans""&#010;&gt; xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation="" http://www.springframework.org/schema/beans&#010;http://www.springframework.org/schema/beans/spring-beans.xsd http://camel.apache.org/schema/spring&#010;http://camel.apache.org/schema/spring/camel-spring.xsd""&gt;&#010;&gt; &lt;camelContext id=""_camelContext1"" xmlns=""http://camel.apache.org/schema/spring""&gt;&#010;&gt; &lt;route id=""_route5""&gt;&#010;&gt; &lt;from id=""_from1"" uri=""file:work/cbr/input""/&gt;&#010;&gt; &lt;to id=""_to1"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route1""&gt;&#010;&gt; &lt;from id=""_from2"" uri=""direct:Process""/&gt;&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; &lt;to uri=""direct:result""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route2""&gt;&#010;&gt; &lt;from id=""_from3"" uri=""direct:resource""/&gt;&#010;&gt; &lt;process id=""reportProcess"" ref=""processDataProcessor""/&gt;&#010;&gt; &lt;to id=""_to4"" uri=""log:output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;route id=""_route3""&gt;&#010;&gt; &lt;from id=""_from4"" uri=""direct:result""/&gt;&#010;&gt; &lt;to id=""_to5"" uri=""log:output""/&gt;&#010;&gt; &lt;to id=""_to6"" uri=""file:work/cbr/output""/&gt;&#010;&gt; &lt;/route&gt;&#010;&gt; &lt;/camelContext&gt;&#010;&gt; &lt;/beans&gt;&#010;&gt; i have used CAMEL 2.18 and camel 2.15.&#010;&gt; with camel 2.18 this code is not working&#010;&gt; &lt;enrich strategyRef=""aggregationStrategy""&gt;&#010;&gt; &lt;constant&gt;direct:resource&lt;/constant&gt;&#010;&gt; &lt;/enrich&gt;&#010;&gt; the Jboss developer studio tell me that constant is not a nested element. and thorws&#010;and error in the xml.&#010;&gt; and if i use 2.18 with this code&#010;&gt; &lt;enrich uri=""direct:resource"" strategyRef=""aggregationStrategy""/&gt;&#010;&gt; it told me that the expression is a mandatory field. it shows a warning&#010;&gt; i tryied the same with the 2.15 but with the same results.&#010;&gt; Im using fuse server 6.3. im new with this so i appreciate any help.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
825,830,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11196) Camel connectors - Allow to configure in one place and let it figure out component vs endpoint level,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066357.1493043777000.33084.1493043784114%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 14:23:04 GMT","Claus Ibsen created CAMEL-11196:&#010;-----------------------------------&#010;&#010;             Summary: Camel connectors - Allow to configure in one place and let it figure&#010;out component vs endpoint level&#010;                 Key: CAMEL-11196&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11196&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-connector&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.20.0&#010;&#010;&#010;A Camel connector can be configured on two levels&#010;&#010;- component&#010;- endpoint&#010;&#010;Just like a regular Camel component.&#010;&#010;But we should allow users to configure a connector in one place, and not worry about if its&#010;component or endpoint level. And then let camel-connector when it prepares the connector figure&#010;out all of this for you.&#010;&#010;This may require supporting loading configuration from external resource files such as .properties&#010;files etc. Or something else. But from end users we can make this easier.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
826,831,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11196) Camel connectors - Allow to configure in one place and let it figure out component vs endpoint level,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066357.1493043777000.33095.1493043904197%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 14:25:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11196?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15981223#comment-15981223&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11196:&#010;-------------------------------------&#010;&#010;We should also make it easy to reuse an existing connector and have separate configuration,&#010;eg so the same user can use a twitter-connector and then configure it for user A and user&#010;B in the same application without configuration clashes.&#010;&#010;Today the component level would reuse the same component / configuration. So we may want to&#010;find a way to clone a component or whatever we can think of. A little bit of problem is the&#010;generated spring boot auto configuration which is hard-coded to one prefix.&#010;&#010;&gt; Camel connectors - Allow to configure in one place and let it figure out component vs&#010;endpoint level&#010;&gt; ----------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11196&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11196&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-connector&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; A Camel connector can be configured on two levels&#010;&gt; - component&#010;&gt; - endpoint&#010;&gt; Just like a regular Camel component.&#010;&gt; But we should allow users to configure a connector in one place, and not worry about&#010;if its component or endpoint level. And then let camel-connector when it prepares the connector&#010;figure out all of this for you.&#010;&gt; This may require supporting loading configuration from external resource files such as&#010;.properties files etc. Or something else. But from end users we can make this easier.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
827,832,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11196) Camel connectors - Allow to configure in one place and let it figure out component vs endpoint level,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066357.1493043777000.33096.1493043964070%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 14:26:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11196?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11196:&#010;--------------------------------&#010;    Issue Type: New Feature  (was: Improvement)&#010;&#010;&gt; Camel connectors - Allow to configure in one place and let it figure out component vs&#010;endpoint level&#010;&gt; ----------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11196&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11196&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-connector&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; A Camel connector can be configured on two levels&#010;&gt; - component&#010;&gt; - endpoint&#010;&gt; Just like a regular Camel component.&#010;&gt; But we should allow users to configure a connector in one place, and not worry about&#010;if its component or endpoint level. And then let camel-connector when it prepares the connector&#010;figure out all of this for you.&#010;&gt; This may require supporting loading configuration from external resource files such as&#010;.properties files etc. Or something else. But from end users we can make this easier.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
828,833,,[jira] [Created] (CAMEL-11197) camel-jpa consumer fails to poll after database connection is lost,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066357.1493043777000.33096.1493043964070%40Atlassian.JIRA%3E,issues,"Mon, 24 Apr 2017 14:26:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11196?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11196:&#010;--------------------------------&#010;    Issue Type: New Feature  (was: Improvement)&#010;&#010;&gt; Camel connectors - Allow to configure in one place and let it figure out component vs&#010;endpoint level&#010;&gt; ----------------------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11196&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11196&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-connector&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; A Camel connector can be configured on two levels&#010;&gt; - component&#010;&gt; - endpoint&#010;&gt; Just like a regular Camel component.&#010;&gt; But we should allow users to configure a connector in one place, and not worry about&#010;if its component or endpoint level. And then let camel-connector when it prepares the connector&#010;figure out all of this for you.&#010;&gt; This may require supporting loading configuration from external resource files such as&#010;.properties files etc. Or something else. But from end users we can make this easier.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
829,834,James Thomas (JIRA),  [jira] [Created] (CAMEL-11197) camel-jpa consumer fails to poll after database connection is lost,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066658.1493120720000.43529.1493120764046%40Atlassian.JIRA%3E,issues,"Tue, 25 Apr 2017 11:46:04 GMT","James Thomas created CAMEL-11197:&#010;------------------------------------&#010;&#010;             Summary: camel-jpa consumer fails to poll after database connection is lost&#010;                 Key: CAMEL-11197&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11197&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-jpa&#010;    Affects Versions: 2.17.1&#010;         Environment: Hibernate JPA with Tomcat Connection Pool data source&#010;            Reporter: James Thomas&#010;&#010;&#010;Under a Hibernate JPA implementation with a Tomcat Connection pool set to test connections&#010;""on borrow"", the camel-jpa consumer would poll normally until the underlying database connection&#010;was lost and then continue to report a PersistenceException at each poll.&#010;&#010;The entityManager instance in camel-jpa needs to be closed and rebuilt in order to force a&#010;new connection to be obtained from the connection pool.&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
830,835,James Thomas (JIRA),  [jira] [Commented] (CAMEL-11197) camel-jpa consumer fails to poll after database connection is lost,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066658.1493120720000.43530.1493120764056%40Atlassian.JIRA%3E,issues,"Tue, 25 Apr 2017 11:46:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11197?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15982747#comment-15982747&#010;] &#010;&#010;James Thomas commented on CAMEL-11197:&#010;--------------------------------------&#010;&#010;Patch available:  https://github.com/apache/camel/pull/1658&#010;&#010;&gt; camel-jpa consumer fails to poll after database connection is lost&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11197&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11197&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-jpa&#010;&gt;    Affects Versions: 2.17.1&#010;&gt;         Environment: Hibernate JPA with Tomcat Connection Pool data source&#010;&gt;            Reporter: James Thomas&#010;&gt;&#010;&gt; Under a Hibernate JPA implementation with a Tomcat Connection pool set to test connections&#010;""on borrow"", the camel-jpa consumer would poll normally until the underlying database connection&#010;was lost and then continue to report a PersistenceException at each poll.&#010;&gt; The entityManager instance in camel-jpa needs to be closed and rebuilt in order to force&#010;a new connection to be obtained from the connection pool.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
831,836,James Thomas (JIRA),  [jira] [Commented] (CAMEL-11197) camel-jpa consumer fails to poll after database connection is lost,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066658.1493120720000.43561.1493121244127%40Atlassian.JIRA%3E,issues,"Tue, 25 Apr 2017 11:54:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11197?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15982754#comment-15982754&#010;] &#010;&#010;James Thomas commented on CAMEL-11197:&#010;--------------------------------------&#010;&#010;Discussion and stack trace at http://camel.465427.n5.nabble.com/camel-jpa-and-PersistenceException-tp5795205.html&#010;&#010;&gt; camel-jpa consumer fails to poll after database connection is lost&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11197&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11197&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-jpa&#010;&gt;    Affects Versions: 2.17.1&#010;&gt;         Environment: Hibernate JPA with Tomcat Connection Pool data source&#010;&gt;            Reporter: James Thomas&#010;&gt;&#010;&gt; Under a Hibernate JPA implementation with a Tomcat Connection pool set to test connections&#010;""on borrow"", the camel-jpa consumer would poll normally until the underlying database connection&#010;was lost and then continue to report a PersistenceException at each poll.&#010;&gt; The entityManager instance in camel-jpa needs to be closed and rebuilt in order to force&#010;a new connection to be obtained from the connection pool.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
832,837,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11197) camel-jpa consumer fails to poll after database connection is lost,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066658.1493120720000.57504.1493226364215%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 17:06:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11197?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11197:&#010;--------------------------------&#010;    Fix Version/s: 2.19.1&#010;                   2.20.0&#010;                   2.18.4&#010;&#010;&gt; camel-jpa consumer fails to poll after database connection is lost&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11197&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11197&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-jpa&#010;&gt;    Affects Versions: 2.17.1&#010;&gt;         Environment: Hibernate JPA with Tomcat Connection Pool data source&#010;&gt;            Reporter: James Thomas&#010;&gt;             Fix For: 2.18.4, 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; Under a Hibernate JPA implementation with a Tomcat Connection pool set to test connections&#010;""on borrow"", the camel-jpa consumer would poll normally until the underlying database connection&#010;was lost and then continue to report a PersistenceException at each poll.&#010;&gt; The entityManager instance in camel-jpa needs to be closed and rebuilt in order to force&#010;a new connection to be obtained from the connection pool.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
833,838,Claus Ibsen (JIRA),  [jira] [Assigned] (CAMEL-11197) camel-jpa consumer fails to poll after database connection is lost,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066658.1493120720000.57556.1493226604273%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 17:10:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11197?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen reassigned CAMEL-11197:&#010;-----------------------------------&#010;&#010;    Assignee: Claus Ibsen&#010;&#010;&gt; camel-jpa consumer fails to poll after database connection is lost&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11197&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11197&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-jpa&#010;&gt;    Affects Versions: 2.17.1&#010;&gt;         Environment: Hibernate JPA with Tomcat Connection Pool data source&#010;&gt;            Reporter: James Thomas&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.18.4, 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; Under a Hibernate JPA implementation with a Tomcat Connection pool set to test connections&#010;""on borrow"", the camel-jpa consumer would poll normally until the underlying database connection&#010;was lost and then continue to report a PersistenceException at each poll.&#010;&gt; The entityManager instance in camel-jpa needs to be closed and rebuilt in order to force&#010;a new connection to be obtained from the connection pool.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
834,839,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11197) camel-jpa consumer fails to poll after database connection is lost,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066658.1493120720000.57554.1493226604256%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 17:10:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11197?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15985158#comment-15985158&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11197:&#010;-------------------------------------&#010;&#010;Need to merge to 2.19.x branch after the release&#010;&#010;&gt; camel-jpa consumer fails to poll after database connection is lost&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11197&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11197&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-jpa&#010;&gt;    Affects Versions: 2.17.1&#010;&gt;         Environment: Hibernate JPA with Tomcat Connection Pool data source&#010;&gt;            Reporter: James Thomas&#010;&gt;             Fix For: 2.18.4, 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; Under a Hibernate JPA implementation with a Tomcat Connection pool set to test connections&#010;""on borrow"", the camel-jpa consumer would poll normally until the underlying database connection&#010;was lost and then continue to report a PersistenceException at each poll.&#010;&gt; The entityManager instance in camel-jpa needs to be closed and rebuilt in order to force&#010;a new connection to be obtained from the connection pool.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
835,840,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11197) camel-jpa consumer fails to poll after database connection is lost,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066658.1493120720000.57653.1493226845489%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 17:14:05 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11197?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15985174#comment-15985174&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11197:&#010;-------------------------------------&#010;&#010;Thanks for the PR&#010;&#010;&gt; camel-jpa consumer fails to poll after database connection is lost&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11197&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11197&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-jpa&#010;&gt;    Affects Versions: 2.17.1&#010;&gt;         Environment: Hibernate JPA with Tomcat Connection Pool data source&#010;&gt;            Reporter: James Thomas&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; Under a Hibernate JPA implementation with a Tomcat Connection pool set to test connections&#010;""on borrow"", the camel-jpa consumer would poll normally until the underlying database connection&#010;was lost and then continue to report a PersistenceException at each poll.&#010;&gt; The entityManager instance in camel-jpa needs to be closed and rebuilt in order to force&#010;a new connection to be obtained from the connection pool.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
836,841,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11197) camel-jpa consumer fails to poll after database connection is lost,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066658.1493120720000.57651.1493226845474%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 17:14:05 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11197?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11197:&#010;--------------------------------&#010;    Fix Version/s: 2.17.7&#010;&#010;&gt; camel-jpa consumer fails to poll after database connection is lost&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11197&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11197&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-jpa&#010;&gt;    Affects Versions: 2.17.1&#010;&gt;         Environment: Hibernate JPA with Tomcat Connection Pool data source&#010;&gt;            Reporter: James Thomas&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; Under a Hibernate JPA implementation with a Tomcat Connection pool set to test connections&#010;""on borrow"", the camel-jpa consumer would poll normally until the underlying database connection&#010;was lost and then continue to report a PersistenceException at each poll.&#010;&gt; The entityManager instance in camel-jpa needs to be closed and rebuilt in order to force&#010;a new connection to be obtained from the connection pool.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
837,842,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11197) camel-jpa consumer fails to poll after database connection is lost,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066658.1493120720000.58117.1493229664129%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 18:01:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11197?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15985271#comment-15985271&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11197:&#010;----------------------------------------&#010;&#010;Github user jamesET closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1658&#010;&#010;&#010;&gt; camel-jpa consumer fails to poll after database connection is lost&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11197&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11197&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-jpa&#010;&gt;    Affects Versions: 2.17.1&#010;&gt;         Environment: Hibernate JPA with Tomcat Connection Pool data source&#010;&gt;            Reporter: James Thomas&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; Under a Hibernate JPA implementation with a Tomcat Connection pool set to test connections&#010;""on borrow"", the camel-jpa consumer would poll normally until the underlying database connection&#010;was lost and then continue to report a PersistenceException at each poll.&#010;&gt; The entityManager instance in camel-jpa needs to be closed and rebuilt in order to force&#010;a new connection to be obtained from the connection pool.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
838,843,,[jira] [Created] (CAMEL-11198) OpenTracing trace context should cope with Hystrix using separate thread,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066658.1493120720000.58117.1493229664129%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 18:01:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11197?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15985271#comment-15985271&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11197:&#010;----------------------------------------&#010;&#010;Github user jamesET closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1658&#010;&#010;&#010;&gt; camel-jpa consumer fails to poll after database connection is lost&#010;&gt; ------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11197&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11197&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-jpa&#010;&gt;    Affects Versions: 2.17.1&#010;&gt;         Environment: Hibernate JPA with Tomcat Connection Pool data source&#010;&gt;            Reporter: James Thomas&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; Under a Hibernate JPA implementation with a Tomcat Connection pool set to test connections&#010;""on borrow"", the camel-jpa consumer would poll normally until the underlying database connection&#010;was lost and then continue to report a PersistenceException at each poll.&#010;&gt; The entityManager instance in camel-jpa needs to be closed and rebuilt in order to force&#010;a new connection to be obtained from the connection pool.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
839,844,Gary Brown (JIRA),  [jira] [Created] (CAMEL-11198) OpenTracing trace context should cope with Hystrix using separate thread,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066713.1493131853000.44796.1493131864186%40Atlassian.JIRA%3E,issues,"Tue, 25 Apr 2017 14:51:04 GMT","Gary Brown created CAMEL-11198:&#010;----------------------------------&#010;&#010;             Summary: OpenTracing trace context should cope with Hystrix using separate thread&#010;                 Key: CAMEL-11198&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11198&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-hystrix&#010;    Affects Versions: 2.19.0&#010;            Reporter: Gary Brown&#010;&#010;&#010;When using OpenTracing with Hystrix, the default Hystrix configuration uses a separate thread&#010;for the outbound request.&#010;&#010;Currently the trace context from the route is not carried across to this new thread, causing&#010;the outbound request to be recorded in a separate trace instance.&#010;&#010;Need to ensure that the trace context is carried to the new thread/exchange.&#010;&#010;As a workaround, the Hystrix configuration property {{executionIsolationStrategy}} should&#010;be set to ""SEMAPHORE"".&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
840,845,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11198) OpenTracing trace context should cope with Hystrix using separate thread,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066713.1493131853000.57416.1493225944183%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 16:59:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11198?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15985135#comment-15985135&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11198:&#010;----------------------------------------&#010;&#010;GitHub user objectiser opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1662&#010;&#010;    CAMEL-11198 Fix issue with propagating the trace context when using h…&#010;&#010;    …ystrix&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/objectiser/camel CAMEL-11198&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1662.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1662&#010;    &#010;----&#010;commit 667c38992dad2475866bfdd9d492f4df382c5a9e&#010;Author: Gary Brown &lt;gary@brownuk.com&gt;&#010;Date:   2017-04-26T16:37:52Z&#010;&#010;    CAMEL-11198 Fix issue with propagating the trace context when using hystrix&#010;&#010;----&#010;&#010;&#010;&gt; OpenTracing trace context should cope with Hystrix using separate thread&#010;&gt; ------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11198&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11198&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-hystrix&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Gary Brown&#010;&gt;&#010;&gt; When using OpenTracing with Hystrix, the default Hystrix configuration uses a separate&#010;thread for the outbound request.&#010;&gt; Currently the trace context from the route is not carried across to this new thread,&#010;causing the outbound request to be recorded in a separate trace instance.&#010;&gt; Need to ensure that the trace context is carried to the new thread/exchange.&#010;&gt; As a workaround, the Hystrix configuration property {{executionIsolationStrategy}} should&#010;be set to ""SEMAPHORE"".&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
841,846,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11198) OpenTracing trace context should cope with Hystrix using separate thread,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066713.1493131853000.57459.1493226184058%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 17:03:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11198?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15985146#comment-15985146&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11198:&#010;----------------------------------------&#010;&#010;Github user asfgit closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1662&#010;&#010;&#010;&gt; OpenTracing trace context should cope with Hystrix using separate thread&#010;&gt; ------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11198&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11198&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-hystrix&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Gary Brown&#010;&gt;&#010;&gt; When using OpenTracing with Hystrix, the default Hystrix configuration uses a separate&#010;thread for the outbound request.&#010;&gt; Currently the trace context from the route is not carried across to this new thread,&#010;causing the outbound request to be recorded in a separate trace instance.&#010;&gt; Need to ensure that the trace context is carried to the new thread/exchange.&#010;&gt; As a workaround, the Hystrix configuration property {{executionIsolationStrategy}} should&#010;be set to ""SEMAPHORE"".&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
842,847,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11198) OpenTracing trace context should cope with Hystrix using separate thread,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066713.1493131853000.57472.1493226244452%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 17:04:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11198?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15985149#comment-15985149&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11198:&#010;-------------------------------------&#010;&#010;Fixed on master, need to merge to 2.19.x branch after the release&#010;&#010;&gt; OpenTracing trace context should cope with Hystrix using separate thread&#010;&gt; ------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11198&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11198&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-hystrix&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Gary Brown&#010;&gt;             Fix For: 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; When using OpenTracing with Hystrix, the default Hystrix configuration uses a separate&#010;thread for the outbound request.&#010;&gt; Currently the trace context from the route is not carried across to this new thread,&#010;causing the outbound request to be recorded in a separate trace instance.&#010;&gt; Need to ensure that the trace context is carried to the new thread/exchange.&#010;&gt; As a workaround, the Hystrix configuration property {{executionIsolationStrategy}} should&#010;be set to ""SEMAPHORE"".&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
843,848,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11198) OpenTracing trace context should cope with Hystrix using separate thread,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066713.1493131853000.57463.1493226244381%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 17:04:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11198?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11198:&#010;--------------------------------&#010;    Fix Version/s: 2.19.1&#010;                   2.20.0&#010;&#010;&gt; OpenTracing trace context should cope with Hystrix using separate thread&#010;&gt; ------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11198&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11198&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-hystrix&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Gary Brown&#010;&gt;             Fix For: 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; When using OpenTracing with Hystrix, the default Hystrix configuration uses a separate&#010;thread for the outbound request.&#010;&gt; Currently the trace context from the route is not carried across to this new thread,&#010;causing the outbound request to be recorded in a separate trace instance.&#010;&gt; Need to ensure that the trace context is carried to the new thread/exchange.&#010;&gt; As a workaround, the Hystrix configuration property {{executionIsolationStrategy}} should&#010;be set to ""SEMAPHORE"".&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
844,849,,[jira] [Created] (CAMEL-11199) Service Call : provides an ServiceHealthFilter that leverages PingChek API,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066713.1493131853000.57463.1493226244381%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 17:04:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11198?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11198:&#010;--------------------------------&#010;    Fix Version/s: 2.19.1&#010;                   2.20.0&#010;&#010;&gt; OpenTracing trace context should cope with Hystrix using separate thread&#010;&gt; ------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11198&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11198&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-hystrix&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Gary Brown&#010;&gt;             Fix For: 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; When using OpenTracing with Hystrix, the default Hystrix configuration uses a separate&#010;thread for the outbound request.&#010;&gt; Currently the trace context from the route is not carried across to this new thread,&#010;causing the outbound request to be recorded in a separate trace instance.&#010;&gt; Need to ensure that the trace context is carried to the new thread/exchange.&#010;&gt; As a workaround, the Hystrix configuration property {{executionIsolationStrategy}} should&#010;be set to ""SEMAPHORE"".&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
845,850,Luca Burgazzoli (JIRA),  [jira] [Created] (CAMEL-11199) Service Call : provides an ServiceHealthFilter that leverages PingChek API,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066945.1493186812000.52193.1493186824375%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 06:07:04 GMT","Luca Burgazzoli created CAMEL-11199:&#010;---------------------------------------&#010;&#010;             Summary: Service Call : provides an ServiceHealthFilter that leverages PingChek&#010;API&#010;                 Key: CAMEL-11199&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11199&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-core&#010;            Reporter: Luca Burgazzoli&#010;            Assignee: Luca Burgazzoli&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;If the service definition provides an health endpoint and no information about the health,&#010;we should thinking about leverages ping check api to filter out unhealthy services.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
846,851,,[jira] [Created] (CAMEL-11200) reactive-streams : create a vertex based implementation of ReactorStreamsService,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066945.1493186812000.52193.1493186824375%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 06:07:04 GMT","Luca Burgazzoli created CAMEL-11199:&#010;---------------------------------------&#010;&#010;             Summary: Service Call : provides an ServiceHealthFilter that leverages PingChek&#010;API&#010;                 Key: CAMEL-11199&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11199&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;          Components: camel-core&#010;            Reporter: Luca Burgazzoli&#010;            Assignee: Luca Burgazzoli&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;If the service definition provides an health endpoint and no information about the health,&#010;we should thinking about leverages ping check api to filter out unhealthy services.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
847,852,Luca Burgazzoli (JIRA),  [jira] [Created] (CAMEL-11200) reactive-streams : create a vertex based implementation of ReactorStreamsService,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066947.1493186961000.52198.1493187004341%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 06:10:04 GMT",Luca Burgazzoli created CAMEL-11200:&#010;---------------------------------------&#010;&#010;             Summary: reactive-streams : create a vertex based implementation of ReactorStreamsService&#010;                 Key: CAMEL-11200&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11200&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;            Reporter: Luca Burgazzoli&#010;             Fix For: 2.20.0&#010;&#010;&#010;http://vertx.io/docs/vertx-reactive-streams/java/&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
848,853,,[jira] [Created] (CAMEL-11201) camel-reactive-streams - Cannot create service in spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13066947.1493186961000.52198.1493187004341%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 06:10:04 GMT",Luca Burgazzoli created CAMEL-11200:&#010;---------------------------------------&#010;&#010;             Summary: reactive-streams : create a vertex based implementation of ReactorStreamsService&#010;                 Key: CAMEL-11200&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11200&#010;             Project: Camel&#010;          Issue Type: New Feature&#010;            Reporter: Luca Burgazzoli&#010;             Fix For: 2.20.0&#010;&#010;&#010;http://vertx.io/docs/vertx-reactive-streams/java/&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
849,854,Nicola Ferraro (JIRA),  [jira] [Created] (CAMEL-11201) camel-reactive-streams - Cannot create service in spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067013.1493202872000.54233.1493202904143%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 10:35:04 GMT","Nicola Ferraro created CAMEL-11201:&#010;--------------------------------------&#010;&#010;             Summary: camel-reactive-streams - Cannot create service in spring-boot&#010;                 Key: CAMEL-11201&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11201&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-reactive-streams&#010;    Affects Versions: 2.19.0&#010;            Reporter: Nicola Ferraro&#010;            Assignee: Nicola Ferraro&#010;&#010;&#010;I've tried to run a reactive streams application on the preview of v. 2.19.0 and found a deadlock&#010;while instantiating the reactive-streams service (the starter code and the CamelReactiveStreams&#010;class wait one for the other).&#010;&#010;It's strange, since the reactive streams examples are based on spring-boot. I'm investigating.&#010;This may require a new release of camel 2.19.0.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
850,855,Nicola Ferraro (JIRA),  [jira] [Commented] (CAMEL-11201) camel-reactive-streams - Cannot create service in spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067013.1493202872000.55369.1493211904085%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 13:05:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11201?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15984753#comment-15984753&#010;] &#010;&#010;Nicola Ferraro commented on CAMEL-11201:&#010;----------------------------------------&#010;&#010;The problem happens whenever the user decide not to use the CamelReactiveStreamService, i.e.&#010;not injecting it in any managed bean. The examples worked because it was Autowired somewhere&#010;in the code. Even if it's injected in the code, sometimes (depending on the creation order&#010;of beans in the registry) it is not created in the expected order and prevents the application&#010;startup.  &#010;&#010;This has been fixed in the master branch, but I think it's important to have it in 2.19.0.&#010;&#010;&gt; camel-reactive-streams - Cannot create service in spring-boot&#010;&gt; -------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11201&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11201&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-reactive-streams&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;&#010;&gt; I've tried to run a reactive streams application on the preview of v. 2.19.0 and found&#010;a deadlock while instantiating the reactive-streams service (the starter code and the CamelReactiveStreams&#010;class wait one for the other).&#010;&gt; It's strange, since the reactive streams examples are based on spring-boot. I'm investigating.&#010;This may require a new release of camel 2.19.0.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
851,856,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11201) camel-reactive-streams - Cannot create service in spring-boot,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067013.1493202872000.57499.1493226304163%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 17:05:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11201?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11201:&#010;--------------------------------&#010;    Fix Version/s: 2.19.1&#010;                   2.20.0&#010;&#010;&gt; camel-reactive-streams - Cannot create service in spring-boot&#010;&gt; -------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11201&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11201&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-reactive-streams&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; I've tried to run a reactive streams application on the preview of v. 2.19.0 and found&#010;a deadlock while instantiating the reactive-streams service (the starter code and the CamelReactiveStreams&#010;class wait one for the other).&#010;&gt; It's strange, since the reactive streams examples are based on spring-boot. I'm investigating.&#010;This may require a new release of camel 2.19.0.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
852,857,,[jira] [Created] (CAMEL-11202) Salesforce verifier should not throw exceptions,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067013.1493202872000.57499.1493226304163%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 17:05:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11201?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11201:&#010;--------------------------------&#010;    Fix Version/s: 2.19.1&#010;                   2.20.0&#010;&#010;&gt; camel-reactive-streams - Cannot create service in spring-boot&#010;&gt; -------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11201&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11201&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-reactive-streams&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Nicola Ferraro&#010;&gt;            Assignee: Nicola Ferraro&#010;&gt;             Fix For: 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; I've tried to run a reactive streams application on the preview of v. 2.19.0 and found&#010;a deadlock while instantiating the reactive-streams service (the starter code and the CamelReactiveStreams&#010;class wait one for the other).&#010;&gt; It's strange, since the reactive streams examples are based on spring-boot. I'm investigating.&#010;This may require a new release of camel 2.19.0.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
853,858,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11202) Salesforce verifier should not throw exceptions,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067014.1493202932000.54247.1493202964504%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 10:36:04 GMT",Zoran Regvart created CAMEL-11202:&#010;-------------------------------------&#010;&#010;             Summary: Salesforce verifier should not throw exceptions&#010;                 Key: CAMEL-11202&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11202&#010;             Project: Camel&#010;          Issue Type: Bug&#010;    Affects Versions: 2.19.0&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;            Priority: Minor&#010;&#010;&#010;`SalesforceComponentVerifier::verifyConnectivity` throws `RuntimeException` on `Exception`s&#010;caught. This makes for a bad contract.&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
854,859,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11202) Salesforce verifier should not throw exceptions,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067014.1493202932000.54310.1493203564086%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 10:46:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11202?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11202.&#010;-----------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s: 2.20.0&#010;&#010;Throwing of the exception is simply removed.&#010;&#010;&gt; Salesforce verifier should not throw exceptions&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11202&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11202&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; `SalesforceComponentVerifier::verifyConnectivity` throws `RuntimeException` on `Exception`s&#010;caught. This makes for a bad contract.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
855,860,Zoran Regvart (JIRA),  [jira] [Updated] (CAMEL-11202) Salesforce verifier should not throw exceptions,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067014.1493202932000.65557.1493296144509%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 12:29:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11202?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart updated CAMEL-11202:&#010;----------------------------------&#010;    Component/s: camel-salesforce&#010;&#010;&gt; Salesforce verifier should not throw exceptions&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11202&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11202&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-salesforce&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; `SalesforceComponentVerifier::verifyConnectivity` throws `RuntimeException` on `Exception`s&#010;caught. This makes for a bad contract.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
856,861,,[jira] [Created] (CAMEL-11203) Verifier should support exclusion of properties in option groups,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067014.1493202932000.65557.1493296144509%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 12:29:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11202?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart updated CAMEL-11202:&#010;----------------------------------&#010;    Component/s: camel-salesforce&#010;&#010;&gt; Salesforce verifier should not throw exceptions&#010;&gt; -----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11202&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11202&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-salesforce&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; `SalesforceComponentVerifier::verifyConnectivity` throws `RuntimeException` on `Exception`s&#010;caught. This makes for a bad contract.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
857,862,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11203) Verifier should support exclusion of properties in option groups,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067034.1493206605000.54672.1493206624402%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 11:37:04 GMT",Zoran Regvart created CAMEL-11203:&#010;-------------------------------------&#010;&#010;             Summary: Verifier should support exclusion of properties in option groups&#010;                 Key: CAMEL-11203&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11203&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;    Affects Versions: 2.19.0&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;            Priority: Minor&#010;&#010;&#010;When validation of Salesforce component properties is done there are three option groups that&#010;can be used to specify the way the component authenticates against Salesforce.&#010;The user needs to provide options that satisfy only one of the combination of properties in&#010;order for the component to auto determine the authentication method it needs to perform.&#010;So specifying username/password along with refresh token is invalid as this implies both username/password&#010;authentication flow and refresh token authentication flow.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
858,863,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11203) Verifier should support exclusion of properties in option groups,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067034.1493206605000.54694.1493206804323%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 11:40:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11203?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15984628#comment-15984628&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11203:&#010;----------------------------------------&#010;&#010;GitHub user zregvart opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1661&#010;&#010;    CAMEL-11203 Verifier should support exclusion of properties in option groups&#010;&#010;    This adds an exclusion modifier to the parameter given in an option&#010;    group. If the parameter name is preceded with `!` then it should not be&#010;    present when evaluating if the group is valid.&#010;    &#010;    @lburgazzoli @rhuss would you mind taking a look?&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/zregvart/camel CAMEL-11203&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1661.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1661&#010;    &#010;----&#010;commit 8ad57b9eaca2b91e0513afb987dd0986d56c97ca&#010;Author: Zoran Regvart &lt;zregvart@apache.org&gt;&#010;Date:   2017-04-26T11:38:42Z&#010;&#010;    CAMEL-11203 Verifier should support exclusion o...&#010;    &#010;    ...f properties in option groups&#010;    &#010;    This adds an exclusion modifier to the parameter given in an option&#010;    group. If the parameter name is preceded with `!` then it should not be&#010;    present when evaluating if the group is valid.&#010;&#010;----&#010;&#010;&#010;&gt; Verifier should support exclusion of properties in option groups&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11203&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11203&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;&#010;&gt; When validation of Salesforce component properties is done there are three option groups&#010;that can be used to specify the way the component authenticates against Salesforce.&#010;&gt; The user needs to provide options that satisfy only one of the combination of properties&#010;in order for the component to auto determine the authentication method it needs to perform.&#010;&gt; So specifying username/password along with refresh token is invalid as this implies both&#010;username/password authentication flow and refresh token authentication flow.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
859,864,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11203) Verifier should support exclusion of properties in option groups,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067034.1493206605000.57502.1493226304187%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 17:05:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11203?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11203:&#010;--------------------------------&#010;    Fix Version/s: 2.19.1&#010;                   2.20.0&#010;&#010;&gt; Verifier should support exclusion of properties in option groups&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11203&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11203&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; When validation of Salesforce component properties is done there are three option groups&#010;that can be used to specify the way the component authenticates against Salesforce.&#010;&gt; The user needs to provide options that satisfy only one of the combination of properties&#010;in order for the component to auto determine the authentication method it needs to perform.&#010;&gt; So specifying username/password along with refresh token is invalid as this implies both&#010;username/password authentication flow and refresh token authentication flow.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
860,865,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11203) Verifier should support exclusion of properties in option groups,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067034.1493206605000.64188.1493283964075%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 09:06:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11203?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986236#comment-15986236&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11203:&#010;----------------------------------------&#010;&#010;Github user zregvart closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1661&#010;&#010;&#010;&gt; Verifier should support exclusion of properties in option groups&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11203&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11203&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; When validation of Salesforce component properties is done there are three option groups&#010;that can be used to specify the way the component authenticates against Salesforce.&#010;&gt; The user needs to provide options that satisfy only one of the combination of properties&#010;in order for the component to auto determine the authentication method it needs to perform.&#010;&gt; So specifying username/password along with refresh token is invalid as this implies both&#010;username/password authentication flow and refresh token authentication flow.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
861,866,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11203) Verifier should support exclusion of properties in option groups,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067034.1493206605000.80191.1493396164087%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 16:16:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11203?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11203.&#010;-----------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s:     (was: 2.19.1)&#010;                       (was: 2.20.0)&#010;                   2.19.0&#010;&#010;&gt; Verifier should support exclusion of properties in option groups&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11203&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11203&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When validation of Salesforce component properties is done there are three option groups&#010;that can be used to specify the way the component authenticates against Salesforce.&#010;&gt; The user needs to provide options that satisfy only one of the combination of properties&#010;in order for the component to auto determine the authentication method it needs to perform.&#010;&gt; So specifying username/password along with refresh token is invalid as this implies both&#010;username/password authentication flow and refresh token authentication flow.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
862,867,,[jira] [Created] (CAMEL-11204) camel-catalog - asEndpointUri to support connectors/component with no context-path part,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067034.1493206605000.80191.1493396164087%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 16:16:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11203?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11203.&#010;-----------------------------------&#010;       Resolution: Fixed&#010;    Fix Version/s:     (was: 2.19.1)&#010;                       (was: 2.20.0)&#010;                   2.19.0&#010;&#010;&gt; Verifier should support exclusion of properties in option groups&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11203&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11203&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; When validation of Salesforce component properties is done there are three option groups&#010;that can be used to specify the way the component authenticates against Salesforce.&#010;&gt; The user needs to provide options that satisfy only one of the combination of properties&#010;in order for the component to auto determine the authentication method it needs to perform.&#010;&gt; So specifying username/password along with refresh token is invalid as this implies both&#010;username/password authentication flow and refresh token authentication flow.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
863,868,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11204) camel-catalog - asEndpointUri to support connectors/component with no context-path part,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067055.1493212098000.55373.1493212144050%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 13:09:04 GMT","Claus Ibsen created CAMEL-11204:&#010;-----------------------------------&#010;&#010;             Summary: camel-catalog - asEndpointUri to support connectors/component with no&#010;context-path part&#010;                 Key: CAMEL-11204&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11204&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-catalog, camel-core&#010;    Affects Versions: 2.19.0&#010;            Reporter: Claus Ibsen&#010;            Assignee: Claus Ibsen&#010;             Fix For: 2.19.1, 2.20.0&#010;&#010;&#010;You may have connectors that has no context-path, and this generates anyway such as&#010;{code}&#010;twitter-mention:&#010;{code}&#010;&#010;Notice the ending colon, which should be removed&#010;&#010;And likewise for query parameters&#010;{code}&#010;salesforce-upsert-contact:?sObjectIdName=TwitterScreenName__c&#010;{code}&#010;&#010;There is :? which should just be ?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
864,869,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11204) camel-catalog - asEndpointUri to support connectors/component with no context-path part,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067055.1493212098000.55601.1493213045578%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 13:24:05 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11204?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15984793#comment-15984793&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11204:&#010;-------------------------------------&#010;&#010;Need to merge to 2.19.x branch when we have a release&#010;&#010;&gt; camel-catalog - asEndpointUri to support connectors/component with no context-path part&#010;&gt; ---------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11204&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11204&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-catalog, camel-core&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; You may have connectors that has no context-path, and this generates anyway such as&#010;&gt; {code}&#010;&gt; twitter-mention:&#010;&gt; {code}&#010;&gt; Notice the ending colon, which should be removed&#010;&gt; And likewise for query parameters&#010;&gt; {code}&#010;&gt; salesforce-upsert-contact:?sObjectIdName=TwitterScreenName__c&#010;&gt; {code}&#010;&gt; There is :? which should just be ?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
865,870,,[jira] [Commented] (CAMEL-8855) camel-jpa - Add support for JPA producer to delete records,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067055.1493212098000.55601.1493213045578%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 13:24:05 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11204?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15984793#comment-15984793&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11204:&#010;-------------------------------------&#010;&#010;Need to merge to 2.19.x branch when we have a release&#010;&#010;&gt; camel-catalog - asEndpointUri to support connectors/component with no context-path part&#010;&gt; ---------------------------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11204&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11204&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-catalog, camel-core&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; You may have connectors that has no context-path, and this generates anyway such as&#010;&gt; {code}&#010;&gt; twitter-mention:&#010;&gt; {code}&#010;&gt; Notice the ending colon, which should be removed&#010;&gt; And likewise for query parameters&#010;&gt; {code}&#010;&gt; salesforce-upsert-contact:?sObjectIdName=TwitterScreenName__c&#010;&gt; {code}&#010;&gt; There is :? which should just be ?&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
866,871,Can Deliorman (JIRA),  [jira] [Commented] (CAMEL-8855) camel-jpa - Add support for JPA producer to delete records,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12837039.1434001844000.56166.1493217244214%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 14:34:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-8855?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15984917#comment-15984917&#010;] &#010;&#010;Can Deliorman commented on CAMEL-8855:&#010;--------------------------------------&#010;&#010;This issue was succesfully resolveed but the documentation was not updated. Please add this&#010;tag to the documentation on https://camel.apache.org/jpa.html !!!&#010;&#010;&gt; camel-jpa - Add support for JPA producer to delete records&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-8855&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-8855&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-jpa&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;             Fix For: 2.16.0&#010;&gt;&#010;&gt;&#010;&gt; Currently, camel-jpa producer&#010;&gt; {code:java}&#010;&gt; to(""jpa:MyEntity?..."")&#010;&gt; {code}&#010;&gt; can only invoke {{EntityManager.persist()}} or {{EntityManager.merge()}}, but sometimes&#010;users want to send JPA entities to camel-jpa producer to delete them from the database, i.e.&#010;invoke {{EntityManager.remove()}}.&#010;&gt; Maybe, introducing {{remove}} option to JPA producer is sufficient like this:&#010;&gt; {code:java}&#010;&gt; to(""jpa:MyEntity?remove=true"")&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
867,872,Can Del (JIRA),  [jira] [Comment Edited] (CAMEL-8855) camel-jpa - Add support for JPA producer to delete records,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12837039.1434001844000.56233.1493217544091%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 14:39:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-8855?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15984917#comment-15984917&#010;] &#010;&#010;Can Del edited comment on CAMEL-8855 at 4/26/17 2:38 PM:&#010;---------------------------------------------------------&#010;&#010;This issue was succesfully resolved but the documentation was not updated. Please add this&#010;tag to the documentation on https://camel.apache.org/jpa.html !!!&#010;&#010;&#010;was (Author: caranthir):&#010;This issue was succesfully resolveed but the documentation was not updated. Please add this&#010;tag to the documentation on https://camel.apache.org/jpa.html !!!&#010;&#010;&gt; camel-jpa - Add support for JPA producer to delete records&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-8855&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-8855&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-jpa&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;             Fix For: 2.16.0&#010;&gt;&#010;&gt;&#010;&gt; Currently, camel-jpa producer&#010;&gt; {code:java}&#010;&gt; to(""jpa:MyEntity?..."")&#010;&gt; {code}&#010;&gt; can only invoke {{EntityManager.persist()}} or {{EntityManager.merge()}}, but sometimes&#010;users want to send JPA entities to camel-jpa producer to delete them from the database, i.e.&#010;invoke {{EntityManager.remove()}}.&#010;&gt; Maybe, introducing {{remove}} option to JPA producer is sufficient like this:&#010;&gt; {code:java}&#010;&gt; to(""jpa:MyEntity?remove=true"")&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
868,873,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-8855) camel-jpa - Add support for JPA producer to delete records,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12837039.1434001844000.56310.1493218564073%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 14:56:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-8855?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15984950#comment-15984950&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-8855:&#010;------------------------------------&#010;&#010;Look at the docs here&#010;https://github.com/apache/camel/tree/master/components#components&#010;&#010;These are the updated docs&#010;&#010;&gt; camel-jpa - Add support for JPA producer to delete records&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-8855&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-8855&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-jpa&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;             Fix For: 2.16.0&#010;&gt;&#010;&gt;&#010;&gt; Currently, camel-jpa producer&#010;&gt; {code:java}&#010;&gt; to(""jpa:MyEntity?..."")&#010;&gt; {code}&#010;&gt; can only invoke {{EntityManager.persist()}} or {{EntityManager.merge()}}, but sometimes&#010;users want to send JPA entities to camel-jpa producer to delete them from the database, i.e.&#010;invoke {{EntityManager.remove()}}.&#010;&gt; Maybe, introducing {{remove}} option to JPA producer is sufficient like this:&#010;&gt; {code:java}&#010;&gt; to(""jpa:MyEntity?remove=true"")&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
869,874,Can Del (JIRA),  [jira] [Commented] (CAMEL-8855) camel-jpa - Add support for JPA producer to delete records,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12837039.1434001844000.56846.1493221924166%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 15:52:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-8855?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15985034#comment-15985034&#010;] &#010;&#010;Can Del commented on CAMEL-8855:&#010;--------------------------------&#010;&#010;Thanks for the link. I think some newbies like me aren't aware of these docs. It would be&#010;nice to have the link https://camel.apache.org/jpa.html also updated. &#010;&#010;&gt; camel-jpa - Add support for JPA producer to delete records&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-8855&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-8855&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-jpa&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;             Fix For: 2.16.0&#010;&gt;&#010;&gt;&#010;&gt; Currently, camel-jpa producer&#010;&gt; {code:java}&#010;&gt; to(""jpa:MyEntity?..."")&#010;&gt; {code}&#010;&gt; can only invoke {{EntityManager.persist()}} or {{EntityManager.merge()}}, but sometimes&#010;users want to send JPA entities to camel-jpa producer to delete them from the database, i.e.&#010;invoke {{EntityManager.remove()}}.&#010;&gt; Maybe, introducing {{remove}} option to JPA producer is sufficient like this:&#010;&gt; {code:java}&#010;&gt; to(""jpa:MyEntity?remove=true"")&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
870,875,,[jira] [Created] (CAMEL-11205) Attribute 'prop:group' is not allowed to appear in element 'tokenize',http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.12837039.1434001844000.56846.1493221924166%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 15:52:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-8855?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15985034#comment-15985034&#010;] &#010;&#010;Can Del commented on CAMEL-8855:&#010;--------------------------------&#010;&#010;Thanks for the link. I think some newbies like me aren't aware of these docs. It would be&#010;nice to have the link https://camel.apache.org/jpa.html also updated. &#010;&#010;&gt; camel-jpa - Add support for JPA producer to delete records&#010;&gt; ----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-8855&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-8855&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: New Feature&#010;&gt;          Components: camel-jpa&#010;&gt;    Affects Versions: 2.15.2&#010;&gt;            Reporter: Tadayoshi Sato&#010;&gt;            Assignee: Andrea Cosentino&#010;&gt;             Fix For: 2.16.0&#010;&gt;&#010;&gt;&#010;&gt; Currently, camel-jpa producer&#010;&gt; {code:java}&#010;&gt; to(""jpa:MyEntity?..."")&#010;&gt; {code}&#010;&gt; can only invoke {{EntityManager.persist()}} or {{EntityManager.merge()}}, but sometimes&#010;users want to send JPA entities to camel-jpa producer to delete them from the database, i.e.&#010;invoke {{EntityManager.remove()}}.&#010;&gt; Maybe, introducing {{remove}} option to JPA producer is sufficient like this:&#010;&gt; {code:java}&#010;&gt; to(""jpa:MyEntity?remove=true"")&#010;&gt; {code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
871,876,Mehdi Benmbouh (JIRA),  [jira] [Created] (CAMEL-11205) Attribute 'prop:group' is not allowed to appear in element 'tokenize',http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067095.1493221897000.56841.1493221924125%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 15:52:04 GMT","Mehdi Benmbouh created CAMEL-11205:&#010;--------------------------------------&#010;&#010;             Summary: Attribute 'prop:group' is not allowed to appear in element 'tokenize'&#010;                 Key: CAMEL-11205&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11205&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-spring&#010;    Affects Versions: 2.15.5&#010;         Environment: operating system&#010;            Reporter: Mehdi Benmbouh&#010;            Priority: Blocker&#010;             Fix For: 2.15.5&#010;&#010;&#010;I need an substitution of XML DSL attribute values in my code :&#010;&#010;&lt;split streaming=""true"" strategyRef=""appendPdfAggregationStrategy""&gt;&#010;&#009;&#009;&#009;&#009;&#009;&#009;&#009;&lt;!-- use prop namespace, to define a property placeholder, which maps to option&#010;group={{uw9.perso.context.split.group}} --&gt;&#010;&#009;&#009;&#009;&#009;&#009;&#009;&#009;&#009;&lt;tokenize token=""&amp;lt;!--oceanPageBeak--&amp;gt;"" prop:group=""uw9.perso.context.split.group""/&gt;&#010;&#009;&#009;&#009;&#009;&#009;&#009;&#009;&#009;&lt;to uri=""direct:generateXslFo"" /&gt;&#010;&#009;&#009;&#009;&#009;&#009;&#009;&#009;&#009;&lt;to uri=""direct:transformXslFoToPdf"" /&gt;&#010;&#009;&#009;&#009;&#009;&#009;&#009;&#009;&lt;/split&gt;&#010;&#010;But i have this error:&#010;&#010;ERROR 26-04 16:26:46.633 [ServerService Thread Pool -- 51] RouteEngineEJB [RouteEngineEJB.java:postConstruct:92]&#010;Cannot start automatically - Check Configuration&#010;org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 287 in XML document&#010;from URL [file:/usr/share/jbossas/modules/app/ocean/main/context/uw9-perso-context.xml] is&#010;invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 287; columnNumber:&#010;98; cvc-complex-type.3.2.2: Attribute 'prop:group' is not allowed to appear in element 'tokenize'.&#010;&#009;at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:399)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:181)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:217)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:252)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:127)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:93)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:537)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:452)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;at org.springframework.context.support.FileSystemXmlApplicationContext.&lt;init&gt;(FileSystemXmlApplicationContext.java:140)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;at org.springframework.context.support.FileSystemXmlApplicationContext.&lt;init&gt;(FileSystemXmlApplicationContext.java:94)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;at net.awl.bfi.eipengine.engine.RouteEngineEJB.startContext(RouteEngineEJB.java:171) ~[classes:na]&#010;&#009;at net.awl.bfi.eipengine.engine.RouteEngineEJB.postConstruct(RouteEngineEJB.java:88) ~[classes:na]&#010;&#009;at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_121]&#010;&#009;at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_121]&#010;&#009;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#010;~[na:1.8.0_121]&#010;&#009;at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_121]&#010;&#009;at org.jboss.as.ee.component.ManagedReferenceLifecycleMethodInterceptor.processInvocation(ManagedReferenceLifecycleMethodInterceptor.java:96)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.invocation.WeavedInterceptor.processInvocation(WeavedInterceptor.java:53) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.doLifecycleInterception(Jsr299BindingsInterceptor.java:116)&#010;[jboss-as-weld.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.processInvocation(Jsr299BindingsInterceptor.java:107)&#010;[jboss-as-weld.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.as.weld.ejb.EjbRequestScopeActivationInterceptor.processInvocation(EjbRequestScopeActivationInterceptor.java:93)&#010;[jboss-as-weld.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.as.weld.injection.WeldInjectionInterceptor.processInvocation(WeldInjectionInterceptor.java:67)&#010;[jboss-as-weld.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.as.ee.component.ComponentInstantiatorInterceptor.processInvocation(ComponentInstantiatorInterceptor.java:76)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.invocation.WeavedInterceptor.processInvocation(WeavedInterceptor.java:53) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.as.weld.ejb.Jsr299BindingsCreateInterceptor.processInvocation(Jsr299BindingsCreateInterceptor.java:92)&#010;[jboss-as-weld.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.as.ejb3.tx.CMTTxInterceptor.invokeInOurTx(CMTTxInterceptor.java:279) [jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.as.ejb3.tx.CMTTxInterceptor.requiresNew(CMTTxInterceptor.java:353) [jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.as.ejb3.tx.LifecycleCMTTxInterceptor.processInvocation(LifecycleCMTTxInterceptor.java:66)&#010;[jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.as.ejb3.component.interceptors.CurrentInvocationContextInterceptor.processInvocation(CurrentInvocationContextInterceptor.java:41)&#010;[jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.invocation.ContextClassLoaderInterceptor.processInvocation(ContextClassLoaderInterceptor.java:70)&#010;[jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.as.ejb3.component.singleton.StartupCountDownInterceptor.processInvocation(StartupCountDownInterceptor.java:25)&#010;[jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)&#010;[jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&#009;at org.jboss.as.ee.component.BasicComponent.constructComponentInstance(BasicComponent.java:162)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.as.ee.component.BasicComponent.constructComponentInstance(BasicComponent.java:135)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.as.ee.component.BasicComponent.createInstance(BasicComponent.java:90) [jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.as.ejb3.component.singleton.SingletonComponent.getComponentInstance(SingletonComponent.java:122)&#010;[jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.as.ejb3.component.singleton.SingletonComponent.start(SingletonComponent.java:137)&#010;[jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at org.jboss.as.ee.component.ComponentStartService$1.run(ComponentStartService.java:54) [jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&#009;at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_121]&#010;&#009;at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_121]&#010;&#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_121]&#010;&#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_121]&#010;&#009;at java.lang.Thread.run(Thread.java:745) [na:1.8.0_121]&#010;&#009;at org.jboss.threads.JBossThread.run(JBossThread.java:122) [jboss-threads.jar!/:2.1.2.Final-redhat-1]&#010;Caused by: org.xml.sax.SAXParseException: cvc-complex-type.3.2.2: Attribute 'prop:group' is&#010;not allowed to appear in element 'tokenize'.&#010;&#009;at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:196)&#010;~[na:na]&#010;&#009;at org.apache.xerces.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:132) ~[na:na]&#010;&#009;at org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:390) ~[na:na]&#010;&#009;at org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:322) ~[na:na]&#010;&#009;at org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:281) ~[na:na]&#010;&#009;at org.apache.xerces.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:446)&#010;~[na:na]&#010;&#009;at org.apache.xerces.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3271)&#010;~[na:na]&#010;&#009;at org.apache.xerces.impl.xs.XMLSchemaValidator.processAttributes(XMLSchemaValidator.java:2756)&#010;~[na:na]&#010;&#009;at org.apache.xerces.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:2136)&#010;~[na:na]&#010;&#009;at org.apache.xerces.impl.xs.XMLSchemaValidator.emptyElement(XMLSchemaValidator.java:744)&#010;~[na:na]&#010;&#009;at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:275)&#010;~[na:na]&#010;&#009;at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1653)&#010;~[na:na]&#010;&#009;at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:324)&#010;~[na:na]&#010;&#009;at org.apache.xerces.parsers.XML11Configuration.parse(XML11Configuration.java:845) ~[na:na]&#010;&#009;at org.apache.xerces.parsers.XML11Configuration.parse(XML11Configuration.java:768) ~[na:na]&#010;&#009;at org.apache.xerces.parsers.XMLParser.parse(XMLParser.java:108) ~[na:na]&#010;&#009;at org.apache.xerces.parsers.DOMParser.parse(DOMParser.java:230) ~[na:na]&#010;&#009;at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:285) ~[na:na]&#010;&#009;at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&#009;... 61 common frames omitted&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
872,877,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11205) Attribute 'prop:group' is not allowed to appear in element 'tokenize',http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067095.1493221897000.57497.1493226304146%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 17:05:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11205?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11205.&#010;---------------------------------&#010;    Resolution: Invalid&#010;&#010;Use the user forum to get help first&#010;http://camel.apache.org/discussion-forums.html&#010;&#010;&gt; Attribute 'prop:group' is not allowed to appear in element 'tokenize'&#010;&gt; ---------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11205&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11205&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-spring&#010;&gt;    Affects Versions: 2.15.5&#010;&gt;         Environment: operating system&#010;&gt;            Reporter: Mehdi Benmbouh&#010;&gt;            Priority: Blocker&#010;&gt;             Fix For: 2.15.5&#010;&gt;&#010;&gt;&#010;&gt; I need an substitution of XML DSL attribute values in my code :&#010;&gt; &lt;split streaming=""true"" strategyRef=""appendPdfAggregationStrategy""&gt;&#010;&gt; &#009;&#009;&#009;&#009;&#009;&#009;&#009;&lt;!-- use prop namespace, to define a property placeholder, which maps to option&#010;group={{uw9.perso.context.split.group}} --&gt;&#010;&gt; &#009;&#009;&#009;&#009;&#009;&#009;&#009;&#009;&lt;tokenize token=""&amp;lt;!--oceanPageBeak--&amp;gt;"" prop:group=""uw9.perso.context.split.group""/&gt;&#010;&gt; &#009;&#009;&#009;&#009;&#009;&#009;&#009;&#009;&lt;to uri=""direct:generateXslFo"" /&gt;&#010;&gt; &#009;&#009;&#009;&#009;&#009;&#009;&#009;&#009;&lt;to uri=""direct:transformXslFoToPdf"" /&gt;&#010;&gt; &#009;&#009;&#009;&#009;&#009;&#009;&#009;&lt;/split&gt;&#010;&gt; But i have this error:&#010;&gt; ERROR 26-04 16:26:46.633 [ServerService Thread Pool -- 51] RouteEngineEJB [RouteEngineEJB.java:postConstruct:92]&#010;Cannot start automatically - Check Configuration&#010;&gt; org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 287 in XML&#010;document from URL [file:/usr/share/jbossas/modules/app/ocean/main/context/uw9-perso-context.xml]&#010;is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 287; columnNumber:&#010;98; cvc-complex-type.3.2.2: Attribute 'prop:group' is not allowed to appear in element 'tokenize'.&#010;&gt; &#009;at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:399)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:181)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:217)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:252)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:127)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:93)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:537)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:452)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.context.support.FileSystemXmlApplicationContext.&lt;init&gt;(FileSystemXmlApplicationContext.java:140)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.context.support.FileSystemXmlApplicationContext.&lt;init&gt;(FileSystemXmlApplicationContext.java:94)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at net.awl.bfi.eipengine.engine.RouteEngineEJB.startContext(RouteEngineEJB.java:171)&#010;~[classes:na]&#010;&gt; &#009;at net.awl.bfi.eipengine.engine.RouteEngineEJB.postConstruct(RouteEngineEJB.java:88)&#010;~[classes:na]&#010;&gt; &#009;at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_121]&#010;&gt; &#009;at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_121]&#010;&gt; &#009;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#010;~[na:1.8.0_121]&#010;&gt; &#009;at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_121]&#010;&gt; &#009;at org.jboss.as.ee.component.ManagedReferenceLifecycleMethodInterceptor.processInvocation(ManagedReferenceLifecycleMethodInterceptor.java:96)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.invocation.WeavedInterceptor.processInvocation(WeavedInterceptor.java:53)&#010;[jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.doLifecycleInterception(Jsr299BindingsInterceptor.java:116)&#010;[jboss-as-weld.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.processInvocation(Jsr299BindingsInterceptor.java:107)&#010;[jboss-as-weld.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.weld.ejb.EjbRequestScopeActivationInterceptor.processInvocation(EjbRequestScopeActivationInterceptor.java:93)&#010;[jboss-as-weld.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.weld.injection.WeldInjectionInterceptor.processInvocation(WeldInjectionInterceptor.java:67)&#010;[jboss-as-weld.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.ee.component.ComponentInstantiatorInterceptor.processInvocation(ComponentInstantiatorInterceptor.java:76)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.invocation.WeavedInterceptor.processInvocation(WeavedInterceptor.java:53)&#010;[jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.weld.ejb.Jsr299BindingsCreateInterceptor.processInvocation(Jsr299BindingsCreateInterceptor.java:92)&#010;[jboss-as-weld.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.ejb3.tx.CMTTxInterceptor.invokeInOurTx(CMTTxInterceptor.java:279) [jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.as.ejb3.tx.CMTTxInterceptor.requiresNew(CMTTxInterceptor.java:353) [jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.as.ejb3.tx.LifecycleCMTTxInterceptor.processInvocation(LifecycleCMTTxInterceptor.java:66)&#010;[jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.ejb3.component.interceptors.CurrentInvocationContextInterceptor.processInvocation(CurrentInvocationContextInterceptor.java:41)&#010;[jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.invocation.ContextClassLoaderInterceptor.processInvocation(ContextClassLoaderInterceptor.java:70)&#010;[jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.ejb3.component.singleton.StartupCountDownInterceptor.processInvocation(StartupCountDownInterceptor.java:25)&#010;[jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)&#010;[jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.ee.component.BasicComponent.constructComponentInstance(BasicComponent.java:162)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.as.ee.component.BasicComponent.constructComponentInstance(BasicComponent.java:135)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.as.ee.component.BasicComponent.createInstance(BasicComponent.java:90) [jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.as.ejb3.component.singleton.SingletonComponent.getComponentInstance(SingletonComponent.java:122)&#010;[jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.as.ejb3.component.singleton.SingletonComponent.start(SingletonComponent.java:137)&#010;[jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.as.ee.component.ComponentStartService$1.run(ComponentStartService.java:54)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_121]&#010;&gt; &#009;at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_121]&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_121]&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_121]&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745) [na:1.8.0_121]&#010;&gt; &#009;at org.jboss.threads.JBossThread.run(JBossThread.java:122) [jboss-threads.jar!/:2.1.2.Final-redhat-1]&#010;&gt; Caused by: org.xml.sax.SAXParseException: cvc-complex-type.3.2.2: Attribute 'prop:group'&#010;is not allowed to appear in element 'tokenize'.&#010;&gt; &#009;at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:196)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:132) ~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:390) ~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:322) ~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:281) ~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:446)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3271)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.xs.XMLSchemaValidator.processAttributes(XMLSchemaValidator.java:2756)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:2136)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.xs.XMLSchemaValidator.emptyElement(XMLSchemaValidator.java:744)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:275)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1653)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:324)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.parsers.XML11Configuration.parse(XML11Configuration.java:845) ~[na:na]&#010;&gt; &#009;at org.apache.xerces.parsers.XML11Configuration.parse(XML11Configuration.java:768) ~[na:na]&#010;&gt; &#009;at org.apache.xerces.parsers.XMLParser.parse(XMLParser.java:108) ~[na:na]&#010;&gt; &#009;at org.apache.xerces.parsers.DOMParser.parse(DOMParser.java:230) ~[na:na]&#010;&gt; &#009;at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:285) ~[na:na]&#010;&gt; &#009;at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;... 61 common frames omitted&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
873,878,,[jira] [Created] (CAMEL-11206) camel-twitter - The default delay is not used,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067095.1493221897000.57497.1493226304146%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 17:05:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11205?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11205.&#010;---------------------------------&#010;    Resolution: Invalid&#010;&#010;Use the user forum to get help first&#010;http://camel.apache.org/discussion-forums.html&#010;&#010;&gt; Attribute 'prop:group' is not allowed to appear in element 'tokenize'&#010;&gt; ---------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11205&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11205&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-spring&#010;&gt;    Affects Versions: 2.15.5&#010;&gt;         Environment: operating system&#010;&gt;            Reporter: Mehdi Benmbouh&#010;&gt;            Priority: Blocker&#010;&gt;             Fix For: 2.15.5&#010;&gt;&#010;&gt;&#010;&gt; I need an substitution of XML DSL attribute values in my code :&#010;&gt; &lt;split streaming=""true"" strategyRef=""appendPdfAggregationStrategy""&gt;&#010;&gt; &#009;&#009;&#009;&#009;&#009;&#009;&#009;&lt;!-- use prop namespace, to define a property placeholder, which maps to option&#010;group={{uw9.perso.context.split.group}} --&gt;&#010;&gt; &#009;&#009;&#009;&#009;&#009;&#009;&#009;&#009;&lt;tokenize token=""&amp;lt;!--oceanPageBeak--&amp;gt;"" prop:group=""uw9.perso.context.split.group""/&gt;&#010;&gt; &#009;&#009;&#009;&#009;&#009;&#009;&#009;&#009;&lt;to uri=""direct:generateXslFo"" /&gt;&#010;&gt; &#009;&#009;&#009;&#009;&#009;&#009;&#009;&#009;&lt;to uri=""direct:transformXslFoToPdf"" /&gt;&#010;&gt; &#009;&#009;&#009;&#009;&#009;&#009;&#009;&lt;/split&gt;&#010;&gt; But i have this error:&#010;&gt; ERROR 26-04 16:26:46.633 [ServerService Thread Pool -- 51] RouteEngineEJB [RouteEngineEJB.java:postConstruct:92]&#010;Cannot start automatically - Check Configuration&#010;&gt; org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 287 in XML&#010;document from URL [file:/usr/share/jbossas/modules/app/ocean/main/context/uw9-perso-context.xml]&#010;is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 287; columnNumber:&#010;98; cvc-complex-type.3.2.2: Attribute 'prop:group' is not allowed to appear in element 'tokenize'.&#010;&gt; &#009;at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:399)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:181)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:217)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:252)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:127)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:93)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:537)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:452)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.context.support.FileSystemXmlApplicationContext.&lt;init&gt;(FileSystemXmlApplicationContext.java:140)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.context.support.FileSystemXmlApplicationContext.&lt;init&gt;(FileSystemXmlApplicationContext.java:94)&#010;~[spring-context-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at net.awl.bfi.eipengine.engine.RouteEngineEJB.startContext(RouteEngineEJB.java:171)&#010;~[classes:na]&#010;&gt; &#009;at net.awl.bfi.eipengine.engine.RouteEngineEJB.postConstruct(RouteEngineEJB.java:88)&#010;~[classes:na]&#010;&gt; &#009;at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_121]&#010;&gt; &#009;at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_121]&#010;&gt; &#009;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#010;~[na:1.8.0_121]&#010;&gt; &#009;at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_121]&#010;&gt; &#009;at org.jboss.as.ee.component.ManagedReferenceLifecycleMethodInterceptor.processInvocation(ManagedReferenceLifecycleMethodInterceptor.java:96)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.invocation.WeavedInterceptor.processInvocation(WeavedInterceptor.java:53)&#010;[jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.doLifecycleInterception(Jsr299BindingsInterceptor.java:116)&#010;[jboss-as-weld.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.processInvocation(Jsr299BindingsInterceptor.java:107)&#010;[jboss-as-weld.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.weld.ejb.EjbRequestScopeActivationInterceptor.processInvocation(EjbRequestScopeActivationInterceptor.java:93)&#010;[jboss-as-weld.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.weld.injection.WeldInjectionInterceptor.processInvocation(WeldInjectionInterceptor.java:67)&#010;[jboss-as-weld.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.ee.component.ComponentInstantiatorInterceptor.processInvocation(ComponentInstantiatorInterceptor.java:76)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.invocation.WeavedInterceptor.processInvocation(WeavedInterceptor.java:53)&#010;[jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.weld.ejb.Jsr299BindingsCreateInterceptor.processInvocation(Jsr299BindingsCreateInterceptor.java:92)&#010;[jboss-as-weld.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.ejb3.tx.CMTTxInterceptor.invokeInOurTx(CMTTxInterceptor.java:279) [jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.as.ejb3.tx.CMTTxInterceptor.requiresNew(CMTTxInterceptor.java:353) [jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.as.ejb3.tx.LifecycleCMTTxInterceptor.processInvocation(LifecycleCMTTxInterceptor.java:66)&#010;[jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.ejb3.component.interceptors.CurrentInvocationContextInterceptor.processInvocation(CurrentInvocationContextInterceptor.java:41)&#010;[jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.invocation.ContextClassLoaderInterceptor.processInvocation(ContextClassLoaderInterceptor.java:70)&#010;[jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.ejb3.component.singleton.StartupCountDownInterceptor.processInvocation(StartupCountDownInterceptor.java:25)&#010;[jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288) [jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)&#010;[jboss-invocation.jar!/:1.1.3.Final-redhat-1]&#010;&gt; &#009;at org.jboss.as.ee.component.BasicComponent.constructComponentInstance(BasicComponent.java:162)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.as.ee.component.BasicComponent.constructComponentInstance(BasicComponent.java:135)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.as.ee.component.BasicComponent.createInstance(BasicComponent.java:90) [jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.as.ejb3.component.singleton.SingletonComponent.getComponentInstance(SingletonComponent.java:122)&#010;[jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.as.ejb3.component.singleton.SingletonComponent.start(SingletonComponent.java:137)&#010;[jboss-as-ejb3.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at org.jboss.as.ee.component.ComponentStartService$1.run(ComponentStartService.java:54)&#010;[jboss-as-ee.jar!/:7.5.13.Final-redhat-2]&#010;&gt; &#009;at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_121]&#010;&gt; &#009;at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_121]&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_121]&#010;&gt; &#009;at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_121]&#010;&gt; &#009;at java.lang.Thread.run(Thread.java:745) [na:1.8.0_121]&#010;&gt; &#009;at org.jboss.threads.JBossThread.run(JBossThread.java:122) [jboss-threads.jar!/:2.1.2.Final-redhat-1]&#010;&gt; Caused by: org.xml.sax.SAXParseException: cvc-complex-type.3.2.2: Attribute 'prop:group'&#010;is not allowed to appear in element 'tokenize'.&#010;&gt; &#009;at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:196)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:132) ~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:390) ~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:322) ~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:281) ~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:446)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3271)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.xs.XMLSchemaValidator.processAttributes(XMLSchemaValidator.java:2756)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:2136)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.xs.XMLSchemaValidator.emptyElement(XMLSchemaValidator.java:744)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:275)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1653)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:324)&#010;~[na:na]&#010;&gt; &#009;at org.apache.xerces.parsers.XML11Configuration.parse(XML11Configuration.java:845) ~[na:na]&#010;&gt; &#009;at org.apache.xerces.parsers.XML11Configuration.parse(XML11Configuration.java:768) ~[na:na]&#010;&gt; &#009;at org.apache.xerces.parsers.XMLParser.parse(XMLParser.java:108) ~[na:na]&#010;&gt; &#009;at org.apache.xerces.parsers.DOMParser.parse(DOMParser.java:230) ~[na:na]&#010;&gt; &#009;at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:285) ~[na:na]&#010;&gt; &#009;at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)&#010;~[spring-beans-4.1.6.RELEASE.jar:4.1.6.RELEASE]&#010;&gt; &#009;... 61 common frames omitted&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
874,879,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11206) camel-twitter - The default delay is not used,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067144.1493232855000.58658.1493232904124%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 18:55:04 GMT","Claus Ibsen created CAMEL-11206:&#010;-----------------------------------&#010;&#010;             Summary: camel-twitter - The default delay is not used&#010;                 Key: CAMEL-11206&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11206&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-twitter&#010;    Affects Versions: 2.19.0&#010;            Reporter: Claus Ibsen&#010;            Assignee: Claus Ibsen&#010;             Fix For: 2.20.0, 2.19.1&#010;&#010;&#010;It should by default be 60 seconds but its set back to 0.5 sec which causes twitter rate limit&#010;problems.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
875,880,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11206) camel-twitter - The default delay is not used,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067144.1493232855000.58798.1493233444033%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 19:04:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11206?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11206:&#010;--------------------------------&#010;    Fix Version/s: 2.18.4&#010;                   2.17.7&#010;&#010;&gt; camel-twitter - The default delay is not used&#010;&gt; ---------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11206&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11206&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-twitter&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; It should by default be 60 seconds but its set back to 0.5 sec which causes twitter rate&#010;limit problems.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
876,881,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11206) camel-twitter - The default delay is not used,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067144.1493232855000.58799.1493233504133%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 19:05:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11206?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15985368#comment-15985368&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11206:&#010;-------------------------------------&#010;&#010;Need to merge to 2.19.x branch after the release&#010;&#010;&gt; camel-twitter - The default delay is not used&#010;&gt; ---------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11206&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11206&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-twitter&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; It should by default be 60 seconds but its set back to 0.5 sec which causes twitter rate&#010;limit problems.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
877,882,,[jira] [Created] (CAMEL-11207) camel-twitter - Default poll delay is 60s we can lower it to 20s,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067144.1493232855000.58799.1493233504133%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 19:05:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11206?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15985368#comment-15985368&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11206:&#010;-------------------------------------&#010;&#010;Need to merge to 2.19.x branch after the release&#010;&#010;&gt; camel-twitter - The default delay is not used&#010;&gt; ---------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11206&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11206&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-twitter&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.17.7, 2.18.4, 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; It should by default be 60 seconds but its set back to 0.5 sec which causes twitter rate&#010;limit problems.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
878,883,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11207) camel-twitter - Default poll delay is 60s we can lower it to 20s,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067148.1493233557000.58815.1493233564281%40Atlassian.JIRA%3E,issues,"Wed, 26 Apr 2017 19:06:04 GMT",Claus Ibsen created CAMEL-11207:&#010;-----------------------------------&#010;&#010;             Summary: camel-twitter - Default poll delay is 60s we can lower it to 20s&#010;                 Key: CAMEL-11207&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11207&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-twitter&#010;            Reporter: Claus Ibsen&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;Using 60s is maybe too slow. You can use 20s as a kinda safe lower value to avoid rate limits.&#010;If you go below 15s you may get rate limits.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
879,884,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11207) camel-twitter - Default poll delay is 60s we can lower it to 20s,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067148.1493233557000.64389.1493285704331%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 09:35:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11207?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11207:&#010;--------------------------------&#010;    Description: Using 60s is maybe too slow. You can use 30s as a kinda safe lower value&#010;to avoid rate limits. If you go below 15s you may get rate limits.  (was: Using 60s is maybe&#010;too slow. You can use 20s as a kinda safe lower value to avoid rate limits. If you go below&#010;15s you may get rate limits.)&#010;&#010;&gt; camel-twitter - Default poll delay is 60s we can lower it to 20s&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11207&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11207&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-twitter&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Using 60s is maybe too slow. You can use 30s as a kinda safe lower value to avoid rate&#010;limits. If you go below 15s you may get rate limits.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
880,885,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11207) camel-twitter - Default poll delay is 60s we can lower it to 30s,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067148.1493233557000.64390.1493285704338%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 09:35:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11207?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11207:&#010;--------------------------------&#010;    Summary: camel-twitter - Default poll delay is 60s we can lower it to 30s  (was: camel-twitter&#010;- Default poll delay is 60s we can lower it to 20s)&#010;&#010;&gt; camel-twitter - Default poll delay is 60s we can lower it to 30s&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11207&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11207&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-twitter&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Using 60s is maybe too slow. You can use 30s as a kinda safe lower value to avoid rate&#010;limits. If you go below 15s you may get rate limits.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
881,886,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11207) camel-twitter - Default poll delay is 60s we can lower it to 30s,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067148.1493233557000.64402.1493285884043%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 09:38:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11207?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11207.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;&gt; camel-twitter - Default poll delay is 60s we can lower it to 30s&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11207&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11207&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-twitter&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Using 60s is maybe too slow. You can use 30s as a kinda safe lower value to avoid rate&#010;limits. If you go below 15s you may get rate limits.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
882,887,,[jira] [Created] (CAMEL-11208) camel-swagger-java - Should use guava 20 and not 19,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067148.1493233557000.64402.1493285884043%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 09:38:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11207?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11207.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;&gt; camel-twitter - Default poll delay is 60s we can lower it to 30s&#010;&gt; ----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11207&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11207&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-twitter&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.20.0&#010;&gt;&#010;&gt;&#010;&gt; Using 60s is maybe too slow. You can use 30s as a kinda safe lower value to avoid rate&#010;limits. If you go below 15s you may get rate limits.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
883,888,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11208) camel-swagger-java - Should use guava 20 and not 19,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067296.1493283871000.64183.1493283904389%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 09:05:04 GMT","Claus Ibsen created CAMEL-11208:&#010;-----------------------------------&#010;&#010;             Summary: camel-swagger-java - Should use guava 20 and not 19&#010;                 Key: CAMEL-11208&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11208&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-swagger&#010;    Affects Versions: 2.19.0&#010;            Reporter: Claus Ibsen&#010;            Assignee: Claus Ibsen&#010;             Fix For: 2.20.0, 2.19.1&#010;&#010;&#010;The karaf feature uses the correct version 20, but the regular mvn project is on version 19.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
884,889,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11208) camel-swagger-java - Should use guava 20 and not 19,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067296.1493283871000.64364.1493285644277%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 09:34:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11208?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986269#comment-15986269&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11208:&#010;-------------------------------------&#010;&#010;Need to merge to 2.19.x branch when released&#010;&#010;&gt; camel-swagger-java - Should use guava 20 and not 19&#010;&gt; ---------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11208&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11208&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-swagger&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; The karaf feature uses the correct version 20, but the regular mvn project is on version&#010;19.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
885,890,,[jira] [Created] (CAMEL-11209) camel-core-starter - Should not have caffeine dependency,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067296.1493283871000.64364.1493285644277%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 09:34:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11208?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986269#comment-15986269&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11208:&#010;-------------------------------------&#010;&#010;Need to merge to 2.19.x branch when released&#010;&#010;&gt; camel-swagger-java - Should use guava 20 and not 19&#010;&gt; ---------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11208&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11208&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;          Components: camel-swagger&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; The karaf feature uses the correct version 20, but the regular mvn project is on version&#010;19.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
886,891,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11209) camel-core-starter - Should not have caffeine dependency,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067298.1493284598000.64257.1493284624259%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 09:17:04 GMT","Claus Ibsen created CAMEL-11209:&#010;-----------------------------------&#010;&#010;             Summary: camel-core-starter - Should not have caffeine dependency&#010;                 Key: CAMEL-11209&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11209&#010;             Project: Camel&#010;          Issue Type: Task&#010;          Components: camel-spring-boot-starters&#010;    Affects Versions: 2.19.0&#010;            Reporter: Claus Ibsen&#010;             Fix For: 2.20.0, 2.19.1&#010;&#010;&#010;[INFO] |  \- org.apache.camel:camel-core-starter:jar:2.20.0-SNAPSHOT:compile&#010;[INFO] |     \- com.github.ben-manes.caffeine:caffeine:jar:2.4.0:compile&#010;&#010;That is shaded in camel-core and should not be in the dependency tree.&#010;&#010;[~nferraro] can you look and fix this. Would be good to get done soon.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
887,892,Claus Ibsen (JIRA),  [jira] [Commented] (CAMEL-11209) camel-core-starter - Should not have caffeine dependency,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067298.1493284598000.64347.1493285344103%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 09:29:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11209?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986264#comment-15986264&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11209:&#010;-------------------------------------&#010;&#010;Found this in a properties file for the maven tooling&#010;&#010;# Caffeine in in camel-core but it is not being exported transitively&#010;# Adding the dependency here until we understand why&#010;# Cassandra (and others) fail without this dependency&#010;camel-core=com.github.ben-manes.caffeine:caffeine&#010;&#010;&gt; camel-core-starter - Should not have caffeine dependency&#010;&gt; --------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11209&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11209&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-spring-boot-starters&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; [INFO] |  \- org.apache.camel:camel-core-starter:jar:2.20.0-SNAPSHOT:compile&#010;&gt; [INFO] |     \- com.github.ben-manes.caffeine:caffeine:jar:2.4.0:compile&#010;&gt; That is shaded in camel-core and should not be in the dependency tree.&#010;&gt; [~nferraro] can you look and fix this. Would be good to get done soon.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
888,893,,[jira] [Created] (CAMEL-11210) Don't return null for getErrors in SalesforceException,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067298.1493284598000.64347.1493285344103%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 09:29:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11209?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986264#comment-15986264&#010;] &#010;&#010;Claus Ibsen commented on CAMEL-11209:&#010;-------------------------------------&#010;&#010;Found this in a properties file for the maven tooling&#010;&#010;# Caffeine in in camel-core but it is not being exported transitively&#010;# Adding the dependency here until we understand why&#010;# Cassandra (and others) fail without this dependency&#010;camel-core=com.github.ben-manes.caffeine:caffeine&#010;&#010;&gt; camel-core-starter - Should not have caffeine dependency&#010;&gt; --------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11209&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11209&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Task&#010;&gt;          Components: camel-spring-boot-starters&#010;&gt;    Affects Versions: 2.19.0&#010;&gt;            Reporter: Claus Ibsen&#010;&gt;             Fix For: 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; [INFO] |  \- org.apache.camel:camel-core-starter:jar:2.20.0-SNAPSHOT:compile&#010;&gt; [INFO] |     \- com.github.ben-manes.caffeine:caffeine:jar:2.4.0:compile&#010;&gt; That is shaded in camel-core and should not be in the dependency tree.&#010;&gt; [~nferraro] can you look and fix this. Would be good to get done soon.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
889,894,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11210) Don't return null for getErrors in SalesforceException,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067314.1493287327000.64576.1493287384068%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 10:03:04 GMT","Zoran Regvart created CAMEL-11210:&#010;-------------------------------------&#010;&#010;             Summary: Don't return null for getErrors in SalesforceException&#010;                 Key: CAMEL-11210&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11210&#010;             Project: Camel&#010;          Issue Type: Bug&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;            Priority: Minor&#010;             Fix For: 2.19.0, 2.19.1&#010;&#010;&#010;The {{SalesforceException::getErrors}} should not be returning {{null}} {{List&lt;RestError&gt;}}&#010;but an empty {{List}} if there {{errors}} field is {{null}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
890,895,Zoran Regvart (JIRA),  [jira] [Updated] (CAMEL-11210) Don't return null for getErrors in SalesforceException,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067314.1493287327000.65550.1493296144455%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 12:29:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11210?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart updated CAMEL-11210:&#010;----------------------------------&#010;    Component/s: camel-salesforce&#010;&#010;&gt; Don't return null for getErrors in SalesforceException&#010;&gt; ------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11210&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11210&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-salesforce&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; The {{SalesforceException::getErrors}} should not be returning {{null}} {{List&lt;RestError&gt;}}&#010;but an empty {{List}} if there {{errors}} field is {{null}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
891,896,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11210) Don't return null for getErrors in SalesforceException,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067314.1493287327000.80188.1493396104357%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 16:15:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11210?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11210.&#010;-----------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Don't return null for getErrors in SalesforceException&#010;&gt; ------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11210&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11210&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-salesforce&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The {{SalesforceException::getErrors}} should not be returning {{null}} {{List&lt;RestError&gt;}}&#010;but an empty {{List}} if there {{errors}} field is {{null}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
892,897,Zoran Regvart (JIRA),  [jira] [Updated] (CAMEL-11210) Don't return null for getErrors in SalesforceException,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067314.1493287327000.80187.1493396104349%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 16:15:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11210?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart updated CAMEL-11210:&#010;----------------------------------&#010;    Fix Version/s:     (was: 2.19.1)&#010;&#010;&gt; Don't return null for getErrors in SalesforceException&#010;&gt; ------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11210&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11210&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-salesforce&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The {{SalesforceException::getErrors}} should not be returning {{null}} {{List&lt;RestError&gt;}}&#010;but an empty {{List}} if there {{errors}} field is {{null}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
893,898,,[jira] [Created] (CAMEL-11211) Remove deprecated SpanManager from camel-opentracing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067314.1493287327000.80187.1493396104349%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 16:15:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11210?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart updated CAMEL-11210:&#010;----------------------------------&#010;    Fix Version/s:     (was: 2.19.1)&#010;&#010;&gt; Don't return null for getErrors in SalesforceException&#010;&gt; ------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11210&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11210&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-salesforce&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The {{SalesforceException::getErrors}} should not be returning {{null}} {{List&lt;RestError&gt;}}&#010;but an empty {{List}} if there {{errors}} field is {{null}}.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
894,899,Gary Brown (JIRA),  [jira] [Created] (CAMEL-11211) Remove deprecated SpanManager from camel-opentracing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067321.1493289693000.64737.1493289724021%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 10:42:04 GMT","Gary Brown created CAMEL-11211:&#010;----------------------------------&#010;&#010;             Summary: Remove deprecated SpanManager from camel-opentracing&#010;                 Key: CAMEL-11211&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11211&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;            Reporter: Gary Brown&#010;&#010;&#010;The current implementation uses the SpanManager from the opentracing-contrib org. Span management&#010;is currently being integrated more into the core opentracing-java APIs, and therefore would&#010;need to change in the near future.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
895,900,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11211) Remove deprecated SpanManager from camel-opentracing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067321.1493289693000.65101.1493292664067%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 11:31:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11211?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986397#comment-15986397&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11211:&#010;----------------------------------------&#010;&#010;GitHub user objectiser opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1664&#010;&#010;    CAMEL-11211 Remove the deprecated SpanManager, which uses threadlocal…&#010;&#010;    …, and instead just manage the spans within the exchanges&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/objectiser/camel otctx&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1664.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1664&#010;    &#010;----&#010;commit b12cbe7cf2865737ddbbe73f0eca3598f3d99ab7&#010;Author: Gary Brown &lt;gary@brownuk.com&gt;&#010;Date:   2017-04-27T10:42:22Z&#010;&#010;    CAMEL-11211 Remove the deprecated SpanManager, which uses threadlocal, and instead just&#010;manage the spans within the exchanges&#010;&#010;----&#010;&#010;&#010;&gt; Remove deprecated SpanManager from camel-opentracing&#010;&gt; ----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11211&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11211&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Gary Brown&#010;&gt;&#010;&gt; The current implementation uses the SpanManager from the opentracing-contrib org. Span&#010;management is currently being integrated more into the core opentracing-java APIs, and therefore&#010;would need to change in the near future.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
896,901,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11211) Remove deprecated SpanManager from camel-opentracing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067321.1493289693000.66128.1493299264329%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 13:21:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11211?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986603#comment-15986603&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11211:&#010;----------------------------------------&#010;&#010;Github user objectiser closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1664&#010;&#010;&#010;&gt; Remove deprecated SpanManager from camel-opentracing&#010;&gt; ----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11211&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11211&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Gary Brown&#010;&gt;&#010;&gt; The current implementation uses the SpanManager from the opentracing-contrib org. Span&#010;management is currently being integrated more into the core opentracing-java APIs, and therefore&#010;would need to change in the near future.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
897,902,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11211) Remove deprecated SpanManager from camel-opentracing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067321.1493289693000.75477.1493359924291%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 06:12:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11211?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11211.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;Thanks for the PR&#010;&#010;&gt; Remove deprecated SpanManager from camel-opentracing&#010;&gt; ----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11211&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11211&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Gary Brown&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The current implementation uses the SpanManager from the opentracing-contrib org. Span&#010;management is currently being integrated more into the core opentracing-java APIs, and therefore&#010;would need to change in the near future.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
898,903,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11211) Remove deprecated SpanManager from camel-opentracing,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067321.1493289693000.75474.1493359924268%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 06:12:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11211?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11211:&#010;--------------------------------&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Remove deprecated SpanManager from camel-opentracing&#010;&gt; ----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11211&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11211&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Gary Brown&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The current implementation uses the SpanManager from the opentracing-contrib org. Span&#010;management is currently being integrated more into the core opentracing-java APIs, and therefore&#010;would need to change in the near future.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
899,904,,[jira] [Created] (CAMEL-11212) Don't allow Salesforce HTTP client to stop with outstanding requests,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067321.1493289693000.75474.1493359924268%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 06:12:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11211?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11211:&#010;--------------------------------&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; Remove deprecated SpanManager from camel-opentracing&#010;&gt; ----------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11211&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11211&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Improvement&#010;&gt;            Reporter: Gary Brown&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The current implementation uses the SpanManager from the opentracing-contrib org. Span&#010;management is currently being integrated more into the core opentracing-java APIs, and therefore&#010;would need to change in the near future.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
900,905,Zoran Regvart (JIRA),  [jira] [Created] (CAMEL-11212) Don't allow Salesforce HTTP client to stop with outstanding requests,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067352.1493296443000.65667.1493296445069%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 12:34:05 GMT","Zoran Regvart created CAMEL-11212:&#010;-------------------------------------&#010;&#010;             Summary: Don't allow Salesforce HTTP client to stop with outstanding requests&#010;                 Key: CAMEL-11212&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11212&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-salesforce&#010;            Reporter: Zoran Regvart&#010;            Assignee: Zoran Regvart&#010;             Fix For: 2.20.0, 2.19.1&#010;&#010;&#010;The Salesforce component uses Jetty asynchronous client throughout. There is a race condition&#010;that might occur if the component's HTTP client is stopped while one or more requests are&#010;still in progress. The result of which could be inconsistencies in execution.&#010;This was seen in the implementation of the connectivity validation in the ping check which&#010;creates the {{SalesforceHttpClient}} and {{DefaultRestClient}} and starts/stops then in a&#010;small time frame.&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
901,906,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11212) Don't allow Salesforce HTTP client to stop with outstanding requests,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067352.1493296443000.65715.1493296984319%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 12:43:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11212?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986528#comment-15986528&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11212:&#010;----------------------------------------&#010;&#010;GitHub user zregvart opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1666&#010;&#010;    CAMEL-11212 Don't allow Salesforce HTTP client to stop with outstanding requests&#010;&#010;    Submitted for review, it seems trivial but could have repercussions if I missed the locking&#010;semantics.&#010;    Thank you for taking a look ðŸ¥‡  &#010;    &#010;    This introduces a `Phaser` to await for any in-flight requests to complete before the&#010;client is allowed to stop.&#010;    &#010;    This should not block as long as the `BufferingResponseListener::onComplete` is invoked&#010;at the end of every request. And that is guaranteed by the `CompleteListener::onComplete`&#010;contract.&#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/zregvart/camel CAMEL-11212&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1666.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1666&#010;    &#010;----&#010;commit e5b137d4b2ec9371a6f8a0a7fca3849730127302&#010;Author: Zoran Regvart &lt;zregvart@apache.org&gt;&#010;Date:   2017-04-27T12:40:18Z&#010;&#010;    CAMEL-11212 Don't allow Salesforce HTTP client ...&#010;    &#010;    ...to stop with outstanding requests&#010;    &#010;    This introduces a `Phaser` to await for any in-flight requests to&#010;    complete before the client is allowed to stop.&#010;    &#010;    This should not block as long as the&#010;    `BufferingResponseListener::onComplete` is invoked at the end of every&#010;    request. And that is guaranteed by the `CompleteListener::onComplete`&#010;    contract.&#010;&#010;----&#010;&#010;&#010;&gt; Don't allow Salesforce HTTP client to stop with outstanding requests&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11212&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11212&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-salesforce&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; The Salesforce component uses Jetty asynchronous client throughout. There is a race condition&#010;that might occur if the component's HTTP client is stopped while one or more requests are&#010;still in progress. The result of which could be inconsistencies in execution.&#010;&gt; This was seen in the implementation of the connectivity validation in the ping check&#010;which creates the {{SalesforceHttpClient}} and {{DefaultRestClient}} and starts/stops then&#010;in a small time frame.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
902,907,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11212) Don't allow Salesforce HTTP client to stop with outstanding requests,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067352.1493296443000.80007.1493395024819%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 15:57:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11212?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15989064#comment-15989064&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11212:&#010;----------------------------------------&#010;&#010;Github user zregvart closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1666&#010;&#010;&#010;&gt; Don't allow Salesforce HTTP client to stop with outstanding requests&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11212&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11212&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-salesforce&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.20.0, 2.19.1&#010;&gt;&#010;&gt;&#010;&gt; The Salesforce component uses Jetty asynchronous client throughout. There is a race condition&#010;that might occur if the component's HTTP client is stopped while one or more requests are&#010;still in progress. The result of which could be inconsistencies in execution.&#010;&gt; This was seen in the implementation of the connectivity validation in the ping check&#010;which creates the {{SalesforceHttpClient}} and {{DefaultRestClient}} and starts/stops then&#010;in a small time frame.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
903,908,Zoran Regvart (JIRA),  [jira] [Updated] (CAMEL-11212) Don't allow Salesforce HTTP client to stop with outstanding requests,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067352.1493296443000.80074.1493395264316%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 16:01:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11212?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart updated CAMEL-11212:&#010;----------------------------------&#010;    Fix Version/s:     (was: 2.19.1)&#010;                       (was: 2.20.0)&#010;                   2.19.0&#010;&#010;&gt; Don't allow Salesforce HTTP client to stop with outstanding requests&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11212&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11212&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-salesforce&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The Salesforce component uses Jetty asynchronous client throughout. There is a race condition&#010;that might occur if the component's HTTP client is stopped while one or more requests are&#010;still in progress. The result of which could be inconsistencies in execution.&#010;&gt; This was seen in the implementation of the connectivity validation in the ping check&#010;which creates the {{SalesforceHttpClient}} and {{DefaultRestClient}} and starts/stops then&#010;in a small time frame.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
904,909,Zoran Regvart (JIRA),  [jira] [Resolved] (CAMEL-11212) Don't allow Salesforce HTTP client to stop with outstanding requests,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067352.1493296443000.80086.1493395324204%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 16:02:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11212?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11212.&#010;-----------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Don't allow Salesforce HTTP client to stop with outstanding requests&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11212&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11212&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-salesforce&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The Salesforce component uses Jetty asynchronous client throughout. There is a race condition&#010;that might occur if the component's HTTP client is stopped while one or more requests are&#010;still in progress. The result of which could be inconsistencies in execution.&#010;&gt; This was seen in the implementation of the connectivity validation in the ping check&#010;which creates the {{SalesforceHttpClient}} and {{DefaultRestClient}} and starts/stops then&#010;in a small time frame.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
905,910,,[jira] [Created] (CAMEL-11213) camel-grpc doesn't terminate channel when producer stops,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067352.1493296443000.80086.1493395324204%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 16:02:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11212?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Zoran Regvart resolved CAMEL-11212.&#010;-----------------------------------&#010;    Resolution: Fixed&#010;&#010;&gt; Don't allow Salesforce HTTP client to stop with outstanding requests&#010;&gt; --------------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11212&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11212&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-salesforce&#010;&gt;            Reporter: Zoran Regvart&#010;&gt;            Assignee: Zoran Regvart&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&gt; The Salesforce component uses Jetty asynchronous client throughout. There is a race condition&#010;that might occur if the component's HTTP client is stopped while one or more requests are&#010;still in progress. The result of which could be inconsistencies in execution.&#010;&gt; This was seen in the implementation of the connectivity validation in the ping check&#010;which creates the {{SalesforceHttpClient}} and {{DefaultRestClient}} and starts/stops then&#010;in a small time frame.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
906,911,Dmitry Volodin (JIRA),  [jira] [Created] (CAMEL-11213) camel-grpc doesn't terminate channel when producer stops,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067397.1493302941000.66698.1493302984101%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 14:23:04 GMT",Dmitry Volodin created CAMEL-11213:&#010;--------------------------------------&#010;&#010;             Summary: camel-grpc doesn't terminate channel when producer stops &#010;                 Key: CAMEL-11213&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11213&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-grpc&#010;            Reporter: Dmitry Volodin&#010;            Priority: Minor&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
907,912,Dmitry Volodin (JIRA),  [jira] [Commented] (CAMEL-11213) camel-grpc doesn't terminate channel when producer stops,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067397.1493302941000.66724.1493303344145%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 14:29:04 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11213?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986712#comment-15986712&#010;] &#010;&#010;Dmitry Volodin commented on CAMEL-11213:&#010;----------------------------------------&#010;&#010;This can cause memory leaks&#010;&#010;&gt; camel-grpc doesn't terminate channel when producer stops &#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11213&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11213&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-grpc&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;            Priority: Minor&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
908,913,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11213) camel-grpc doesn't terminate channel when producer stops,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067397.1493302941000.66751.1493303524370%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 14:32:04 GMT","&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11213?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986724#comment-15986724&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11213:&#010;----------------------------------------&#010;&#010;GitHub user dmvolod opened a pull request:&#010;&#010;    https://github.com/apache/camel/pull/1667&#010;&#010;    CAMEL-11213: camel-grpc doesn't terminate channel when producer stops&#010;&#010;    &#010;&#010;You can merge this pull request into a Git repository by running:&#010;&#010;    $ git pull https://github.com/dmvolod/camel CAMEL-11213&#010;&#010;Alternatively you can review and apply these changes as the patch at:&#010;&#010;    https://github.com/apache/camel/pull/1667.patch&#010;&#010;To close this pull request, make a commit to your master/trunk branch&#010;with (at least) the following in the commit message:&#010;&#010;    This closes #1667&#010;    &#010;----&#010;&#010;----&#010;&#010;&#010;&gt; camel-grpc doesn't terminate channel when producer stops &#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11213&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11213&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-grpc&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;            Priority: Minor&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
909,914,ASF GitHub Bot (JIRA),  [jira] [Commented] (CAMEL-11213) camel-grpc doesn't terminate channel when producer stops,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067397.1493302941000.66850.1493304004212%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 14:40:04 GMT",&#010;    [ https://issues.apache.org/jira/browse/CAMEL-11213?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=15986745#comment-15986745&#010;] &#010;&#010;ASF GitHub Bot commented on CAMEL-11213:&#010;----------------------------------------&#010;&#010;Github user dmvolod closed the pull request at:&#010;&#010;    https://github.com/apache/camel/pull/1667&#010;&#010;&#010;&gt; camel-grpc doesn't terminate channel when producer stops &#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11213&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11213&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-grpc&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;            Priority: Minor&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
910,915,Claus Ibsen (JIRA),  [jira] [Updated] (CAMEL-11213) camel-grpc doesn't terminate channel when producer stops,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067397.1493302941000.75480.1493359924313%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 06:12:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11213?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen updated CAMEL-11213:&#010;--------------------------------&#010;    Fix Version/s: 2.19.0&#010;&#010;&gt; camel-grpc doesn't terminate channel when producer stops &#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11213&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11213&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-grpc&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
911,916,Claus Ibsen (JIRA),  [jira] [Resolved] (CAMEL-11213) camel-grpc doesn't terminate channel when producer stops,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067397.1493302941000.75483.1493359924334%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 06:12:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11213?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11213.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;Thanks for the PR&#010;&#010;&gt; camel-grpc doesn't terminate channel when producer stops &#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11213&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11213&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-grpc&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
912,917,,[jira] [Created] (CAMEL-11214) FluentProducerTemplate - Should allow non default uri,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067397.1493302941000.75483.1493359924334%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 06:12:04 GMT",&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11213?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Claus Ibsen resolved CAMEL-11213.&#010;---------------------------------&#010;    Resolution: Fixed&#010;      Assignee: Claus Ibsen&#010;&#010;Thanks for the PR&#010;&#010;&gt; camel-grpc doesn't terminate channel when producer stops &#010;&gt; ---------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11213&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11213&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-grpc&#010;&gt;            Reporter: Dmitry Volodin&#010;&gt;            Assignee: Claus Ibsen&#010;&gt;            Priority: Minor&#010;&gt;             Fix For: 2.19.0&#010;&gt;&#010;&gt;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
913,918,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11214) FluentProducerTemplate - Should allow non default uri,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067471.1493318387000.69593.1493318404705%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 18:40:04 GMT","Claus Ibsen created CAMEL-11214:&#010;-----------------------------------&#010;&#010;             Summary: FluentProducerTemplate - Should allow non default uri&#010;                 Key: CAMEL-11214&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11214&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;    Affects Versions: 2.19.0&#010;            Reporter: Claus Ibsen&#010;&#010;&#010;You get&#010;&#010;Caused by: org.apache.camel.spring.GenericBeansException: Error post processing bean: geoRestController;&#010;nested exception is java.lang.NullPointerException&#010;&#009;at org.apache.camel.spring.CamelBeanPostProcessor.postProcessBeforeInitialization(CamelBeanPostProcessor.java:159)&#010;&#009;at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:409)&#010;&#009;at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1620)&#010;&#009;at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)&#010;&#009;... 21 more&#010;Caused by: java.lang.NullPointerException&#010;&#009;at java.util.Objects.requireNonNull(Objects.java:203)&#010;&#009;at java.util.Optional.&lt;init&gt;(Optional.java:96)&#010;&#009;at java.util.Optional.of(Optional.java:108)&#010;&#009;at org.apache.camel.builder.DefaultFluentProducerTemplate.setDefaultEndpoint(DefaultFluentProducerTemplate.java:103)&#010;&#009;at org.apache.camel.impl.CamelPostProcessorHelper.createInjectionFluentProducerTemplate(CamelPostProcessorHelper.java:333)&#010;&#009;at org.apache.camel.impl.CamelPostProcessorHelper.getInjectionValue(CamelPostProcessorHelper.java:224)&#010;&#009;at org.apache.camel.impl.DefaultCamelBeanPostProcessor.injectField(DefaultCamelBeanPostProcessor.java:200)&#010;&#009;at org.apache.camel.impl.DefaultCamelBeanPostProcessor.injectField(DefaultCamelBeanPostProcessor.java:194)&#010;&#009;at org.apache.camel.impl.DefaultCamelBeanPostProcessor$1.doWith(DefaultCamelBeanPostProcessor.java:181)&#010;&#009;at org.apache.camel.util.ReflectionHelper.doWithFields(ReflectionHelper.java:73)&#010;&#009;at org.apache.camel.impl.DefaultCamelBeanPostProcessor.injectFields(DefaultCamelBeanPostProcessor.java:167)&#010;&#009;at org.apache.camel.impl.DefaultCamelBeanPostProcessor.postProcessBeforeInitialization(DefaultCamelBeanPostProcessor.java:82)&#010;&#009;at org.apache.camel.spring.CamelBeanPostProcessor.postProcessBeforeInitialization(CamelBeanPostProcessor.java:153)&#010;&#009;... 24 more&#010;&#010;If you just have&#010;&#010;    @EndpointInject&#010;    private FluentProducerTemplate template;&#010;&#010;So you need to set some dummy uri&#010;&#010;    @EndpointInject(uri = ""log:foo"")&#010;    private FluentProducerTemplate template;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
914,919,,[jira] [Created] (CAMEL-11215) Camel Kafka component commits offsets in case of exceptions,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067471.1493318387000.69593.1493318404705%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 18:40:04 GMT","Claus Ibsen created CAMEL-11214:&#010;-----------------------------------&#010;&#010;             Summary: FluentProducerTemplate - Should allow non default uri&#010;                 Key: CAMEL-11214&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11214&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;    Affects Versions: 2.19.0&#010;            Reporter: Claus Ibsen&#010;&#010;&#010;You get&#010;&#010;Caused by: org.apache.camel.spring.GenericBeansException: Error post processing bean: geoRestController;&#010;nested exception is java.lang.NullPointerException&#010;&#009;at org.apache.camel.spring.CamelBeanPostProcessor.postProcessBeforeInitialization(CamelBeanPostProcessor.java:159)&#010;&#009;at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:409)&#010;&#009;at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1620)&#010;&#009;at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)&#010;&#009;... 21 more&#010;Caused by: java.lang.NullPointerException&#010;&#009;at java.util.Objects.requireNonNull(Objects.java:203)&#010;&#009;at java.util.Optional.&lt;init&gt;(Optional.java:96)&#010;&#009;at java.util.Optional.of(Optional.java:108)&#010;&#009;at org.apache.camel.builder.DefaultFluentProducerTemplate.setDefaultEndpoint(DefaultFluentProducerTemplate.java:103)&#010;&#009;at org.apache.camel.impl.CamelPostProcessorHelper.createInjectionFluentProducerTemplate(CamelPostProcessorHelper.java:333)&#010;&#009;at org.apache.camel.impl.CamelPostProcessorHelper.getInjectionValue(CamelPostProcessorHelper.java:224)&#010;&#009;at org.apache.camel.impl.DefaultCamelBeanPostProcessor.injectField(DefaultCamelBeanPostProcessor.java:200)&#010;&#009;at org.apache.camel.impl.DefaultCamelBeanPostProcessor.injectField(DefaultCamelBeanPostProcessor.java:194)&#010;&#009;at org.apache.camel.impl.DefaultCamelBeanPostProcessor$1.doWith(DefaultCamelBeanPostProcessor.java:181)&#010;&#009;at org.apache.camel.util.ReflectionHelper.doWithFields(ReflectionHelper.java:73)&#010;&#009;at org.apache.camel.impl.DefaultCamelBeanPostProcessor.injectFields(DefaultCamelBeanPostProcessor.java:167)&#010;&#009;at org.apache.camel.impl.DefaultCamelBeanPostProcessor.postProcessBeforeInitialization(DefaultCamelBeanPostProcessor.java:82)&#010;&#009;at org.apache.camel.spring.CamelBeanPostProcessor.postProcessBeforeInitialization(CamelBeanPostProcessor.java:153)&#010;&#009;... 24 more&#010;&#010;If you just have&#010;&#010;    @EndpointInject&#010;    private FluentProducerTemplate template;&#010;&#010;So you need to set some dummy uri&#010;&#010;    @EndpointInject(uri = ""log:foo"")&#010;    private FluentProducerTemplate template;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
915,920,Roger (JIRA),  [jira] [Created] (CAMEL-11215) Camel Kafka component commits offsets in case of exceptions,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067537.1493330222000.72529.1493330224261%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 21:57:04 GMT","Roger created CAMEL-11215:&#010;-----------------------------&#010;&#010;             Summary: Camel Kafka component commits offsets in case of exceptions&#010;                 Key: CAMEL-11215&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11215&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-kafka&#010;    Affects Versions: 2.18.3&#010;            Reporter: Roger&#010;&#010;&#010;My processor in the router throws an exception but the Kafka component still commits the offsets.&#010;&#010;&#010;My route: (heavily redacted and modified)&#010;from( ""kafka://blah-blah"" ).routeId(""MyRoute"")&#010;                .convertBodyTo( MyData.class )&#010;                .process( ""MyProcessor"" )&#010;                .to( ""DestinationProcessor"" );&#010;&#010;The exception I get: &#010;        at com.mycompany.MyProcessor.process(MyProcessor.java:152)&#010;        at org.apache.camel.impl.ProcessorEndpoint.onExchange(ProcessorEndpoint.java:103)&#010;        at org.apache.camel.impl.ProcessorEndpoint$1.process(ProcessorEndpoint.java:71)&#010;        at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)&#010;        at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;        at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;        at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;        at org.apache.camel.processor.ChoiceProcessor.process(ChoiceProcessor.java:117)&#010;        at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;        at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;        at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;        at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:97)&#010;        at org.apache.camel.component.kafka.KafkaConsumer$KafkaFetchRecords.run(KafkaConsumer.java:140)&#010;        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#010;        at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;        at java.lang.Thread.run(Thread.java:745)&#010;Caused by: java.sql.SQLException: Exception occurred while getting connection: oracle.ucp.UniversalConnectionPoolException:&#010;Cannot get Connection from Datasource: java.sql.SQLException: Listener refused the connection&#010;with the following error:&#010;ORA-12514, TNS:listener does not currently know of service requested in connect descriptor&#010;&#010;Here is the corresponding Kafka component code:(KafkaConsumer.java) -This part of the code&#010;does not seem to handle the exception. The exception handler simply eats up the exception&#010;and the fall through code happily commits the offsets. Is this a bug? or am I missing something?&#010;&#010;while (isRunAllowed() &amp;&amp; !isStoppingOrStopped() &amp;&amp; !isSuspendingOrSuspended())&#010;{&#010;                    ConsumerRecords&lt;Object, Object&gt; allRecords = consumer.poll(pollTimeoutMs);&#010;                    for (TopicPartition partition : allRecords.partitions()) {&#010;                        List&lt;ConsumerRecord&lt;Object, Object&gt;&gt; partitionRecords&#010;= allRecords&#010;                            .records(partition);&#010;                        for (ConsumerRecord&lt;Object, Object&gt; record : partitionRecords)&#010;{&#010;                            if (LOG.isTraceEnabled()) {&#010;                                LOG.trace(""partition = {}, offset = {}, key = {}, value =&#010;{}"", record.partition(), record.offset(), record.key(), record.value());&#010;                            }&#010;                            Exchange exchange = endpoint.createKafkaExchange(record);&#010;                            try {&#010;                                processor.process(exchange);&#010;                            } catch (Exception e) {&#010;                                getExceptionHandler().handleException(""Error during processing"",&#010;exchange, e);&#010;                            }&#010;                        }&#010;                        // if autocommit is false&#010;                        if (endpoint.getConfiguration().isAutoCommitEnable() != null&#010;                            &amp;&amp; !endpoint.getConfiguration().isAutoCommitEnable())&#010;{&#010;                            long partitionLastoffset = partitionRecords.get(partitionRecords.size()&#010;- 1).offset();&#010;                            consumer.commitSync(Collections.singletonMap(&#010;                                partition, new OffsetAndMetadata(partitionLastoffset + 1)));&#010;                        }&#010;                    }&#010;                }&#010;&#010;Any insights are appreciated.&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
916,921,Roger (JIRA),  [jira] [Updated] (CAMEL-11215) Camel Kafka component commits offsets in case of exceptions,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067537.1493330222000.72558.1493330524063%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 22:02:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11215?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Roger updated CAMEL-11215:&#010;--------------------------&#010;    Description: &#010;My processor in the router throws an exception but the Kafka component still commits the offsets.&#010;&#010;&#010;My route: (heavily redacted and modified)&#010;{code:title=Route|borderStyle=solid}&#010;from( ""kafka://blah-blah"" ).routeId(""MyRoute"")&#010;                .convertBodyTo( MyData.class )&#010;                .process( ""MyProcessor"" )&#010;                .to( ""DestinationProcessor"" );&#010;{code}&#010;The exception I get: &#010;{code:title=Exception|borderStyle=solid}&#010;        at com.mycompany.MyProcessor.process(MyProcessor.java:152)&#010;        at org.apache.camel.impl.ProcessorEndpoint.onExchange(ProcessorEndpoint.java:103)&#010;        at org.apache.camel.impl.ProcessorEndpoint$1.process(ProcessorEndpoint.java:71)&#010;        at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)&#010;        at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;        at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;        at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;        at org.apache.camel.processor.ChoiceProcessor.process(ChoiceProcessor.java:117)&#010;        at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;        at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;        at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;        at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:97)&#010;        at org.apache.camel.component.kafka.KafkaConsumer$KafkaFetchRecords.run(KafkaConsumer.java:140)&#010;        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#010;        at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;        at java.lang.Thread.run(Thread.java:745)&#010;Caused by: java.sql.SQLException: Exception occurred while getting connection: oracle.ucp.UniversalConnectionPoolException:&#010;Cannot get Connection from Datasource: java.sql.SQLException: Listener refused the connection&#010;with the following error:&#010;ORA-12514, TNS:listener does not currently know of service requested in connect descriptor&#010;{code}&#010;Here is the corresponding Kafka component code:(KafkaConsumer.java) -This part of the code&#010;does not seem to handle the exception. The exception handler simply eats up the exception&#010;and the fall through code happily commits the offsets. Is this a bug? or am I missing something?&#010;&#010;{code:title=KafkaConsumer.java|borderStyle=solid}&#010;while (isRunAllowed() &amp;&amp; !isStoppingOrStopped() &amp;&amp; !isSuspendingOrSuspended())&#010;{&#010;                    ConsumerRecords&lt;Object, Object&gt; allRecords = consumer.poll(pollTimeoutMs);&#010;                    for (TopicPartition partition : allRecords.partitions()) {&#010;                        List&lt;ConsumerRecord&lt;Object, Object&gt;&gt; partitionRecords&#010;= allRecords&#010;                            .records(partition);&#010;                        for (ConsumerRecord&lt;Object, Object&gt; record : partitionRecords)&#010;{&#010;                            if (LOG.isTraceEnabled()) {&#010;                                LOG.trace(""partition = {}, offset = {}, key = {}, value =&#010;{}"", record.partition(), record.offset(), record.key(), record.value());&#010;                            }&#010;                            Exchange exchange = endpoint.createKafkaExchange(record);&#010;                            try {&#010;                                processor.process(exchange);&#010;                            } catch (Exception e) {&#010;                                getExceptionHandler().handleException(""Error during processing"",&#010;exchange, e);&#010;                            }&#010;                        }&#010;                        // if autocommit is false&#010;                        if (endpoint.getConfiguration().isAutoCommitEnable() != null&#010;                            &amp;&amp; !endpoint.getConfiguration().isAutoCommitEnable())&#010;{&#010;                            long partitionLastoffset = partitionRecords.get(partitionRecords.size()&#010;- 1).offset();&#010;                            consumer.commitSync(Collections.singletonMap(&#010;                                partition, new OffsetAndMetadata(partitionLastoffset + 1)));&#010;                        }&#010;                    }&#010;                }&#010;{code}&#010;&#010;Any insights are appreciated.&#010;&#010;&#010;  was:&#010;My processor in the router throws an exception but the Kafka component still commits the offsets.&#010;&#010;&#010;My route: (heavily redacted and modified)&#010;from( ""kafka://blah-blah"" ).routeId(""MyRoute"")&#010;                .convertBodyTo( MyData.class )&#010;                .process( ""MyProcessor"" )&#010;                .to( ""DestinationProcessor"" );&#010;&#010;The exception I get: &#010;        at com.mycompany.MyProcessor.process(MyProcessor.java:152)&#010;        at org.apache.camel.impl.ProcessorEndpoint.onExchange(ProcessorEndpoint.java:103)&#010;        at org.apache.camel.impl.ProcessorEndpoint$1.process(ProcessorEndpoint.java:71)&#010;        at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)&#010;        at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;        at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;        at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;        at org.apache.camel.processor.ChoiceProcessor.process(ChoiceProcessor.java:117)&#010;        at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;        at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;        at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;        at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:97)&#010;        at org.apache.camel.component.kafka.KafkaConsumer$KafkaFetchRecords.run(KafkaConsumer.java:140)&#010;        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#010;        at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;        at java.lang.Thread.run(Thread.java:745)&#010;Caused by: java.sql.SQLException: Exception occurred while getting connection: oracle.ucp.UniversalConnectionPoolException:&#010;Cannot get Connection from Datasource: java.sql.SQLException: Listener refused the connection&#010;with the following error:&#010;ORA-12514, TNS:listener does not currently know of service requested in connect descriptor&#010;&#010;Here is the corresponding Kafka component code:(KafkaConsumer.java) -This part of the code&#010;does not seem to handle the exception. The exception handler simply eats up the exception&#010;and the fall through code happily commits the offsets. Is this a bug? or am I missing something?&#010;&#010;while (isRunAllowed() &amp;&amp; !isStoppingOrStopped() &amp;&amp; !isSuspendingOrSuspended())&#010;{&#010;                    ConsumerRecords&lt;Object, Object&gt; allRecords = consumer.poll(pollTimeoutMs);&#010;                    for (TopicPartition partition : allRecords.partitions()) {&#010;                        List&lt;ConsumerRecord&lt;Object, Object&gt;&gt; partitionRecords&#010;= allRecords&#010;                            .records(partition);&#010;                        for (ConsumerRecord&lt;Object, Object&gt; record : partitionRecords)&#010;{&#010;                            if (LOG.isTraceEnabled()) {&#010;                                LOG.trace(""partition = {}, offset = {}, key = {}, value =&#010;{}"", record.partition(), record.offset(), record.key(), record.value());&#010;                            }&#010;                            Exchange exchange = endpoint.createKafkaExchange(record);&#010;                            try {&#010;                                processor.process(exchange);&#010;                            } catch (Exception e) {&#010;                                getExceptionHandler().handleException(""Error during processing"",&#010;exchange, e);&#010;                            }&#010;                        }&#010;                        // if autocommit is false&#010;                        if (endpoint.getConfiguration().isAutoCommitEnable() != null&#010;                            &amp;&amp; !endpoint.getConfiguration().isAutoCommitEnable())&#010;{&#010;                            long partitionLastoffset = partitionRecords.get(partitionRecords.size()&#010;- 1).offset();&#010;                            consumer.commitSync(Collections.singletonMap(&#010;                                partition, new OffsetAndMetadata(partitionLastoffset + 1)));&#010;                        }&#010;                    }&#010;                }&#010;&#010;Any insights are appreciated.&#010;&#010;&#010;&#010;&gt; Camel Kafka component commits offsets in case of exceptions&#010;&gt; -----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11215&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11215&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-kafka&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Roger&#010;&gt;&#010;&gt; My processor in the router throws an exception but the Kafka component still commits&#010;the offsets. &#010;&gt; My route: (heavily redacted and modified)&#010;&gt; {code:title=Route|borderStyle=solid}&#010;&gt; from( ""kafka://blah-blah"" ).routeId(""MyRoute"")&#010;&gt;                 .convertBodyTo( MyData.class )&#010;&gt;                 .process( ""MyProcessor"" )&#010;&gt;                 .to( ""DestinationProcessor"" );&#010;&gt; {code}&#010;&gt; The exception I get: &#010;&gt; {code:title=Exception|borderStyle=solid}&#010;&gt;         at com.mycompany.MyProcessor.process(MyProcessor.java:152)&#010;&gt;         at org.apache.camel.impl.ProcessorEndpoint.onExchange(ProcessorEndpoint.java:103)&#010;&gt;         at org.apache.camel.impl.ProcessorEndpoint$1.process(ProcessorEndpoint.java:71)&#010;&gt;         at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)&#010;&gt;         at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;&gt;         at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt;         at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt;         at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt;         at org.apache.camel.processor.ChoiceProcessor.process(ChoiceProcessor.java:117)&#010;&gt;         at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt;         at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt;         at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt;         at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt;         at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt;         at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt;         at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:97)&#010;&gt;         at org.apache.camel.component.kafka.KafkaConsumer$KafkaFetchRecords.run(KafkaConsumer.java:140)&#010;&gt;         at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#010;&gt;         at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;&gt;         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt;         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt;         at java.lang.Thread.run(Thread.java:745)&#010;&gt; Caused by: java.sql.SQLException: Exception occurred while getting connection: oracle.ucp.UniversalConnectionPoolException:&#010;Cannot get Connection from Datasource: java.sql.SQLException: Listener refused the connection&#010;with the following error:&#010;&gt; ORA-12514, TNS:listener does not currently know of service requested in connect descriptor&#010;&gt; {code}&#010;&gt; Here is the corresponding Kafka component code:(KafkaConsumer.java) -This part of the&#010;code does not seem to handle the exception. The exception handler simply eats up the exception&#010;and the fall through code happily commits the offsets. Is this a bug? or am I missing something?&#010;&gt; {code:title=KafkaConsumer.java|borderStyle=solid}&#010;&gt; while (isRunAllowed() &amp;&amp; !isStoppingOrStopped() &amp;&amp; !isSuspendingOrSuspended())&#010;{&#010;&gt;                     ConsumerRecords&lt;Object, Object&gt; allRecords = consumer.poll(pollTimeoutMs);&#010;&gt;                     for (TopicPartition partition : allRecords.partitions()) {&#010;&gt;                         List&lt;ConsumerRecord&lt;Object, Object&gt;&gt; partitionRecords&#010;= allRecords&#010;&gt;                             .records(partition);&#010;&gt;                         for (ConsumerRecord&lt;Object, Object&gt; record : partitionRecords)&#010;{&#010;&gt;                             if (LOG.isTraceEnabled()) {&#010;&gt;                                 LOG.trace(""partition = {}, offset = {}, key = {}, value&#010;= {}"", record.partition(), record.offset(), record.key(), record.value());&#010;&gt;                             }&#010;&gt;                             Exchange exchange = endpoint.createKafkaExchange(record);&#010;&gt;                             try {&#010;&gt;                                 processor.process(exchange);&#010;&gt;                             } catch (Exception e) {&#010;&gt;                                 getExceptionHandler().handleException(""Error during processing"",&#010;exchange, e);&#010;&gt;                             }&#010;&gt;                         }&#010;&gt;                         // if autocommit is false&#010;&gt;                         if (endpoint.getConfiguration().isAutoCommitEnable() != null&#010;&gt;                             &amp;&amp; !endpoint.getConfiguration().isAutoCommitEnable())&#010;{&#010;&gt;                             long partitionLastoffset = partitionRecords.get(partitionRecords.size()&#010;- 1).offset();&#010;&gt;                             consumer.commitSync(Collections.singletonMap(&#010;&gt;                                 partition, new OffsetAndMetadata(partitionLastoffset&#010;+ 1)));&#010;&gt;                         }&#010;&gt;                     }&#010;&gt;                 }&#010;&gt; {code}&#010;&gt; Any insights are appreciated.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
917,922,,[jira] [Created] (CAMEL-11216) REST-DSL - Producer fails with NPE or other exceptions if you have not set a hostname,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067537.1493330222000.72558.1493330524063%40Atlassian.JIRA%3E,issues,"Thu, 27 Apr 2017 22:02:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11215?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Roger updated CAMEL-11215:&#010;--------------------------&#010;    Description: &#010;My processor in the router throws an exception but the Kafka component still commits the offsets.&#010;&#010;&#010;My route: (heavily redacted and modified)&#010;{code:title=Route|borderStyle=solid}&#010;from( ""kafka://blah-blah"" ).routeId(""MyRoute"")&#010;                .convertBodyTo( MyData.class )&#010;                .process( ""MyProcessor"" )&#010;                .to( ""DestinationProcessor"" );&#010;{code}&#010;The exception I get: &#010;{code:title=Exception|borderStyle=solid}&#010;        at com.mycompany.MyProcessor.process(MyProcessor.java:152)&#010;        at org.apache.camel.impl.ProcessorEndpoint.onExchange(ProcessorEndpoint.java:103)&#010;        at org.apache.camel.impl.ProcessorEndpoint$1.process(ProcessorEndpoint.java:71)&#010;        at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)&#010;        at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;        at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;        at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;        at org.apache.camel.processor.ChoiceProcessor.process(ChoiceProcessor.java:117)&#010;        at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;        at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;        at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;        at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:97)&#010;        at org.apache.camel.component.kafka.KafkaConsumer$KafkaFetchRecords.run(KafkaConsumer.java:140)&#010;        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#010;        at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;        at java.lang.Thread.run(Thread.java:745)&#010;Caused by: java.sql.SQLException: Exception occurred while getting connection: oracle.ucp.UniversalConnectionPoolException:&#010;Cannot get Connection from Datasource: java.sql.SQLException: Listener refused the connection&#010;with the following error:&#010;ORA-12514, TNS:listener does not currently know of service requested in connect descriptor&#010;{code}&#010;Here is the corresponding Kafka component code:(KafkaConsumer.java) -This part of the code&#010;does not seem to handle the exception. The exception handler simply eats up the exception&#010;and the fall through code happily commits the offsets. Is this a bug? or am I missing something?&#010;&#010;{code:title=KafkaConsumer.java|borderStyle=solid}&#010;while (isRunAllowed() &amp;&amp; !isStoppingOrStopped() &amp;&amp; !isSuspendingOrSuspended())&#010;{&#010;                    ConsumerRecords&lt;Object, Object&gt; allRecords = consumer.poll(pollTimeoutMs);&#010;                    for (TopicPartition partition : allRecords.partitions()) {&#010;                        List&lt;ConsumerRecord&lt;Object, Object&gt;&gt; partitionRecords&#010;= allRecords&#010;                            .records(partition);&#010;                        for (ConsumerRecord&lt;Object, Object&gt; record : partitionRecords)&#010;{&#010;                            if (LOG.isTraceEnabled()) {&#010;                                LOG.trace(""partition = {}, offset = {}, key = {}, value =&#010;{}"", record.partition(), record.offset(), record.key(), record.value());&#010;                            }&#010;                            Exchange exchange = endpoint.createKafkaExchange(record);&#010;                            try {&#010;                                processor.process(exchange);&#010;                            } catch (Exception e) {&#010;                                getExceptionHandler().handleException(""Error during processing"",&#010;exchange, e);&#010;                            }&#010;                        }&#010;                        // if autocommit is false&#010;                        if (endpoint.getConfiguration().isAutoCommitEnable() != null&#010;                            &amp;&amp; !endpoint.getConfiguration().isAutoCommitEnable())&#010;{&#010;                            long partitionLastoffset = partitionRecords.get(partitionRecords.size()&#010;- 1).offset();&#010;                            consumer.commitSync(Collections.singletonMap(&#010;                                partition, new OffsetAndMetadata(partitionLastoffset + 1)));&#010;                        }&#010;                    }&#010;                }&#010;{code}&#010;&#010;Any insights are appreciated.&#010;&#010;&#010;  was:&#010;My processor in the router throws an exception but the Kafka component still commits the offsets.&#010;&#010;&#010;My route: (heavily redacted and modified)&#010;from( ""kafka://blah-blah"" ).routeId(""MyRoute"")&#010;                .convertBodyTo( MyData.class )&#010;                .process( ""MyProcessor"" )&#010;                .to( ""DestinationProcessor"" );&#010;&#010;The exception I get: &#010;        at com.mycompany.MyProcessor.process(MyProcessor.java:152)&#010;        at org.apache.camel.impl.ProcessorEndpoint.onExchange(ProcessorEndpoint.java:103)&#010;        at org.apache.camel.impl.ProcessorEndpoint$1.process(ProcessorEndpoint.java:71)&#010;        at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)&#010;        at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;        at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;        at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;        at org.apache.camel.processor.ChoiceProcessor.process(ChoiceProcessor.java:117)&#010;        at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;        at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;        at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;        at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:97)&#010;        at org.apache.camel.component.kafka.KafkaConsumer$KafkaFetchRecords.run(KafkaConsumer.java:140)&#010;        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#010;        at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;        at java.lang.Thread.run(Thread.java:745)&#010;Caused by: java.sql.SQLException: Exception occurred while getting connection: oracle.ucp.UniversalConnectionPoolException:&#010;Cannot get Connection from Datasource: java.sql.SQLException: Listener refused the connection&#010;with the following error:&#010;ORA-12514, TNS:listener does not currently know of service requested in connect descriptor&#010;&#010;Here is the corresponding Kafka component code:(KafkaConsumer.java) -This part of the code&#010;does not seem to handle the exception. The exception handler simply eats up the exception&#010;and the fall through code happily commits the offsets. Is this a bug? or am I missing something?&#010;&#010;while (isRunAllowed() &amp;&amp; !isStoppingOrStopped() &amp;&amp; !isSuspendingOrSuspended())&#010;{&#010;                    ConsumerRecords&lt;Object, Object&gt; allRecords = consumer.poll(pollTimeoutMs);&#010;                    for (TopicPartition partition : allRecords.partitions()) {&#010;                        List&lt;ConsumerRecord&lt;Object, Object&gt;&gt; partitionRecords&#010;= allRecords&#010;                            .records(partition);&#010;                        for (ConsumerRecord&lt;Object, Object&gt; record : partitionRecords)&#010;{&#010;                            if (LOG.isTraceEnabled()) {&#010;                                LOG.trace(""partition = {}, offset = {}, key = {}, value =&#010;{}"", record.partition(), record.offset(), record.key(), record.value());&#010;                            }&#010;                            Exchange exchange = endpoint.createKafkaExchange(record);&#010;                            try {&#010;                                processor.process(exchange);&#010;                            } catch (Exception e) {&#010;                                getExceptionHandler().handleException(""Error during processing"",&#010;exchange, e);&#010;                            }&#010;                        }&#010;                        // if autocommit is false&#010;                        if (endpoint.getConfiguration().isAutoCommitEnable() != null&#010;                            &amp;&amp; !endpoint.getConfiguration().isAutoCommitEnable())&#010;{&#010;                            long partitionLastoffset = partitionRecords.get(partitionRecords.size()&#010;- 1).offset();&#010;                            consumer.commitSync(Collections.singletonMap(&#010;                                partition, new OffsetAndMetadata(partitionLastoffset + 1)));&#010;                        }&#010;                    }&#010;                }&#010;&#010;Any insights are appreciated.&#010;&#010;&#010;&#010;&gt; Camel Kafka component commits offsets in case of exceptions&#010;&gt; -----------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11215&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11215&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-kafka&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Roger&#010;&gt;&#010;&gt; My processor in the router throws an exception but the Kafka component still commits&#010;the offsets. &#010;&gt; My route: (heavily redacted and modified)&#010;&gt; {code:title=Route|borderStyle=solid}&#010;&gt; from( ""kafka://blah-blah"" ).routeId(""MyRoute"")&#010;&gt;                 .convertBodyTo( MyData.class )&#010;&gt;                 .process( ""MyProcessor"" )&#010;&gt;                 .to( ""DestinationProcessor"" );&#010;&gt; {code}&#010;&gt; The exception I get: &#010;&gt; {code:title=Exception|borderStyle=solid}&#010;&gt;         at com.mycompany.MyProcessor.process(MyProcessor.java:152)&#010;&gt;         at org.apache.camel.impl.ProcessorEndpoint.onExchange(ProcessorEndpoint.java:103)&#010;&gt;         at org.apache.camel.impl.ProcessorEndpoint$1.process(ProcessorEndpoint.java:71)&#010;&gt;         at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)&#010;&gt;         at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:145)&#010;&gt;         at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt;         at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt;         at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt;         at org.apache.camel.processor.ChoiceProcessor.process(ChoiceProcessor.java:117)&#010;&gt;         at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)&#010;&gt;         at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:542)&#010;&gt;         at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt;         at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)&#010;&gt;         at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)&#010;&gt;         at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:197)&#010;&gt;         at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:97)&#010;&gt;         at org.apache.camel.component.kafka.KafkaConsumer$KafkaFetchRecords.run(KafkaConsumer.java:140)&#010;&gt;         at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)&#010;&gt;         at java.util.concurrent.FutureTask.run(FutureTask.java:266)&#010;&gt;         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#010;&gt;         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#010;&gt;         at java.lang.Thread.run(Thread.java:745)&#010;&gt; Caused by: java.sql.SQLException: Exception occurred while getting connection: oracle.ucp.UniversalConnectionPoolException:&#010;Cannot get Connection from Datasource: java.sql.SQLException: Listener refused the connection&#010;with the following error:&#010;&gt; ORA-12514, TNS:listener does not currently know of service requested in connect descriptor&#010;&gt; {code}&#010;&gt; Here is the corresponding Kafka component code:(KafkaConsumer.java) -This part of the&#010;code does not seem to handle the exception. The exception handler simply eats up the exception&#010;and the fall through code happily commits the offsets. Is this a bug? or am I missing something?&#010;&gt; {code:title=KafkaConsumer.java|borderStyle=solid}&#010;&gt; while (isRunAllowed() &amp;&amp; !isStoppingOrStopped() &amp;&amp; !isSuspendingOrSuspended())&#010;{&#010;&gt;                     ConsumerRecords&lt;Object, Object&gt; allRecords = consumer.poll(pollTimeoutMs);&#010;&gt;                     for (TopicPartition partition : allRecords.partitions()) {&#010;&gt;                         List&lt;ConsumerRecord&lt;Object, Object&gt;&gt; partitionRecords&#010;= allRecords&#010;&gt;                             .records(partition);&#010;&gt;                         for (ConsumerRecord&lt;Object, Object&gt; record : partitionRecords)&#010;{&#010;&gt;                             if (LOG.isTraceEnabled()) {&#010;&gt;                                 LOG.trace(""partition = {}, offset = {}, key = {}, value&#010;= {}"", record.partition(), record.offset(), record.key(), record.value());&#010;&gt;                             }&#010;&gt;                             Exchange exchange = endpoint.createKafkaExchange(record);&#010;&gt;                             try {&#010;&gt;                                 processor.process(exchange);&#010;&gt;                             } catch (Exception e) {&#010;&gt;                                 getExceptionHandler().handleException(""Error during processing"",&#010;exchange, e);&#010;&gt;                             }&#010;&gt;                         }&#010;&gt;                         // if autocommit is false&#010;&gt;                         if (endpoint.getConfiguration().isAutoCommitEnable() != null&#010;&gt;                             &amp;&amp; !endpoint.getConfiguration().isAutoCommitEnable())&#010;{&#010;&gt;                             long partitionLastoffset = partitionRecords.get(partitionRecords.size()&#010;- 1).offset();&#010;&gt;                             consumer.commitSync(Collections.singletonMap(&#010;&gt;                                 partition, new OffsetAndMetadata(partitionLastoffset&#010;+ 1)));&#010;&gt;                         }&#010;&gt;                     }&#010;&gt;                 }&#010;&gt; {code}&#010;&gt; Any insights are appreciated.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
918,923,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11216) REST-DSL - Producer fails with NPE or other exceptions if you have not set a hostname,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067602.1493359839000.75469.1493359864289%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 06:11:04 GMT","Claus Ibsen created CAMEL-11216:&#010;-----------------------------------&#010;&#010;             Summary: REST-DSL - Producer fails with NPE or other exceptions if you have not&#010;set a hostname&#010;                 Key: CAMEL-11216&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11216&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;    Affects Versions: 2.19.0&#010;            Reporter: Claus Ibsen&#010;&#010;&#010;If you forget to configure a host name then the rest producer fails with different errors&#010;if you use http4, netty4-http, undertow etc.&#010;&#010;We should likely add some validation logic in the rest endpoint / rest producer so it can&#010;detect this missing configuration and report this in the same way.&#010;&#010;You can reproduce from this example by removing host at&#010;https://github.com/apache/camel/blob/master/examples/camel-example-rest-producer/src/main/java/sample/camel/RestRoute.java#L33&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
919,924,,[jira] [Created] (CAMEL-11217) ExchangePattern issue with direct-vm component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067602.1493359839000.75469.1493359864289%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 06:11:04 GMT","Claus Ibsen created CAMEL-11216:&#010;-----------------------------------&#010;&#010;             Summary: REST-DSL - Producer fails with NPE or other exceptions if you have not&#010;set a hostname&#010;                 Key: CAMEL-11216&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11216&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-core&#010;    Affects Versions: 2.19.0&#010;            Reporter: Claus Ibsen&#010;&#010;&#010;If you forget to configure a host name then the rest producer fails with different errors&#010;if you use http4, netty4-http, undertow etc.&#010;&#010;We should likely add some validation logic in the rest endpoint / rest producer so it can&#010;detect this missing configuration and report this in the same way.&#010;&#010;You can reproduce from this example by removing host at&#010;https://github.com/apache/camel/blob/master/examples/camel-example-rest-producer/src/main/java/sample/camel/RestRoute.java#L33&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
920,925,Bernard Ligny (JIRA),  [jira] [Created] (CAMEL-11217) ExchangePattern issue with direct-vm component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067614.1493363675000.75810.1493363704256%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 07:15:04 GMT","Bernard Ligny created CAMEL-11217:&#010;-------------------------------------&#010;&#010;             Summary: ExchangePattern issue with direct-vm component&#010;                 Key: CAMEL-11217&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11217&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-core&#010;    Affects Versions: 2.18.3&#010;            Reporter: Bernard Ligny&#010;&#010;&#010;A *same* route definition with a In Only exchange behaves differently depending on whether&#010;the call to the sub-route (of the same CamelContext) is done using direct or direct-vm component.&#010;&#010;My personal conclusion is that the ExchangePattern for the sub-route invokation seems to vary:&#010;- In&amp;Out when ""direct:"" used in to uri&#010;- inherited from ""parent"" exchange (=InOnly) when ""direct-vm:"" used in to uri&#010;&#010;See full problem description (and exaemple) at Camel User forum:&#010;http://camel.465427.n5.nabble.com/Body-lost-with-intra-context-calls-using-direct-vm-component-td5798327.html&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
921,926,Bernard Ligny (JIRA),  [jira] [Updated] (CAMEL-11217) ExchangePattern issue with direct-vm component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067614.1493363675000.75813.1493363764148%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 07:16:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11217?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Bernard Ligny updated CAMEL-11217:&#010;----------------------------------&#010;    Description: &#010;A *same* route definition with a In Only exchange behaves differently depending on whether&#010;the call to the sub-route (of the same CamelContext) is done using direct or direct-vm component.&#010;&#010;My personal conclusion is that the ExchangePattern for the sub-route invokation seems to vary:&#010;- In&amp;Out when ""direct:"" used in to uri&#010;- inherited from ""parent"" exchange (=InOnly) when ""direct-vm:"" used in to uri&#010;&#010;See full problem description (and example) at Camel User forum:&#010;http://camel.465427.n5.nabble.com/Body-lost-with-intra-context-calls-using-direct-vm-component-td5798327.html&#010;&#010;&#010;  was:&#010;A *same* route definition with a In Only exchange behaves differently depending on whether&#010;the call to the sub-route (of the same CamelContext) is done using direct or direct-vm component.&#010;&#010;My personal conclusion is that the ExchangePattern for the sub-route invokation seems to vary:&#010;- In&amp;Out when ""direct:"" used in to uri&#010;- inherited from ""parent"" exchange (=InOnly) when ""direct-vm:"" used in to uri&#010;&#010;See full problem description (and exaemple) at Camel User forum:&#010;http://camel.465427.n5.nabble.com/Body-lost-with-intra-context-calls-using-direct-vm-component-td5798327.html&#010;&#010;&#010;&#010;&gt; ExchangePattern issue with direct-vm component&#010;&gt; ----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11217&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11217&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Bernard Ligny&#010;&gt;&#010;&gt; A *same* route definition with a In Only exchange behaves differently depending on whether&#010;the call to the sub-route (of the same CamelContext) is done using direct or direct-vm component.&#010;&gt; My personal conclusion is that the ExchangePattern for the sub-route invokation seems&#010;to vary:&#010;&gt; - In&amp;Out when ""direct:"" used in to uri&#010;&gt; - inherited from ""parent"" exchange (=InOnly) when ""direct-vm:"" used in to uri&#010;&gt; See full problem description (and example) at Camel User forum:&#010;&gt; http://camel.465427.n5.nabble.com/Body-lost-with-intra-context-calls-using-direct-vm-component-td5798327.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
922,927,Bernard Ligny (JIRA),  [jira] [Updated] (CAMEL-11217) ExchangePattern issue with direct-vm component,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067614.1493363675000.79532.1493392684084%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 15:18:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11217?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Bernard Ligny updated CAMEL-11217:&#010;----------------------------------&#010;    Description: &#010;A *same* route definition with a In Only exchange behaves differently depending on whether&#010;the call to the sub-route (of the same CamelContext) is done using direct or direct-vm component.&#010;&#010;My personal conclusion is that the ExchangePattern for the sub-route invokation seems to vary:&#010;- In&amp;Out when ""direct:"" used in to uri&#010;- inherited from ""parent"" exchange (=InOnly) when ""direct-vm:"" used in to uri&#010;&#010;See full problem description (and example) in Camel User forum:&#010;http://camel.465427.n5.nabble.com/Body-lost-with-intra-context-calls-using-direct-vm-component-td5798327.html&#010;&#010;&#010;  was:&#010;A *same* route definition with a In Only exchange behaves differently depending on whether&#010;the call to the sub-route (of the same CamelContext) is done using direct or direct-vm component.&#010;&#010;My personal conclusion is that the ExchangePattern for the sub-route invokation seems to vary:&#010;- In&amp;Out when ""direct:"" used in to uri&#010;- inherited from ""parent"" exchange (=InOnly) when ""direct-vm:"" used in to uri&#010;&#010;See full problem description (and example) at Camel User forum:&#010;http://camel.465427.n5.nabble.com/Body-lost-with-intra-context-calls-using-direct-vm-component-td5798327.html&#010;&#010;&#010;&#010;&gt; ExchangePattern issue with direct-vm component&#010;&gt; ----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11217&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11217&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Bernard Ligny&#010;&gt;&#010;&gt; A *same* route definition with a In Only exchange behaves differently depending on whether&#010;the call to the sub-route (of the same CamelContext) is done using direct or direct-vm component.&#010;&gt; My personal conclusion is that the ExchangePattern for the sub-route invokation seems&#010;to vary:&#010;&gt; - In&amp;Out when ""direct:"" used in to uri&#010;&gt; - inherited from ""parent"" exchange (=InOnly) when ""direct-vm:"" used in to uri&#010;&gt; See full problem description (and example) in Camel User forum:&#010;&gt; http://camel.465427.n5.nabble.com/Body-lost-with-intra-context-calls-using-direct-vm-component-td5798327.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
923,928,,[jira] [Created] (CAMEL-11218) Basic authentication not working,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067614.1493363675000.79532.1493392684084%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 15:18:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11217?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Bernard Ligny updated CAMEL-11217:&#010;----------------------------------&#010;    Description: &#010;A *same* route definition with a In Only exchange behaves differently depending on whether&#010;the call to the sub-route (of the same CamelContext) is done using direct or direct-vm component.&#010;&#010;My personal conclusion is that the ExchangePattern for the sub-route invokation seems to vary:&#010;- In&amp;Out when ""direct:"" used in to uri&#010;- inherited from ""parent"" exchange (=InOnly) when ""direct-vm:"" used in to uri&#010;&#010;See full problem description (and example) in Camel User forum:&#010;http://camel.465427.n5.nabble.com/Body-lost-with-intra-context-calls-using-direct-vm-component-td5798327.html&#010;&#010;&#010;  was:&#010;A *same* route definition with a In Only exchange behaves differently depending on whether&#010;the call to the sub-route (of the same CamelContext) is done using direct or direct-vm component.&#010;&#010;My personal conclusion is that the ExchangePattern for the sub-route invokation seems to vary:&#010;- In&amp;Out when ""direct:"" used in to uri&#010;- inherited from ""parent"" exchange (=InOnly) when ""direct-vm:"" used in to uri&#010;&#010;See full problem description (and example) at Camel User forum:&#010;http://camel.465427.n5.nabble.com/Body-lost-with-intra-context-calls-using-direct-vm-component-td5798327.html&#010;&#010;&#010;&#010;&gt; ExchangePattern issue with direct-vm component&#010;&gt; ----------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11217&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11217&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-core&#010;&gt;    Affects Versions: 2.18.3&#010;&gt;            Reporter: Bernard Ligny&#010;&gt;&#010;&gt; A *same* route definition with a In Only exchange behaves differently depending on whether&#010;the call to the sub-route (of the same CamelContext) is done using direct or direct-vm component.&#010;&gt; My personal conclusion is that the ExchangePattern for the sub-route invokation seems&#010;to vary:&#010;&gt; - In&amp;Out when ""direct:"" used in to uri&#010;&gt; - inherited from ""parent"" exchange (=InOnly) when ""direct-vm:"" used in to uri&#010;&gt; See full problem description (and example) in Camel User forum:&#010;&gt; http://camel.465427.n5.nabble.com/Body-lost-with-intra-context-calls-using-direct-vm-component-td5798327.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
924,929,Saravanakumar Selvaraj (JIRA),  [jira] [Created] (CAMEL-11218) Basic authentication not working,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067699.1493388727000.78929.1493388784199%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 14:13:04 GMT",Saravanakumar Selvaraj created CAMEL-11218:&#010;----------------------------------------------&#010;&#010;             Summary: Basic authentication not working&#010;                 Key: CAMEL-11218&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11218&#010;             Project: Camel&#010;          Issue Type: Bug&#010;          Components: camel-cxf&#010;            Reporter: Saravanakumar Selvaraj&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
925,930,Saravanakumar Selvaraj (JIRA),  [jira] [Updated] (CAMEL-11218) Basic authentication not working when using camel cxf as producer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067699.1493388727000.78979.1493389204050%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 14:20:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11218?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Saravanakumar Selvaraj updated CAMEL-11218:&#010;-------------------------------------------&#010;    Affects Version/s: 2.17.0&#010;          Description: &#010;According to http://camel.apache.org/cxf.html,  username and password options can be set in&#010;cxfEndpoint from camel 2.13.2 onwards.&#010;&#010;When tried to create a producer endpoint like,&#010;&#010;{code:xml}    &lt;cxf:cxfEndpoint id=""hello-ws-producer"" address=""http://localhost:8000/ws""&#010;        serviceClass=""com.mycompany.services.HelloWSService"" loggingFeatureEnabled=""true""&#010;username=""admin"" password=""admin""/&gt;{code}&#010;&#010; But it fails with following error&#010;&#010;{code}Caused by: org.xml.sax.SAXParseException: cvc-complex-type.3.2.2: Attribute 'username'&#010;is not allowed to appear in element 'camel-cxf:cxfEndpoint'.&#010;    at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:201){code}&#010;&#010;              Summary: Basic authentication not working when using camel cxf as producer &#010;(was: Basic authentication not working)&#010;&#010;&gt; Basic authentication not working when using camel cxf as producer&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11218&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11218&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-cxf&#010;&gt;    Affects Versions: 2.17.0&#010;&gt;            Reporter: Saravanakumar Selvaraj&#010;&gt;&#010;&gt; According to http://camel.apache.org/cxf.html,  username and password options can be&#010;set in cxfEndpoint from camel 2.13.2 onwards.&#010;&gt; When tried to create a producer endpoint like,&#010;&gt; {code:xml}    &lt;cxf:cxfEndpoint id=""hello-ws-producer"" address=""http://localhost:8000/ws""&#010;&gt;         serviceClass=""com.mycompany.services.HelloWSService"" loggingFeatureEnabled=""true""&#010;username=""admin"" password=""admin""/&gt;{code}&#010;&gt;  But it fails with following error&#010;&gt; {code}Caused by: org.xml.sax.SAXParseException: cvc-complex-type.3.2.2: Attribute 'username'&#010;is not allowed to appear in element 'camel-cxf:cxfEndpoint'.&#010;&gt;     at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:201){code}&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
926,931,Saravanakumar Selvaraj (JIRA),  [jira] [Updated] (CAMEL-11218) Basic authentication not working when using camel cxf as producer,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067699.1493388727000.79177.1493390584031%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 14:43:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11218?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Saravanakumar Selvaraj updated CAMEL-11218:&#010;-------------------------------------------&#010;    Description: &#010;According to http://camel.apache.org/cxf.html,  username and password options can be set in&#010;cxfEndpoint from camel 2.13.2 onwards.&#010;&#010;When tried to create a producer endpoint like,&#010;&#010;{code:xml}    &lt;cxf:cxfEndpoint id=""hello-ws-producer"" address=""http://localhost:8000/ws""&#010;        serviceClass=""com.mycompany.services.HelloWSService"" loggingFeatureEnabled=""true""&#010;username=""admin"" password=""admin""/&gt;{code}&#010;&#010; But it fails with following error&#010;&#010;{code}Caused by: org.xml.sax.SAXParseException: cvc-complex-type.3.2.2: Attribute 'username'&#010;is not allowed to appear in element 'camel-cxf:cxfEndpoint'.&#010;    at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:201){code}&#010;&#010;&#010;It appears to be this username and password elements are applicable for cxfrs component and&#010;not cxf component. &#010;&#010;So the following documentations need to be corrected.&#010;&#010;http://camel.apache.org/cxfrs.html&#010;http://camel.apache.org/cxf.html&#010;&#010;  was:&#010;According to http://camel.apache.org/cxf.html,  username and password options can be set in&#010;cxfEndpoint from camel 2.13.2 onwards.&#010;&#010;When tried to create a producer endpoint like,&#010;&#010;{code:xml}    &lt;cxf:cxfEndpoint id=""hello-ws-producer"" address=""http://localhost:8000/ws""&#010;        serviceClass=""com.mycompany.services.HelloWSService"" loggingFeatureEnabled=""true""&#010;username=""admin"" password=""admin""/&gt;{code}&#010;&#010; But it fails with following error&#010;&#010;{code}Caused by: org.xml.sax.SAXParseException: cvc-complex-type.3.2.2: Attribute 'username'&#010;is not allowed to appear in element 'camel-cxf:cxfEndpoint'.&#010;    at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:201){code}&#010;&#010;&#010;    Component/s: documentation&#010;                 camel-cxfrs&#010;&#010;&gt; Basic authentication not working when using camel cxf as producer&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11218&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11218&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-cxf, camel-cxfrs, documentation&#010;&gt;    Affects Versions: 2.17.0&#010;&gt;            Reporter: Saravanakumar Selvaraj&#010;&gt;&#010;&gt; According to http://camel.apache.org/cxf.html,  username and password options can be&#010;set in cxfEndpoint from camel 2.13.2 onwards.&#010;&gt; When tried to create a producer endpoint like,&#010;&gt; {code:xml}    &lt;cxf:cxfEndpoint id=""hello-ws-producer"" address=""http://localhost:8000/ws""&#010;&gt;         serviceClass=""com.mycompany.services.HelloWSService"" loggingFeatureEnabled=""true""&#010;username=""admin"" password=""admin""/&gt;{code}&#010;&gt;  But it fails with following error&#010;&gt; {code}Caused by: org.xml.sax.SAXParseException: cvc-complex-type.3.2.2: Attribute 'username'&#010;is not allowed to appear in element 'camel-cxf:cxfEndpoint'.&#010;&gt;     at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:201){code}&#010;&gt; It appears to be this username and password elements are applicable for cxfrs component&#010;and not cxf component. &#010;&gt; So the following documentations need to be corrected.&#010;&gt; http://camel.apache.org/cxfrs.html&#010;&gt; http://camel.apache.org/cxf.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
927,932,,[jira] [Created] (CAMEL-11219) Upgrade to RxJava 2.1.x,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067699.1493388727000.79177.1493390584031%40Atlassian.JIRA%3E,issues,"Fri, 28 Apr 2017 14:43:04 GMT","&#010;     [ https://issues.apache.org/jira/browse/CAMEL-11218?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel&#010;]&#010;&#010;Saravanakumar Selvaraj updated CAMEL-11218:&#010;-------------------------------------------&#010;    Description: &#010;According to http://camel.apache.org/cxf.html,  username and password options can be set in&#010;cxfEndpoint from camel 2.13.2 onwards.&#010;&#010;When tried to create a producer endpoint like,&#010;&#010;{code:xml}    &lt;cxf:cxfEndpoint id=""hello-ws-producer"" address=""http://localhost:8000/ws""&#010;        serviceClass=""com.mycompany.services.HelloWSService"" loggingFeatureEnabled=""true""&#010;username=""admin"" password=""admin""/&gt;{code}&#010;&#010; But it fails with following error&#010;&#010;{code}Caused by: org.xml.sax.SAXParseException: cvc-complex-type.3.2.2: Attribute 'username'&#010;is not allowed to appear in element 'camel-cxf:cxfEndpoint'.&#010;    at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:201){code}&#010;&#010;&#010;It appears to be this username and password elements are applicable for cxfrs component and&#010;not cxf component. &#010;&#010;So the following documentations need to be corrected.&#010;&#010;http://camel.apache.org/cxfrs.html&#010;http://camel.apache.org/cxf.html&#010;&#010;  was:&#010;According to http://camel.apache.org/cxf.html,  username and password options can be set in&#010;cxfEndpoint from camel 2.13.2 onwards.&#010;&#010;When tried to create a producer endpoint like,&#010;&#010;{code:xml}    &lt;cxf:cxfEndpoint id=""hello-ws-producer"" address=""http://localhost:8000/ws""&#010;        serviceClass=""com.mycompany.services.HelloWSService"" loggingFeatureEnabled=""true""&#010;username=""admin"" password=""admin""/&gt;{code}&#010;&#010; But it fails with following error&#010;&#010;{code}Caused by: org.xml.sax.SAXParseException: cvc-complex-type.3.2.2: Attribute 'username'&#010;is not allowed to appear in element 'camel-cxf:cxfEndpoint'.&#010;    at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:201){code}&#010;&#010;&#010;    Component/s: documentation&#010;                 camel-cxfrs&#010;&#010;&gt; Basic authentication not working when using camel cxf as producer&#010;&gt; -----------------------------------------------------------------&#010;&gt;&#010;&gt;                 Key: CAMEL-11218&#010;&gt;                 URL: https://issues.apache.org/jira/browse/CAMEL-11218&#010;&gt;             Project: Camel&#010;&gt;          Issue Type: Bug&#010;&gt;          Components: camel-cxf, camel-cxfrs, documentation&#010;&gt;    Affects Versions: 2.17.0&#010;&gt;            Reporter: Saravanakumar Selvaraj&#010;&gt;&#010;&gt; According to http://camel.apache.org/cxf.html,  username and password options can be&#010;set in cxfEndpoint from camel 2.13.2 onwards.&#010;&gt; When tried to create a producer endpoint like,&#010;&gt; {code:xml}    &lt;cxf:cxfEndpoint id=""hello-ws-producer"" address=""http://localhost:8000/ws""&#010;&gt;         serviceClass=""com.mycompany.services.HelloWSService"" loggingFeatureEnabled=""true""&#010;username=""admin"" password=""admin""/&gt;{code}&#010;&gt;  But it fails with following error&#010;&gt; {code}Caused by: org.xml.sax.SAXParseException: cvc-complex-type.3.2.2: Attribute 'username'&#010;is not allowed to appear in element 'camel-cxf:cxfEndpoint'.&#010;&gt;     at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:201){code}&#010;&gt; It appears to be this username and password elements are applicable for cxfrs component&#010;and not cxf component. &#010;&gt; So the following documentations need to be corrected.&#010;&gt; http://camel.apache.org/cxfrs.html&#010;&gt; http://camel.apache.org/cxf.html&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
928,933,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11219) Upgrade to RxJava 2.1.x,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067924.1493452625000.84867.1493452684067%40Atlassian.JIRA%3E,issues,"Sat, 29 Apr 2017 07:58:04 GMT",Claus Ibsen created CAMEL-11219:&#010;-----------------------------------&#010;&#010;             Summary: Upgrade to RxJava 2.1.x&#010;                 Key: CAMEL-11219&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11219&#010;             Project: Camel&#010;          Issue Type: Task&#010;            Reporter: Claus Ibsen&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
929,934,,[jira] [Created] (CAMEL-11220) camel-twitter - Allow to sort tweets so oldest come first,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067924.1493452625000.84867.1493452684067%40Atlassian.JIRA%3E,issues,"Sat, 29 Apr 2017 07:58:04 GMT",Claus Ibsen created CAMEL-11219:&#010;-----------------------------------&#010;&#010;             Summary: Upgrade to RxJava 2.1.x&#010;                 Key: CAMEL-11219&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11219&#010;             Project: Camel&#010;          Issue Type: Task&#010;            Reporter: Claus Ibsen&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;
930,935,Claus Ibsen (JIRA),  [jira] [Created] (CAMEL-11220) camel-twitter - Allow to sort tweets so oldest come first,http://mail-archives.apache.org/mod_mbox/camel-issues/201704.mbox/ajax/%3CJIRA.13067925.1493453554000.84898.1493453584024%40Atlassian.JIRA%3E,issues,"Sat, 29 Apr 2017 08:13:04 GMT","Claus Ibsen created CAMEL-11220:&#010;-----------------------------------&#010;&#010;             Summary: camel-twitter - Allow to sort tweets so oldest come first&#010;                 Key: CAMEL-11220&#010;                 URL: https://issues.apache.org/jira/browse/CAMEL-11220&#010;             Project: Camel&#010;          Issue Type: Improvement&#010;          Components: camel-twitter&#010;            Reporter: Claus Ibsen&#010;            Priority: Minor&#010;             Fix For: 2.20.0&#010;&#010;&#010;If you use from twitter, then the tweets may come with newest before oldest etc. And you may&#010;want to sort the batch of tweets by id so its oldest .. newest order, or to use a custom sorting.&#010;&#010;This applies to the poll mode where it poll X tweets and then emit then one by one. We should&#010;then sort first.&#010;&#010;&#010;&#010;--&#010;This message was sent by Atlassian JIRA&#010;(v6.3.15#6346)&#010;&#010;"
